
07.MY_PWM_CONTROL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  000010fc  00001190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001d7  0080017a  0080017a  0000120a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000120a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001268  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001551  00000000  00000000  000013e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dac  00000000  00000000  00002931  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c13  00000000  00000000  000036dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  000042f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000684  00000000  00000000  000045b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005ad  00000000  00000000  00004c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000051e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	67 c3       	rjmp	.+1742   	; 0x6e4 <__vector_5>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	e8 c1       	rjmp	.+976    	; 0x412 <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	d5 c2       	rjmp	.+1450   	; 0x5f4 <__vector_18>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec ef       	ldi	r30, 0xFC	; 252
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 37       	cpi	r26, 0x7A	; 122
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	aa e7       	ldi	r26, 0x7A	; 122
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a1 35       	cpi	r26, 0x51	; 81
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	e8 d1       	rcall	.+976    	; 0x494 <main>
      c4:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <init_button>:
void init_button(void);
int get_button(int button_num, int button_pin);
                                                
void init_button(void)
{
	BUTTON_DDR &= ~( 1 << BUTTON0PIN | 1 << BUTTON1PIN | 1 << BUTTON2PIN | 1 << BUTTON3PIN);
      ca:	81 b3       	in	r24, 0x11	; 17
      cc:	8f 70       	andi	r24, 0x0F	; 15
      ce:	81 bb       	out	0x11, r24	; 17
      d0:	08 95       	ret

000000d2 <get_button>:
	static unsigned char button_status[BUTTON_NUMER] =
	{BUTTON_RELEASE,BUTTON_RELEASE,BUTTON_RELEASE,BUTTON_RELEASE};	
	// 	지역 변수에 static을 쓰면 전역 변수처럼 함수를 빠져 나갔다 다시 들어 와도 값을 유지 한다.  
	int currtn_state;
	
	currtn_state = BUTTON_PIN & (1 << button_pin);   // 버튼을 읽는다. 
      d2:	40 b3       	in	r20, 0x10	; 16
	if (currtn_state && button_status[button_num] == BUTTON_RELEASE)  // 버튼이 처음 눌려진 noise high 
      d4:	21 e0       	ldi	r18, 0x01	; 1
      d6:	30 e0       	ldi	r19, 0x00	; 0
      d8:	02 c0       	rjmp	.+4      	; 0xde <get_button+0xc>
      da:	22 0f       	add	r18, r18
      dc:	33 1f       	adc	r19, r19
      de:	6a 95       	dec	r22
      e0:	e2 f7       	brpl	.-8      	; 0xda <get_button+0x8>
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	24 23       	and	r18, r20
      e6:	35 23       	and	r19, r21
      e8:	23 2b       	or	r18, r19
      ea:	b9 f0       	breq	.+46     	; 0x11a <get_button+0x48>
      ec:	fc 01       	movw	r30, r24
      ee:	e6 58       	subi	r30, 0x86	; 134
      f0:	fe 4f       	sbci	r31, 0xFE	; 254
      f2:	20 81       	ld	r18, Z
      f4:	21 11       	cpse	r18, r1
      f6:	27 c0       	rjmp	.+78     	; 0x146 <get_button+0x74>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      f8:	2f ef       	ldi	r18, 0xFF	; 255
      fa:	3d ee       	ldi	r19, 0xED	; 237
      fc:	42 e0       	ldi	r20, 0x02	; 2
      fe:	21 50       	subi	r18, 0x01	; 1
     100:	30 40       	sbci	r19, 0x00	; 0
     102:	40 40       	sbci	r20, 0x00	; 0
     104:	e1 f7       	brne	.-8      	; 0xfe <get_button+0x2c>
     106:	00 c0       	rjmp	.+0      	; 0x108 <get_button+0x36>
     108:	00 00       	nop
	{
		_delay_ms(60);   // noise가 지나가기를 기다린다. 
		button_status[button_num] = BUTTON_PRESS;   // noise가 지나간 상태의 High 상태 
     10a:	fc 01       	movw	r30, r24
     10c:	e6 58       	subi	r30, 0x86	; 134
     10e:	fe 4f       	sbci	r31, 0xFE	; 254
     110:	21 e0       	ldi	r18, 0x01	; 1
     112:	20 83       	st	Z, r18
		return 0;   // 아직은 완전히 눌렸다 떼어진 상태가 아니다. 
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	08 95       	ret
	}
	else if (currtn_state==BUTTON_RELEASE && button_status[button_num] == BUTTON_PRESS)
     11a:	fc 01       	movw	r30, r24
     11c:	e6 58       	subi	r30, 0x86	; 134
     11e:	fe 4f       	sbci	r31, 0xFE	; 254
     120:	20 81       	ld	r18, Z
     122:	21 30       	cpi	r18, 0x01	; 1
     124:	99 f4       	brne	.+38     	; 0x14c <get_button+0x7a>
     126:	2f ef       	ldi	r18, 0xFF	; 255
     128:	3d ee       	ldi	r19, 0xED	; 237
     12a:	42 e0       	ldi	r20, 0x02	; 2
     12c:	21 50       	subi	r18, 0x01	; 1
     12e:	30 40       	sbci	r19, 0x00	; 0
     130:	40 40       	sbci	r20, 0x00	; 0
     132:	e1 f7       	brne	.-8      	; 0x12c <get_button+0x5a>
     134:	00 c0       	rjmp	.+0      	; 0x136 <get_button+0x64>
     136:	00 00       	nop
	{
		_delay_ms(60);
		button_status[button_num] = BUTTON_RELEASE;   // 다음 버튼 체크를 위해서 초기화
     138:	fc 01       	movw	r30, r24
     13a:	e6 58       	subi	r30, 0x86	; 134
     13c:	fe 4f       	sbci	r31, 0xFE	; 254
     13e:	10 82       	st	Z, r1
		return 1;   // 완전히 1번 눌렸다 떼어진 상태로 인정		
     140:	81 e0       	ldi	r24, 0x01	; 1
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	08 95       	ret
	}
	
	return 0;   // 버튼이 open상태 
     146:	80 e0       	ldi	r24, 0x00	; 0
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	08 95       	ret
     14c:	80 e0       	ldi	r24, 0x00	; 0
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	08 95       	ret

00000152 <fnd_display1>:

extern volatile int msec_count;
extern uint32_t sec_count;  // 초를 재는 count변수 unsigned int --> uint32_t

void fnd_display1(void)
{
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	cd b7       	in	r28, 0x3d	; 61
     158:	de b7       	in	r29, 0x3e	; 62
     15a:	2b 97       	sbiw	r28, 0x0b	; 11
     15c:	0f b6       	in	r0, 0x3f	; 63
     15e:	f8 94       	cli
     160:	de bf       	out	0x3e, r29	; 62
     162:	0f be       	out	0x3f, r0	; 63
     164:	cd bf       	out	0x3d, r28	; 61
	// 0   1    2    3     4    5   6     7   8    9    .
	uint8_t fnd_font[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xd8,0x80,0x90,0x7f};
     166:	8b e0       	ldi	r24, 0x0B	; 11
     168:	e1 e0       	ldi	r30, 0x01	; 1
     16a:	f1 e0       	ldi	r31, 0x01	; 1
     16c:	de 01       	movw	r26, r28
     16e:	11 96       	adiw	r26, 0x01	; 1
     170:	01 90       	ld	r0, Z+
     172:	0d 92       	st	X+, r0
     174:	8a 95       	dec	r24
     176:	e1 f7       	brne	.-8      	; 0x170 <fnd_display1+0x1e>
		
	static int digit_select=0;  // static를 쓰면 전역 변수 처럼 함수가 빠져 나갔다가 다시 들어 오더라도 값을 유지
	
	switch(digit_select)
     178:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <digit_select.1740>
     17c:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <digit_select.1740+0x1>
     180:	81 30       	cpi	r24, 0x01	; 1
     182:	91 05       	cpc	r25, r1
     184:	01 f1       	breq	.+64     	; 0x1c6 <fnd_display1+0x74>
     186:	1c f4       	brge	.+6      	; 0x18e <fnd_display1+0x3c>
     188:	89 2b       	or	r24, r25
     18a:	41 f0       	breq	.+16     	; 0x19c <fnd_display1+0x4a>
     18c:	6f c0       	rjmp	.+222    	; 0x26c <fnd_display1+0x11a>
     18e:	82 30       	cpi	r24, 0x02	; 2
     190:	91 05       	cpc	r25, r1
     192:	a9 f1       	breq	.+106    	; 0x1fe <fnd_display1+0xac>
     194:	03 97       	sbiw	r24, 0x03	; 3
     196:	09 f4       	brne	.+2      	; 0x19a <fnd_display1+0x48>
     198:	4e c0       	rjmp	.+156    	; 0x236 <fnd_display1+0xe4>
     19a:	68 c0       	rjmp	.+208    	; 0x26c <fnd_display1+0x11a>
	{
		case 0:
			FND_DIGIT_PORT = 0x80;   //PORTB 7
     19c:	80 e8       	ldi	r24, 0x80	; 128
     19e:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font[sec_count % 10];   // 0~9초
     1a0:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     1a4:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     1a8:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     1ac:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     1b0:	2a e0       	ldi	r18, 0x0A	; 10
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	50 e0       	ldi	r21, 0x00	; 0
     1b8:	8e d4       	rcall	.+2332   	; 0xad6 <__udivmodsi4>
     1ba:	fe 01       	movw	r30, r28
     1bc:	e6 0f       	add	r30, r22
     1be:	f7 1f       	adc	r31, r23
     1c0:	81 81       	ldd	r24, Z+1	; 0x01
     1c2:	85 bb       	out	0x15, r24	; 21
			break;
     1c4:	53 c0       	rjmp	.+166    	; 0x26c <fnd_display1+0x11a>
		case 1:
			FND_DIGIT_PORT = 0x40;  //PORTB 6
     1c6:	80 e4       	ldi	r24, 0x40	; 64
     1c8:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font[sec_count / 10 % 6];   // 10단위초
     1ca:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     1ce:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     1d2:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     1d6:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     1da:	2a e0       	ldi	r18, 0x0A	; 10
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	40 e0       	ldi	r20, 0x00	; 0
     1e0:	50 e0       	ldi	r21, 0x00	; 0
     1e2:	79 d4       	rcall	.+2290   	; 0xad6 <__udivmodsi4>
     1e4:	ca 01       	movw	r24, r20
     1e6:	b9 01       	movw	r22, r18
     1e8:	26 e0       	ldi	r18, 0x06	; 6
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	40 e0       	ldi	r20, 0x00	; 0
     1ee:	50 e0       	ldi	r21, 0x00	; 0
     1f0:	72 d4       	rcall	.+2276   	; 0xad6 <__udivmodsi4>
     1f2:	fe 01       	movw	r30, r28
     1f4:	e6 0f       	add	r30, r22
     1f6:	f7 1f       	adc	r31, r23
     1f8:	81 81       	ldd	r24, Z+1	; 0x01
     1fa:	85 bb       	out	0x15, r24	; 21
			break;
     1fc:	37 c0       	rjmp	.+110    	; 0x26c <fnd_display1+0x11a>
		case 2:
			FND_DIGIT_PORT = 0x20; //PORTB 5
     1fe:	80 e2       	ldi	r24, 0x20	; 32
     200:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font[sec_count / 60 % 10];   // 1단위 분
     202:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     206:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     20a:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     20e:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     212:	2c e3       	ldi	r18, 0x3C	; 60
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	40 e0       	ldi	r20, 0x00	; 0
     218:	50 e0       	ldi	r21, 0x00	; 0
     21a:	5d d4       	rcall	.+2234   	; 0xad6 <__udivmodsi4>
     21c:	ca 01       	movw	r24, r20
     21e:	b9 01       	movw	r22, r18
     220:	2a e0       	ldi	r18, 0x0A	; 10
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	56 d4       	rcall	.+2220   	; 0xad6 <__udivmodsi4>
     22a:	fe 01       	movw	r30, r28
     22c:	e6 0f       	add	r30, r22
     22e:	f7 1f       	adc	r31, r23
     230:	81 81       	ldd	r24, Z+1	; 0x01
     232:	85 bb       	out	0x15, r24	; 21
			break;
     234:	1b c0       	rjmp	.+54     	; 0x26c <fnd_display1+0x11a>
		case 3:
			FND_DIGIT_PORT = 0x10;  //PORTB4
     236:	80 e1       	ldi	r24, 0x10	; 16
     238:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font[sec_count / 600 % 6];   // 10단위 분
     23a:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     23e:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     242:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     246:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     24a:	28 e5       	ldi	r18, 0x58	; 88
     24c:	32 e0       	ldi	r19, 0x02	; 2
     24e:	40 e0       	ldi	r20, 0x00	; 0
     250:	50 e0       	ldi	r21, 0x00	; 0
     252:	41 d4       	rcall	.+2178   	; 0xad6 <__udivmodsi4>
     254:	ca 01       	movw	r24, r20
     256:	b9 01       	movw	r22, r18
     258:	26 e0       	ldi	r18, 0x06	; 6
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	40 e0       	ldi	r20, 0x00	; 0
     25e:	50 e0       	ldi	r21, 0x00	; 0
     260:	3a d4       	rcall	.+2164   	; 0xad6 <__udivmodsi4>
     262:	fe 01       	movw	r30, r28
     264:	e6 0f       	add	r30, r22
     266:	f7 1f       	adc	r31, r23
     268:	81 81       	ldd	r24, Z+1	; 0x01
     26a:	85 bb       	out	0x15, r24	; 21
			break;
	}
	digit_select++;
	digit_select %= 4;   // 다음 표시할 자리수 선택
     26c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <digit_select.1740>
     270:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <digit_select.1740+0x1>
     274:	01 96       	adiw	r24, 0x01	; 1
     276:	83 70       	andi	r24, 0x03	; 3
     278:	90 78       	andi	r25, 0x80	; 128
     27a:	99 23       	and	r25, r25
     27c:	24 f4       	brge	.+8      	; 0x286 <fnd_display1+0x134>
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	8c 6f       	ori	r24, 0xFC	; 252
     282:	9f 6f       	ori	r25, 0xFF	; 255
     284:	01 96       	adiw	r24, 0x01	; 1
     286:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <digit_select.1740+0x1>
     28a:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <digit_select.1740>
}
     28e:	2b 96       	adiw	r28, 0x0b	; 11
     290:	0f b6       	in	r0, 0x3f	; 63
     292:	f8 94       	cli
     294:	de bf       	out	0x3e, r29	; 62
     296:	0f be       	out	0x3f, r0	; 63
     298:	cd bf       	out	0x3d, r28	; 61
     29a:	df 91       	pop	r29
     29c:	cf 91       	pop	r28
     29e:	08 95       	ret

000002a0 <fnd_display2>:

void fnd_display2(void)
{
     2a0:	cf 93       	push	r28
     2a2:	df 93       	push	r29
     2a4:	cd b7       	in	r28, 0x3d	; 61
     2a6:	de b7       	in	r29, 0x3e	; 62
     2a8:	c0 56       	subi	r28, 0x60	; 96
     2aa:	d1 09       	sbc	r29, r1
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
	// D4
	uint8_t fnd_font_D4[] = {0xFD,0xF9,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xF0,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xF6,0xF2,0xF0};
     2b6:	88 e1       	ldi	r24, 0x18	; 24
     2b8:	ec e0       	ldi	r30, 0x0C	; 12
     2ba:	f1 e0       	ldi	r31, 0x01	; 1
     2bc:	de 01       	movw	r26, r28
     2be:	11 96       	adiw	r26, 0x01	; 1
     2c0:	01 90       	ld	r0, Z+
     2c2:	0d 92       	st	X+, r0
     2c4:	8a 95       	dec	r24
     2c6:	e1 f7       	brne	.-8      	; 0x2c0 <fnd_display2+0x20>
	// D3
	uint8_t fnd_font_D3[] = {0xFF,0xFF,0xFF,0xF7,0xF7,0xF7,0xF7,0xF7,0xF7,0xF7,0xF6,0xF6,0xFF,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xF6,0xF6,0xF6,0xF6};
     2c8:	88 e1       	ldi	r24, 0x18	; 24
     2ca:	e4 e2       	ldi	r30, 0x24	; 36
     2cc:	f1 e0       	ldi	r31, 0x01	; 1
     2ce:	de 01       	movw	r26, r28
     2d0:	59 96       	adiw	r26, 0x19	; 25
     2d2:	01 90       	ld	r0, Z+
     2d4:	0d 92       	st	X+, r0
     2d6:	8a 95       	dec	r24
     2d8:	e1 f7       	brne	.-8      	; 0x2d2 <fnd_display2+0x32>
	// D2
	uint8_t fnd_font_D2[] = {0xFF,0xFF,0xFF,0xFF,0xF7,0xF7,0xF7,0xF7,0xF7,0xF6,0xF6,0xF6,0xFF,0xFF,0xFE,0xFE,0xFE,0xFE,0xFE,0xF6,0xF6,0xF6,0xF6,0xF6};
     2da:	88 e1       	ldi	r24, 0x18	; 24
     2dc:	ec e3       	ldi	r30, 0x3C	; 60
     2de:	f1 e0       	ldi	r31, 0x01	; 1
     2e0:	de 01       	movw	r26, r28
     2e2:	d1 96       	adiw	r26, 0x31	; 49
     2e4:	01 90       	ld	r0, Z+
     2e6:	0d 92       	st	X+, r0
     2e8:	8a 95       	dec	r24
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <fnd_display2+0x44>
	// D1
	uint8_t fnd_font_D1[] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0xE7,0xC7,0xC6,0xC6,0xC6,0xC6,0xFF,0xFF,0xFF,0xFE,0xDE,0xCE,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6};
     2ec:	88 e1       	ldi	r24, 0x18	; 24
     2ee:	e4 e5       	ldi	r30, 0x54	; 84
     2f0:	f1 e0       	ldi	r31, 0x01	; 1
     2f2:	de 01       	movw	r26, r28
     2f4:	a7 5b       	subi	r26, 0xB7	; 183
     2f6:	bf 4f       	sbci	r27, 0xFF	; 255
     2f8:	01 90       	ld	r0, Z+
     2fa:	0d 92       	st	X+, r0
     2fc:	8a 95       	dec	r24
     2fe:	e1 f7       	brne	.-8      	; 0x2f8 <fnd_display2+0x58>

	static int digit_select1=0;  // static를 쓰면 전역 변수 처럼 함수가 빠져 나갔다가 다시 들어 오더라도 값을 유지
	
	switch(digit_select1)
     300:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <digit_select1.1753>
     304:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <digit_select1.1753+0x1>
     308:	81 30       	cpi	r24, 0x01	; 1
     30a:	91 05       	cpc	r25, r1
     30c:	01 f1       	breq	.+64     	; 0x34e <fnd_display2+0xae>
     30e:	1c f4       	brge	.+6      	; 0x316 <fnd_display2+0x76>
     310:	89 2b       	or	r24, r25
     312:	41 f0       	breq	.+16     	; 0x324 <fnd_display2+0x84>
     314:	5d c0       	rjmp	.+186    	; 0x3d0 <fnd_display2+0x130>
     316:	82 30       	cpi	r24, 0x02	; 2
     318:	91 05       	cpc	r25, r1
     31a:	71 f1       	breq	.+92     	; 0x378 <fnd_display2+0xd8>
     31c:	03 97       	sbiw	r24, 0x03	; 3
     31e:	09 f4       	brne	.+2      	; 0x322 <fnd_display2+0x82>
     320:	40 c0       	rjmp	.+128    	; 0x3a2 <fnd_display2+0x102>
     322:	56 c0       	rjmp	.+172    	; 0x3d0 <fnd_display2+0x130>
	{
		case 0:
			FND_DIGIT_PORT = 0x08;   //PORTB 4
     324:	88 e0       	ldi	r24, 0x08	; 8
     326:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font_D4[sec_count % 24];   // 0~9초
     328:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     32c:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     330:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     334:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     338:	28 e1       	ldi	r18, 0x18	; 24
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	40 e0       	ldi	r20, 0x00	; 0
     33e:	50 e0       	ldi	r21, 0x00	; 0
     340:	ca d3       	rcall	.+1940   	; 0xad6 <__udivmodsi4>
     342:	fe 01       	movw	r30, r28
     344:	e6 0f       	add	r30, r22
     346:	f7 1f       	adc	r31, r23
     348:	81 81       	ldd	r24, Z+1	; 0x01
     34a:	85 bb       	out	0x15, r24	; 21
		break;
     34c:	41 c0       	rjmp	.+130    	; 0x3d0 <fnd_display2+0x130>
		case 1:
			FND_DIGIT_PORT = 0x04;  //PORTB 3
     34e:	84 e0       	ldi	r24, 0x04	; 4
     350:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font_D3[sec_count % 24];   // 10단위초
     352:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     356:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     35a:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     35e:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     362:	28 e1       	ldi	r18, 0x18	; 24
     364:	30 e0       	ldi	r19, 0x00	; 0
     366:	40 e0       	ldi	r20, 0x00	; 0
     368:	50 e0       	ldi	r21, 0x00	; 0
     36a:	b5 d3       	rcall	.+1898   	; 0xad6 <__udivmodsi4>
     36c:	fe 01       	movw	r30, r28
     36e:	e6 0f       	add	r30, r22
     370:	f7 1f       	adc	r31, r23
     372:	81 8d       	ldd	r24, Z+25	; 0x19
     374:	85 bb       	out	0x15, r24	; 21
		break;
     376:	2c c0       	rjmp	.+88     	; 0x3d0 <fnd_display2+0x130>
		case 2:
			FND_DIGIT_PORT = 0x02; //PORTB 2
     378:	82 e0       	ldi	r24, 0x02	; 2
     37a:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font_D2[sec_count % 24];   // 1단위 분
     37c:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     380:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     384:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     388:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     38c:	28 e1       	ldi	r18, 0x18	; 24
     38e:	30 e0       	ldi	r19, 0x00	; 0
     390:	40 e0       	ldi	r20, 0x00	; 0
     392:	50 e0       	ldi	r21, 0x00	; 0
     394:	a0 d3       	rcall	.+1856   	; 0xad6 <__udivmodsi4>
     396:	fe 01       	movw	r30, r28
     398:	e6 0f       	add	r30, r22
     39a:	f7 1f       	adc	r31, r23
     39c:	81 a9       	ldd	r24, Z+49	; 0x31
     39e:	85 bb       	out	0x15, r24	; 21
		break;
     3a0:	17 c0       	rjmp	.+46     	; 0x3d0 <fnd_display2+0x130>
		case 3:
			FND_DIGIT_PORT = 0x01;  //PORTB 1
     3a2:	81 e0       	ldi	r24, 0x01	; 1
     3a4:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font_D1[sec_count % 24];   // 10단위 분
     3a6:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <sec_count>
     3aa:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <sec_count+0x1>
     3ae:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <sec_count+0x2>
     3b2:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <sec_count+0x3>
     3b6:	28 e1       	ldi	r18, 0x18	; 24
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	40 e0       	ldi	r20, 0x00	; 0
     3bc:	50 e0       	ldi	r21, 0x00	; 0
     3be:	8b d3       	rcall	.+1814   	; 0xad6 <__udivmodsi4>
     3c0:	e9 e4       	ldi	r30, 0x49	; 73
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	ec 0f       	add	r30, r28
     3c6:	fd 1f       	adc	r31, r29
     3c8:	e6 0f       	add	r30, r22
     3ca:	f7 1f       	adc	r31, r23
     3cc:	80 81       	ld	r24, Z
     3ce:	85 bb       	out	0x15, r24	; 21
		break;
	}
	digit_select1++;
	digit_select1 %= 4;   // 다음 표시할 자리수 선택
     3d0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <digit_select1.1753>
     3d4:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <digit_select1.1753+0x1>
     3d8:	01 96       	adiw	r24, 0x01	; 1
     3da:	83 70       	andi	r24, 0x03	; 3
     3dc:	90 78       	andi	r25, 0x80	; 128
     3de:	99 23       	and	r25, r25
     3e0:	24 f4       	brge	.+8      	; 0x3ea <fnd_display2+0x14a>
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	8c 6f       	ori	r24, 0xFC	; 252
     3e6:	9f 6f       	ori	r25, 0xFF	; 255
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <digit_select1.1753+0x1>
     3ee:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <digit_select1.1753>
}
     3f2:	c0 5a       	subi	r28, 0xA0	; 160
     3f4:	df 4f       	sbci	r29, 0xFF	; 255
     3f6:	0f b6       	in	r0, 0x3f	; 63
     3f8:	f8 94       	cli
     3fa:	de bf       	out	0x3e, r29	; 62
     3fc:	0f be       	out	0x3f, r0	; 63
     3fe:	cd bf       	out	0x3d, r28	; 61
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <init_fnd>:

void init_fnd(void)
{
	FND_DATA_DDR = 0xff;  // 출력 모드로 설정
     406:	8f ef       	ldi	r24, 0xFF	; 255
     408:	84 bb       	out	0x14, r24	; 20
	// FND_DIGIT_DDR |= 0xf0;   // 자릿수 선택 7654 
	FND_DIGIT_DDR |= 1 << FND_DIGIT_D1 | 1 << FND_DIGIT_D2 | 1 << FND_DIGIT_D3 
     40a:	97 b3       	in	r25, 0x17	; 23
     40c:	87 bb       	out	0x17, r24	; 23
					 | 1 << FND_DIGIT_D4 | 1 << FND_DIGIT_D5 | 1 << FND_DIGIT_D6 | 1 << FND_DIGIT_D7 | 1 << FND_DIGIT_D8; 
	// fnd를 all off 
#if 0  // common 애노우드 
	FND_DATA_PORT = ~0x00;   // fnd를 all off  0xff;
#else  // common 캐소우드
	FND_DATA_PORT = 0x00;   // fnd를 all off   
     40e:	15 ba       	out	0x15, r1	; 21
     410:	08 95       	ret

00000412 <__vector_16>:
extern volatile uint8_t rx_msg_received;
volatile int msec_count=0;
volatile uint32_t sec_count = 0;  // 초를 재는 count변수 unsigned int --> uint32_t

ISR(TIMER0_OVF_vect)
{
     412:	1f 92       	push	r1
     414:	0f 92       	push	r0
     416:	0f b6       	in	r0, 0x3f	; 63
     418:	0f 92       	push	r0
     41a:	11 24       	eor	r1, r1
     41c:	8f 93       	push	r24
     41e:	9f 93       	push	r25
	TCNT0=6;
     420:	86 e0       	ldi	r24, 0x06	; 6
     422:	82 bf       	out	0x32, r24	; 50
	msec_count++;   // 1ms마다 1씩 증가
     424:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <msec_count>
     428:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <msec_count+0x1>
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <msec_count+0x1>
     432:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <msec_count>
}
     436:	9f 91       	pop	r25
     438:	8f 91       	pop	r24
     43a:	0f 90       	pop	r0
     43c:	0f be       	out	0x3f, r0	; 63
     43e:	0f 90       	pop	r0
     440:	1f 90       	pop	r1
     442:	18 95       	reti

00000444 <init_timer0>:
	
	return 0;
}
void init_timer0(void)
{
	TCNT0 = 6;   
     444:	86 e0       	ldi	r24, 0x06	; 6
     446:	82 bf       	out	0x32, r24	; 50
	TCCR0 |= 1 << CS02 | 0 << CS01 | 0 << CS00;  // TCCR0 |= 0xf4 보다는 죄측의 code 권장 
     448:	83 b7       	in	r24, 0x33	; 51
     44a:	84 60       	ori	r24, 0x04	; 4
     44c:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 1 << TOIE0;  // TIMSK |= 0x01; 
     44e:	87 b7       	in	r24, 0x37	; 55
     450:	81 60       	ori	r24, 0x01	; 1
     452:	87 bf       	out	0x37, r24	; 55
     454:	08 95       	ret

00000456 <pwm_cnt>:
}
void pwm_cnt(void)
{
	if(msec_count >= 1000)
     456:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <msec_count>
     45a:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <msec_count+0x1>
     45e:	88 3e       	cpi	r24, 0xE8	; 232
     460:	93 40       	sbci	r25, 0x03	; 3
     462:	bc f0       	brlt	.+46     	; 0x492 <pwm_cnt+0x3c>
	{
		msec_count = 0;
     464:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <msec_count+0x1>
     468:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <msec_count>
		sec_count++;
     46c:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <sec_count>
     470:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <sec_count+0x1>
     474:	a0 91 84 01 	lds	r26, 0x0184	; 0x800184 <sec_count+0x2>
     478:	b0 91 85 01 	lds	r27, 0x0185	; 0x800185 <sec_count+0x3>
     47c:	01 96       	adiw	r24, 0x01	; 1
     47e:	a1 1d       	adc	r26, r1
     480:	b1 1d       	adc	r27, r1
     482:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <sec_count>
     486:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <sec_count+0x1>
     48a:	a0 93 84 01 	sts	0x0184, r26	; 0x800184 <sec_count+0x2>
     48e:	b0 93 85 01 	sts	0x0185, r27	; 0x800185 <sec_count+0x3>
     492:	08 95       	ret

00000494 <main>:
	msec_count++;   // 1ms마다 1씩 증가
}

int main(void)
{
	init_fnd();
     494:	b8 df       	rcall	.-144    	; 0x406 <init_fnd>
	init_timer0();
     496:	d6 df       	rcall	.-84     	; 0x444 <init_timer0>
	init_button();
     498:	18 de       	rcall	.-976    	; 0xca <init_button>
	init_timer3();
     49a:	13 d0       	rcall	.+38     	; 0x4c2 <init_timer3>
	init_L298N();
     49c:	2a d0       	rcall	.+84     	; 0x4f2 <init_L298N>
     49e:	78 94       	sei
	
	sei();   // 전역(대문)으로 interrupt 허용
     4a0:	da df       	rcall	.-76     	; 0x456 <pwm_cnt>
	
	while(1)
	{
		pwm_cnt();
     4a2:	57 de       	rcall	.-850    	; 0x152 <fnd_display1>
     4a4:	8f e9       	ldi	r24, 0x9F	; 159
		fnd_display1();
     4a6:	9f e0       	ldi	r25, 0x0F	; 15
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <main+0x14>
     4ac:	00 c0       	rjmp	.+0      	; 0x4ae <main+0x1a>
     4ae:	00 00       	nop
     4b0:	f7 de       	rcall	.-530    	; 0x2a0 <fnd_display2>
     4b2:	8f e9       	ldi	r24, 0x9F	; 159
		_delay_ms(1);
		fnd_display2();
     4b4:	9f e0       	ldi	r25, 0x0F	; 15
     4b6:	01 97       	sbiw	r24, 0x01	; 1
     4b8:	f1 f7       	brne	.-4      	; 0x4b6 <main+0x22>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <main+0x28>
     4bc:	00 00       	nop
     4be:	27 d0       	rcall	.+78     	; 0x50e <L298N_pwm_fan_control_main>
     4c0:	ef cf       	rjmp	.-34     	; 0x4a0 <main+0xc>

000004c2 <init_timer3>:
		_delay_ms(1);
		L298N_pwm_fan_control_main();
     4c2:	82 b1       	in	r24, 0x02	; 2
     4c4:	88 62       	ori	r24, 0x28	; 40
     4c6:	82 b9       	out	0x02, r24	; 2
	{
		OCR3C = (OCR3C >= 250) ? 250 : OCR3C + 20;
	}
	else if(get_button(BUTTON2, BUTTON2PIN)) // speed-up
	{
		OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
     4c8:	ab e8       	ldi	r26, 0x8B	; 139
     4ca:	b0 e0       	ldi	r27, 0x00	; 0
     4cc:	8c 91       	ld	r24, X
     4ce:	81 60       	ori	r24, 0x01	; 1
     4d0:	8c 93       	st	X, r24
     4d2:	ea e8       	ldi	r30, 0x8A	; 138
     4d4:	f0 e0       	ldi	r31, 0x00	; 0
     4d6:	80 81       	ld	r24, Z
     4d8:	88 60       	ori	r24, 0x08	; 8
     4da:	80 83       	st	Z, r24
     4dc:	8c 91       	ld	r24, X
     4de:	88 60       	ori	r24, 0x08	; 8
     4e0:	8c 93       	st	X, r24
     4e2:	80 81       	ld	r24, Z
     4e4:	83 60       	ori	r24, 0x03	; 3
     4e6:	80 83       	st	Z, r24
     4e8:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     4ec:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     4f0:	08 95       	ret

000004f2 <init_L298N>:
     4f2:	e1 e6       	ldi	r30, 0x61	; 97
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	80 81       	ld	r24, Z
     4f8:	80 6c       	ori	r24, 0xC0	; 192
     4fa:	80 83       	st	Z, r24
     4fc:	e2 e6       	ldi	r30, 0x62	; 98
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	80 81       	ld	r24, Z
     502:	8f 73       	andi	r24, 0x3F	; 63
     504:	80 83       	st	Z, r24
     506:	80 81       	ld	r24, Z
     508:	80 64       	ori	r24, 0x40	; 64
     50a:	80 83       	st	Z, r24
     50c:	08 95       	ret

0000050e <L298N_pwm_fan_control_main>:
{
	static uint8_t start_button = 0;
	static uint8_t forward = 1;  // forward <---> backward
	
	
		if(get_button(BUTTON0, BUTTON0PIN)) // start/stop
     50e:	64 e0       	ldi	r22, 0x04	; 4
     510:	70 e0       	ldi	r23, 0x00	; 0
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	dd dd       	rcall	.-1094   	; 0xd2 <get_button>
     518:	89 2b       	or	r24, r25
     51a:	99 f0       	breq	.+38     	; 0x542 <L298N_pwm_fan_control_main+0x34>
		{
			start_button = !start_button; // toggle
     51c:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <start_button.1756>
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	81 11       	cpse	r24, r1
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <start_button.1756>
			OCR3C = (start_button) ? 250 : 0; // 250 : 모터 회전의 기본 값, 0: stop
     52a:	88 23       	and	r24, r24
     52c:	19 f0       	breq	.+6      	; 0x534 <L298N_pwm_fan_control_main+0x26>
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	02 c0       	rjmp	.+4      	; 0x538 <L298N_pwm_fan_control_main+0x2a>
     534:	8a ef       	ldi	r24, 0xFA	; 250
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     53c:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     540:	08 95       	ret
		}
		else if(get_button(BUTTON1, BUTTON1PIN)) // speed-up
     542:	65 e0       	ldi	r22, 0x05	; 5
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	c3 dd       	rcall	.-1146   	; 0xd2 <get_button>
     54c:	89 2b       	or	r24, r25
     54e:	a1 f0       	breq	.+40     	; 0x578 <L298N_pwm_fan_control_main+0x6a>
		{
			OCR3C = (OCR3C >= 250) ? 250 : OCR3C + 20;
     550:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     554:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     558:	8a 3f       	cpi	r24, 0xFA	; 250
     55a:	91 05       	cpc	r25, r1
     55c:	30 f4       	brcc	.+12     	; 0x56a <L298N_pwm_fan_control_main+0x5c>
     55e:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     562:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     566:	44 96       	adiw	r24, 0x14	; 20
     568:	02 c0       	rjmp	.+4      	; 0x56e <L298N_pwm_fan_control_main+0x60>
     56a:	8a ef       	ldi	r24, 0xFA	; 250
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     572:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     576:	08 95       	ret
		}
		else if(get_button(BUTTON2, BUTTON2PIN)) // speed-down
     578:	66 e0       	ldi	r22, 0x06	; 6
     57a:	70 e0       	ldi	r23, 0x00	; 0
     57c:	82 e0       	ldi	r24, 0x02	; 2
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	a8 dd       	rcall	.-1200   	; 0xd2 <get_button>
     582:	89 2b       	or	r24, r25
     584:	a1 f0       	breq	.+40     	; 0x5ae <L298N_pwm_fan_control_main+0xa0>
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
     586:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     58a:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     58e:	87 34       	cpi	r24, 0x47	; 71
     590:	91 05       	cpc	r25, r1
     592:	30 f0       	brcs	.+12     	; 0x5a0 <L298N_pwm_fan_control_main+0x92>
     594:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     598:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     59c:	44 97       	sbiw	r24, 0x14	; 20
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <L298N_pwm_fan_control_main+0x96>
     5a0:	8c e3       	ldi	r24, 0x3C	; 60
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     5a8:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     5ac:	08 95       	ret
		}
		else if(get_button(BUTTON3, BUTTON3PIN)) // 방향 설정
     5ae:	67 e0       	ldi	r22, 0x07	; 7
     5b0:	70 e0       	ldi	r23, 0x00	; 0
     5b2:	83 e0       	ldi	r24, 0x03	; 3
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	8d dd       	rcall	.-1254   	; 0xd2 <get_button>
     5b8:	89 2b       	or	r24, r25
     5ba:	d9 f0       	breq	.+54     	; 0x5f2 <L298N_pwm_fan_control_main+0xe4>
		{
			forward = !forward;
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     5c2:	91 11       	cpse	r25, r1
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			PORTF &= ~(1 << 6 | 1 << 7); // IN1 IN2 reset
     5ca:	e2 e6       	ldi	r30, 0x62	; 98
     5cc:	f0 e0       	ldi	r31, 0x00	; 0
     5ce:	80 81       	ld	r24, Z
     5d0:	8f 73       	andi	r24, 0x3F	; 63
     5d2:	80 83       	st	Z, r24
			PORTF = (forward) ? (PORTF |= 1 << 6) : (PORTF |= 1 << 7);
     5d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     5d8:	88 23       	and	r24, r24
     5da:	21 f0       	breq	.+8      	; 0x5e4 <L298N_pwm_fan_control_main+0xd6>
     5dc:	80 81       	ld	r24, Z
     5de:	80 64       	ori	r24, 0x40	; 64
     5e0:	80 83       	st	Z, r24
     5e2:	05 c0       	rjmp	.+10     	; 0x5ee <L298N_pwm_fan_control_main+0xe0>
     5e4:	e2 e6       	ldi	r30, 0x62	; 98
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	80 81       	ld	r24, Z
     5ea:	80 68       	ori	r24, 0x80	; 128
     5ec:	80 83       	st	Z, r24
     5ee:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     5f2:	08 95       	ret

000005f4 <__vector_18>:
*/

int mode = 0;
volatile uint8_t rx_msg_received=0;
ISR(USART0_RX_vect) // 가능한 짧게
{
     5f4:	1f 92       	push	r1
     5f6:	0f 92       	push	r0
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	0f 92       	push	r0
     5fc:	11 24       	eor	r1, r1
     5fe:	0b b6       	in	r0, 0x3b	; 59
     600:	0f 92       	push	r0
     602:	2f 93       	push	r18
     604:	3f 93       	push	r19
     606:	4f 93       	push	r20
     608:	5f 93       	push	r21
     60a:	6f 93       	push	r22
     60c:	7f 93       	push	r23
     60e:	8f 93       	push	r24
     610:	9f 93       	push	r25
     612:	af 93       	push	r26
     614:	bf 93       	push	r27
     616:	ef 93       	push	r30
     618:	ff 93       	push	r31
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	1f 92       	push	r1
     620:	cd b7       	in	r28, 0x3d	; 61
     622:	de b7       	in	r29, 0x3e	; 62
   volatile uint8_t rx_data;
   volatile static int i=0;
   
   rx_data = UDR0;  // uart0의 H/W register(UDR0)로 부터 1byte를 읽어 들인다. 
     624:	8c b1       	in	r24, 0x0c	; 12
     626:	89 83       	std	Y+1, r24	; 0x01
                    // rx_data = UDR0;를 실행하면 UDR0의 내용이 빈다.(empty)
   if (rx_data == '\n')
     628:	89 81       	ldd	r24, Y+1	; 0x01
     62a:	8a 30       	cpi	r24, 0x0A	; 10
     62c:	49 f5       	brne	.+82     	; 0x680 <__vector_18+0x8c>
   {
      rx_buff[rear++][i] = '\0';
     62e:	20 91 8b 01 	lds	r18, 0x018B	; 0x80018b <rear>
     632:	30 91 8c 01 	lds	r19, 0x018C	; 0x80018c <rear+0x1>
     636:	c9 01       	movw	r24, r18
     638:	01 96       	adiw	r24, 0x01	; 1
     63a:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <rear+0x1>
     63e:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <rear>
     642:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <i.1894>
     646:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <i.1894+0x1>
     64a:	48 e2       	ldi	r20, 0x28	; 40
     64c:	42 9f       	mul	r20, r18
     64e:	f0 01       	movw	r30, r0
     650:	43 9f       	mul	r20, r19
     652:	f0 0d       	add	r31, r0
     654:	11 24       	eor	r1, r1
     656:	e1 57       	subi	r30, 0x71	; 113
     658:	fe 4f       	sbci	r31, 0xFE	; 254
     65a:	e8 0f       	add	r30, r24
     65c:	f9 1f       	adc	r31, r25
     65e:	10 82       	st	Z, r1
      rear %= COMMAND_NUMBER; // rear : 0 ~ 9
     660:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <rear>
     664:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <rear+0x1>
     668:	6a e0       	ldi	r22, 0x0A	; 10
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	21 d2       	rcall	.+1090   	; 0xab0 <__divmodhi4>
     66e:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <rear+0x1>
     672:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <rear>
      i = 0; // 다음 string을 저장하기 위한 1차원 index값을 0으로
     676:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <i.1894+0x1>
     67a:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <i.1894>
     67e:	1c c0       	rjmp	.+56     	; 0x6b8 <__vector_18+0xc4>
      // !!!! rx_buff queue full check 하는 logic 추가 
   }
   else
   {
      rx_buff[rear][i++] = rx_data;
     680:	60 91 8b 01 	lds	r22, 0x018B	; 0x80018b <rear>
     684:	70 91 8c 01 	lds	r23, 0x018C	; 0x80018c <rear+0x1>
     688:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <i.1894>
     68c:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <i.1894+0x1>
     690:	9c 01       	movw	r18, r24
     692:	2f 5f       	subi	r18, 0xFF	; 255
     694:	3f 4f       	sbci	r19, 0xFF	; 255
     696:	30 93 8a 01 	sts	0x018A, r19	; 0x80018a <i.1894+0x1>
     69a:	20 93 89 01 	sts	0x0189, r18	; 0x800189 <i.1894>
     69e:	49 81       	ldd	r20, Y+1	; 0x01
     6a0:	58 e2       	ldi	r21, 0x28	; 40
     6a2:	56 9f       	mul	r21, r22
     6a4:	90 01       	movw	r18, r0
     6a6:	57 9f       	mul	r21, r23
     6a8:	30 0d       	add	r19, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	21 57       	subi	r18, 0x71	; 113
     6ae:	3e 4f       	sbci	r19, 0xFE	; 254
     6b0:	f9 01       	movw	r30, r18
     6b2:	e8 0f       	add	r30, r24
     6b4:	f9 1f       	adc	r31, r25
     6b6:	40 83       	st	Z, r20
      // COMMAND_LENGTH를 check하는 logic 추가
   }
}
     6b8:	0f 90       	pop	r0
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	ff 91       	pop	r31
     6c0:	ef 91       	pop	r30
     6c2:	bf 91       	pop	r27
     6c4:	af 91       	pop	r26
     6c6:	9f 91       	pop	r25
     6c8:	8f 91       	pop	r24
     6ca:	7f 91       	pop	r23
     6cc:	6f 91       	pop	r22
     6ce:	5f 91       	pop	r21
     6d0:	4f 91       	pop	r20
     6d2:	3f 91       	pop	r19
     6d4:	2f 91       	pop	r18
     6d6:	0f 90       	pop	r0
     6d8:	0b be       	out	0x3b, r0	; 59
     6da:	0f 90       	pop	r0
     6dc:	0f be       	out	0x3f, r0	; 63
     6de:	0f 90       	pop	r0
     6e0:	1f 90       	pop	r1
     6e2:	18 95       	reti

000006e4 <__vector_5>:

//P278 표 12-3
// PE4 : 외부 INT4 초음파 센서의 상승, 하강 엣지 둘다 INT가 ISR(INT4_vect)로 들어 온다.
// 결국 2번(상승: 1, 하강: 1) 들어 온다.
ISR(INT4_vect)
{
     6e4:	1f 92       	push	r1
     6e6:	0f 92       	push	r0
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	0f 92       	push	r0
     6ec:	11 24       	eor	r1, r1
     6ee:	0b b6       	in	r0, 0x3b	; 59
     6f0:	0f 92       	push	r0
     6f2:	2f 93       	push	r18
     6f4:	3f 93       	push	r19
     6f6:	4f 93       	push	r20
     6f8:	5f 93       	push	r21
     6fa:	6f 93       	push	r22
     6fc:	7f 93       	push	r23
     6fe:	8f 93       	push	r24
     700:	9f 93       	push	r25
     702:	af 93       	push	r26
     704:	bf 93       	push	r27
     706:	ef 93       	push	r30
     708:	ff 93       	push	r31
	// 1 상승에지
	if(ECHO_PIN & 1 << ECHO)
     70a:	0c 9b       	sbis	0x01, 4	; 1
     70c:	03 c0       	rjmp	.+6      	; 0x714 <__vector_5+0x30>
	{
		TCNT1 = 0;
     70e:	1d bc       	out	0x2d, r1	; 45
     710:	1c bc       	out	0x2c, r1	; 44
     712:	31 c0       	rjmp	.+98     	; 0x776 <__vector_5+0x92>
	}
	else // 2 하강에지
	{
		// ECHO핀에 들어온 펄스 갯수를 us 환산
		ultrasonic_dis = 1000000.0 * TCNT1 * 1024 / F_CPU;
     714:	6c b5       	in	r22, 0x2c	; 44
     716:	7d b5       	in	r23, 0x2d	; 45
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	d8 d0       	rcall	.+432    	; 0x8ce <__floatunsisf>
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	34 e2       	ldi	r19, 0x24	; 36
     722:	44 e7       	ldi	r20, 0x74	; 116
     724:	59 e4       	ldi	r21, 0x49	; 73
     726:	61 d1       	rcall	.+706    	; 0x9ea <__mulsf3>
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e8       	ldi	r20, 0x80	; 128
     72e:	54 e4       	ldi	r21, 0x44	; 68
     730:	5c d1       	rcall	.+696    	; 0x9ea <__mulsf3>
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	34 e2       	ldi	r19, 0x24	; 36
     736:	44 e7       	ldi	r20, 0x74	; 116
     738:	5b e4       	ldi	r21, 0x4B	; 75
     73a:	30 d0       	rcall	.+96     	; 0x79c <__divsf3>
     73c:	97 d0       	rcall	.+302    	; 0x86c <__fixsfsi>
     73e:	70 93 8e 01 	sts	0x018E, r23	; 0x80018e <ultrasonic_dis+0x1>
     742:	60 93 8d 01 	sts	0x018D, r22	; 0x80018d <ultrasonic_dis>
		// 예) TCINT에 10이 들어 있다고 가정 하자
		// 15.625KHZ의 주기 64us이다.
		// 0.000064sec(64us) * 10 = 0.00064sec(64us)
		// 640us / 58us(1cm이동 하는데 소요 시간) ==> 11cm이다.
		// --- 1cm : 58us
		sprintf(scm, "dis: %dcm\n", ultrasonic_dis / 58); // cm환산
     746:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <ultrasonic_dis>
     74a:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <ultrasonic_dis+0x1>
     74e:	6a e3       	ldi	r22, 0x3A	; 58
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	ae d1       	rcall	.+860    	; 0xab0 <__divmodhi4>
     754:	7f 93       	push	r23
     756:	6f 93       	push	r22
     758:	8c e6       	ldi	r24, 0x6C	; 108
     75a:	91 e0       	ldi	r25, 0x01	; 1
     75c:	9f 93       	push	r25
     75e:	8f 93       	push	r24
     760:	8f e1       	ldi	r24, 0x1F	; 31
     762:	93 e0       	ldi	r25, 0x03	; 3
     764:	9f 93       	push	r25
     766:	8f 93       	push	r24
     768:	ec d1       	rcall	.+984    	; 0xb42 <sprintf>
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
     76e:	0f 90       	pop	r0
     770:	0f 90       	pop	r0
     772:	0f 90       	pop	r0
     774:	0f 90       	pop	r0
	}
	
	// 2 하강에지
}
     776:	ff 91       	pop	r31
     778:	ef 91       	pop	r30
     77a:	bf 91       	pop	r27
     77c:	af 91       	pop	r26
     77e:	9f 91       	pop	r25
     780:	8f 91       	pop	r24
     782:	7f 91       	pop	r23
     784:	6f 91       	pop	r22
     786:	5f 91       	pop	r21
     788:	4f 91       	pop	r20
     78a:	3f 91       	pop	r19
     78c:	2f 91       	pop	r18
     78e:	0f 90       	pop	r0
     790:	0b be       	out	0x3b, r0	; 59
     792:	0f 90       	pop	r0
     794:	0f be       	out	0x3f, r0	; 63
     796:	0f 90       	pop	r0
     798:	1f 90       	pop	r1
     79a:	18 95       	reti

0000079c <__divsf3>:
     79c:	0c d0       	rcall	.+24     	; 0x7b6 <__divsf3x>
     79e:	eb c0       	rjmp	.+470    	; 0x976 <__fp_round>
     7a0:	e3 d0       	rcall	.+454    	; 0x968 <__fp_pscB>
     7a2:	40 f0       	brcs	.+16     	; 0x7b4 <__divsf3+0x18>
     7a4:	da d0       	rcall	.+436    	; 0x95a <__fp_pscA>
     7a6:	30 f0       	brcs	.+12     	; 0x7b4 <__divsf3+0x18>
     7a8:	21 f4       	brne	.+8      	; 0x7b2 <__divsf3+0x16>
     7aa:	5f 3f       	cpi	r21, 0xFF	; 255
     7ac:	19 f0       	breq	.+6      	; 0x7b4 <__divsf3+0x18>
     7ae:	cc c0       	rjmp	.+408    	; 0x948 <__fp_inf>
     7b0:	51 11       	cpse	r21, r1
     7b2:	15 c1       	rjmp	.+554    	; 0x9de <__fp_szero>
     7b4:	cf c0       	rjmp	.+414    	; 0x954 <__fp_nan>

000007b6 <__divsf3x>:
     7b6:	f0 d0       	rcall	.+480    	; 0x998 <__fp_split3>
     7b8:	98 f3       	brcs	.-26     	; 0x7a0 <__divsf3+0x4>

000007ba <__divsf3_pse>:
     7ba:	99 23       	and	r25, r25
     7bc:	c9 f3       	breq	.-14     	; 0x7b0 <__divsf3+0x14>
     7be:	55 23       	and	r21, r21
     7c0:	b1 f3       	breq	.-20     	; 0x7ae <__divsf3+0x12>
     7c2:	95 1b       	sub	r25, r21
     7c4:	55 0b       	sbc	r21, r21
     7c6:	bb 27       	eor	r27, r27
     7c8:	aa 27       	eor	r26, r26
     7ca:	62 17       	cp	r22, r18
     7cc:	73 07       	cpc	r23, r19
     7ce:	84 07       	cpc	r24, r20
     7d0:	38 f0       	brcs	.+14     	; 0x7e0 <__divsf3_pse+0x26>
     7d2:	9f 5f       	subi	r25, 0xFF	; 255
     7d4:	5f 4f       	sbci	r21, 0xFF	; 255
     7d6:	22 0f       	add	r18, r18
     7d8:	33 1f       	adc	r19, r19
     7da:	44 1f       	adc	r20, r20
     7dc:	aa 1f       	adc	r26, r26
     7de:	a9 f3       	breq	.-22     	; 0x7ca <__divsf3_pse+0x10>
     7e0:	33 d0       	rcall	.+102    	; 0x848 <__divsf3_pse+0x8e>
     7e2:	0e 2e       	mov	r0, r30
     7e4:	3a f0       	brmi	.+14     	; 0x7f4 <__divsf3_pse+0x3a>
     7e6:	e0 e8       	ldi	r30, 0x80	; 128
     7e8:	30 d0       	rcall	.+96     	; 0x84a <__divsf3_pse+0x90>
     7ea:	91 50       	subi	r25, 0x01	; 1
     7ec:	50 40       	sbci	r21, 0x00	; 0
     7ee:	e6 95       	lsr	r30
     7f0:	00 1c       	adc	r0, r0
     7f2:	ca f7       	brpl	.-14     	; 0x7e6 <__divsf3_pse+0x2c>
     7f4:	29 d0       	rcall	.+82     	; 0x848 <__divsf3_pse+0x8e>
     7f6:	fe 2f       	mov	r31, r30
     7f8:	27 d0       	rcall	.+78     	; 0x848 <__divsf3_pse+0x8e>
     7fa:	66 0f       	add	r22, r22
     7fc:	77 1f       	adc	r23, r23
     7fe:	88 1f       	adc	r24, r24
     800:	bb 1f       	adc	r27, r27
     802:	26 17       	cp	r18, r22
     804:	37 07       	cpc	r19, r23
     806:	48 07       	cpc	r20, r24
     808:	ab 07       	cpc	r26, r27
     80a:	b0 e8       	ldi	r27, 0x80	; 128
     80c:	09 f0       	breq	.+2      	; 0x810 <__divsf3_pse+0x56>
     80e:	bb 0b       	sbc	r27, r27
     810:	80 2d       	mov	r24, r0
     812:	bf 01       	movw	r22, r30
     814:	ff 27       	eor	r31, r31
     816:	93 58       	subi	r25, 0x83	; 131
     818:	5f 4f       	sbci	r21, 0xFF	; 255
     81a:	2a f0       	brmi	.+10     	; 0x826 <__divsf3_pse+0x6c>
     81c:	9e 3f       	cpi	r25, 0xFE	; 254
     81e:	51 05       	cpc	r21, r1
     820:	68 f0       	brcs	.+26     	; 0x83c <__divsf3_pse+0x82>
     822:	92 c0       	rjmp	.+292    	; 0x948 <__fp_inf>
     824:	dc c0       	rjmp	.+440    	; 0x9de <__fp_szero>
     826:	5f 3f       	cpi	r21, 0xFF	; 255
     828:	ec f3       	brlt	.-6      	; 0x824 <__divsf3_pse+0x6a>
     82a:	98 3e       	cpi	r25, 0xE8	; 232
     82c:	dc f3       	brlt	.-10     	; 0x824 <__divsf3_pse+0x6a>
     82e:	86 95       	lsr	r24
     830:	77 95       	ror	r23
     832:	67 95       	ror	r22
     834:	b7 95       	ror	r27
     836:	f7 95       	ror	r31
     838:	9f 5f       	subi	r25, 0xFF	; 255
     83a:	c9 f7       	brne	.-14     	; 0x82e <__divsf3_pse+0x74>
     83c:	88 0f       	add	r24, r24
     83e:	91 1d       	adc	r25, r1
     840:	96 95       	lsr	r25
     842:	87 95       	ror	r24
     844:	97 f9       	bld	r25, 7
     846:	08 95       	ret
     848:	e1 e0       	ldi	r30, 0x01	; 1
     84a:	66 0f       	add	r22, r22
     84c:	77 1f       	adc	r23, r23
     84e:	88 1f       	adc	r24, r24
     850:	bb 1f       	adc	r27, r27
     852:	62 17       	cp	r22, r18
     854:	73 07       	cpc	r23, r19
     856:	84 07       	cpc	r24, r20
     858:	ba 07       	cpc	r27, r26
     85a:	20 f0       	brcs	.+8      	; 0x864 <__divsf3_pse+0xaa>
     85c:	62 1b       	sub	r22, r18
     85e:	73 0b       	sbc	r23, r19
     860:	84 0b       	sbc	r24, r20
     862:	ba 0b       	sbc	r27, r26
     864:	ee 1f       	adc	r30, r30
     866:	88 f7       	brcc	.-30     	; 0x84a <__divsf3_pse+0x90>
     868:	e0 95       	com	r30
     86a:	08 95       	ret

0000086c <__fixsfsi>:
     86c:	04 d0       	rcall	.+8      	; 0x876 <__fixunssfsi>
     86e:	68 94       	set
     870:	b1 11       	cpse	r27, r1
     872:	b5 c0       	rjmp	.+362    	; 0x9de <__fp_szero>
     874:	08 95       	ret

00000876 <__fixunssfsi>:
     876:	98 d0       	rcall	.+304    	; 0x9a8 <__fp_splitA>
     878:	88 f0       	brcs	.+34     	; 0x89c <__fixunssfsi+0x26>
     87a:	9f 57       	subi	r25, 0x7F	; 127
     87c:	90 f0       	brcs	.+36     	; 0x8a2 <__fixunssfsi+0x2c>
     87e:	b9 2f       	mov	r27, r25
     880:	99 27       	eor	r25, r25
     882:	b7 51       	subi	r27, 0x17	; 23
     884:	a0 f0       	brcs	.+40     	; 0x8ae <__fixunssfsi+0x38>
     886:	d1 f0       	breq	.+52     	; 0x8bc <__fixunssfsi+0x46>
     888:	66 0f       	add	r22, r22
     88a:	77 1f       	adc	r23, r23
     88c:	88 1f       	adc	r24, r24
     88e:	99 1f       	adc	r25, r25
     890:	1a f0       	brmi	.+6      	; 0x898 <__fixunssfsi+0x22>
     892:	ba 95       	dec	r27
     894:	c9 f7       	brne	.-14     	; 0x888 <__fixunssfsi+0x12>
     896:	12 c0       	rjmp	.+36     	; 0x8bc <__fixunssfsi+0x46>
     898:	b1 30       	cpi	r27, 0x01	; 1
     89a:	81 f0       	breq	.+32     	; 0x8bc <__fixunssfsi+0x46>
     89c:	9f d0       	rcall	.+318    	; 0x9dc <__fp_zero>
     89e:	b1 e0       	ldi	r27, 0x01	; 1
     8a0:	08 95       	ret
     8a2:	9c c0       	rjmp	.+312    	; 0x9dc <__fp_zero>
     8a4:	67 2f       	mov	r22, r23
     8a6:	78 2f       	mov	r23, r24
     8a8:	88 27       	eor	r24, r24
     8aa:	b8 5f       	subi	r27, 0xF8	; 248
     8ac:	39 f0       	breq	.+14     	; 0x8bc <__fixunssfsi+0x46>
     8ae:	b9 3f       	cpi	r27, 0xF9	; 249
     8b0:	cc f3       	brlt	.-14     	; 0x8a4 <__fixunssfsi+0x2e>
     8b2:	86 95       	lsr	r24
     8b4:	77 95       	ror	r23
     8b6:	67 95       	ror	r22
     8b8:	b3 95       	inc	r27
     8ba:	d9 f7       	brne	.-10     	; 0x8b2 <__fixunssfsi+0x3c>
     8bc:	3e f4       	brtc	.+14     	; 0x8cc <__fixunssfsi+0x56>
     8be:	90 95       	com	r25
     8c0:	80 95       	com	r24
     8c2:	70 95       	com	r23
     8c4:	61 95       	neg	r22
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	8f 4f       	sbci	r24, 0xFF	; 255
     8ca:	9f 4f       	sbci	r25, 0xFF	; 255
     8cc:	08 95       	ret

000008ce <__floatunsisf>:
     8ce:	e8 94       	clt
     8d0:	09 c0       	rjmp	.+18     	; 0x8e4 <__floatsisf+0x12>

000008d2 <__floatsisf>:
     8d2:	97 fb       	bst	r25, 7
     8d4:	3e f4       	brtc	.+14     	; 0x8e4 <__floatsisf+0x12>
     8d6:	90 95       	com	r25
     8d8:	80 95       	com	r24
     8da:	70 95       	com	r23
     8dc:	61 95       	neg	r22
     8de:	7f 4f       	sbci	r23, 0xFF	; 255
     8e0:	8f 4f       	sbci	r24, 0xFF	; 255
     8e2:	9f 4f       	sbci	r25, 0xFF	; 255
     8e4:	99 23       	and	r25, r25
     8e6:	a9 f0       	breq	.+42     	; 0x912 <__floatsisf+0x40>
     8e8:	f9 2f       	mov	r31, r25
     8ea:	96 e9       	ldi	r25, 0x96	; 150
     8ec:	bb 27       	eor	r27, r27
     8ee:	93 95       	inc	r25
     8f0:	f6 95       	lsr	r31
     8f2:	87 95       	ror	r24
     8f4:	77 95       	ror	r23
     8f6:	67 95       	ror	r22
     8f8:	b7 95       	ror	r27
     8fa:	f1 11       	cpse	r31, r1
     8fc:	f8 cf       	rjmp	.-16     	; 0x8ee <__floatsisf+0x1c>
     8fe:	fa f4       	brpl	.+62     	; 0x93e <__floatsisf+0x6c>
     900:	bb 0f       	add	r27, r27
     902:	11 f4       	brne	.+4      	; 0x908 <__floatsisf+0x36>
     904:	60 ff       	sbrs	r22, 0
     906:	1b c0       	rjmp	.+54     	; 0x93e <__floatsisf+0x6c>
     908:	6f 5f       	subi	r22, 0xFF	; 255
     90a:	7f 4f       	sbci	r23, 0xFF	; 255
     90c:	8f 4f       	sbci	r24, 0xFF	; 255
     90e:	9f 4f       	sbci	r25, 0xFF	; 255
     910:	16 c0       	rjmp	.+44     	; 0x93e <__floatsisf+0x6c>
     912:	88 23       	and	r24, r24
     914:	11 f0       	breq	.+4      	; 0x91a <__floatsisf+0x48>
     916:	96 e9       	ldi	r25, 0x96	; 150
     918:	11 c0       	rjmp	.+34     	; 0x93c <__floatsisf+0x6a>
     91a:	77 23       	and	r23, r23
     91c:	21 f0       	breq	.+8      	; 0x926 <__floatsisf+0x54>
     91e:	9e e8       	ldi	r25, 0x8E	; 142
     920:	87 2f       	mov	r24, r23
     922:	76 2f       	mov	r23, r22
     924:	05 c0       	rjmp	.+10     	; 0x930 <__floatsisf+0x5e>
     926:	66 23       	and	r22, r22
     928:	71 f0       	breq	.+28     	; 0x946 <__floatsisf+0x74>
     92a:	96 e8       	ldi	r25, 0x86	; 134
     92c:	86 2f       	mov	r24, r22
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	2a f0       	brmi	.+10     	; 0x93e <__floatsisf+0x6c>
     934:	9a 95       	dec	r25
     936:	66 0f       	add	r22, r22
     938:	77 1f       	adc	r23, r23
     93a:	88 1f       	adc	r24, r24
     93c:	da f7       	brpl	.-10     	; 0x934 <__floatsisf+0x62>
     93e:	88 0f       	add	r24, r24
     940:	96 95       	lsr	r25
     942:	87 95       	ror	r24
     944:	97 f9       	bld	r25, 7
     946:	08 95       	ret

00000948 <__fp_inf>:
     948:	97 f9       	bld	r25, 7
     94a:	9f 67       	ori	r25, 0x7F	; 127
     94c:	80 e8       	ldi	r24, 0x80	; 128
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	60 e0       	ldi	r22, 0x00	; 0
     952:	08 95       	ret

00000954 <__fp_nan>:
     954:	9f ef       	ldi	r25, 0xFF	; 255
     956:	80 ec       	ldi	r24, 0xC0	; 192
     958:	08 95       	ret

0000095a <__fp_pscA>:
     95a:	00 24       	eor	r0, r0
     95c:	0a 94       	dec	r0
     95e:	16 16       	cp	r1, r22
     960:	17 06       	cpc	r1, r23
     962:	18 06       	cpc	r1, r24
     964:	09 06       	cpc	r0, r25
     966:	08 95       	ret

00000968 <__fp_pscB>:
     968:	00 24       	eor	r0, r0
     96a:	0a 94       	dec	r0
     96c:	12 16       	cp	r1, r18
     96e:	13 06       	cpc	r1, r19
     970:	14 06       	cpc	r1, r20
     972:	05 06       	cpc	r0, r21
     974:	08 95       	ret

00000976 <__fp_round>:
     976:	09 2e       	mov	r0, r25
     978:	03 94       	inc	r0
     97a:	00 0c       	add	r0, r0
     97c:	11 f4       	brne	.+4      	; 0x982 <__fp_round+0xc>
     97e:	88 23       	and	r24, r24
     980:	52 f0       	brmi	.+20     	; 0x996 <__fp_round+0x20>
     982:	bb 0f       	add	r27, r27
     984:	40 f4       	brcc	.+16     	; 0x996 <__fp_round+0x20>
     986:	bf 2b       	or	r27, r31
     988:	11 f4       	brne	.+4      	; 0x98e <__fp_round+0x18>
     98a:	60 ff       	sbrs	r22, 0
     98c:	04 c0       	rjmp	.+8      	; 0x996 <__fp_round+0x20>
     98e:	6f 5f       	subi	r22, 0xFF	; 255
     990:	7f 4f       	sbci	r23, 0xFF	; 255
     992:	8f 4f       	sbci	r24, 0xFF	; 255
     994:	9f 4f       	sbci	r25, 0xFF	; 255
     996:	08 95       	ret

00000998 <__fp_split3>:
     998:	57 fd       	sbrc	r21, 7
     99a:	90 58       	subi	r25, 0x80	; 128
     99c:	44 0f       	add	r20, r20
     99e:	55 1f       	adc	r21, r21
     9a0:	59 f0       	breq	.+22     	; 0x9b8 <__fp_splitA+0x10>
     9a2:	5f 3f       	cpi	r21, 0xFF	; 255
     9a4:	71 f0       	breq	.+28     	; 0x9c2 <__fp_splitA+0x1a>
     9a6:	47 95       	ror	r20

000009a8 <__fp_splitA>:
     9a8:	88 0f       	add	r24, r24
     9aa:	97 fb       	bst	r25, 7
     9ac:	99 1f       	adc	r25, r25
     9ae:	61 f0       	breq	.+24     	; 0x9c8 <__fp_splitA+0x20>
     9b0:	9f 3f       	cpi	r25, 0xFF	; 255
     9b2:	79 f0       	breq	.+30     	; 0x9d2 <__fp_splitA+0x2a>
     9b4:	87 95       	ror	r24
     9b6:	08 95       	ret
     9b8:	12 16       	cp	r1, r18
     9ba:	13 06       	cpc	r1, r19
     9bc:	14 06       	cpc	r1, r20
     9be:	55 1f       	adc	r21, r21
     9c0:	f2 cf       	rjmp	.-28     	; 0x9a6 <__fp_split3+0xe>
     9c2:	46 95       	lsr	r20
     9c4:	f1 df       	rcall	.-30     	; 0x9a8 <__fp_splitA>
     9c6:	08 c0       	rjmp	.+16     	; 0x9d8 <__fp_splitA+0x30>
     9c8:	16 16       	cp	r1, r22
     9ca:	17 06       	cpc	r1, r23
     9cc:	18 06       	cpc	r1, r24
     9ce:	99 1f       	adc	r25, r25
     9d0:	f1 cf       	rjmp	.-30     	; 0x9b4 <__fp_splitA+0xc>
     9d2:	86 95       	lsr	r24
     9d4:	71 05       	cpc	r23, r1
     9d6:	61 05       	cpc	r22, r1
     9d8:	08 94       	sec
     9da:	08 95       	ret

000009dc <__fp_zero>:
     9dc:	e8 94       	clt

000009de <__fp_szero>:
     9de:	bb 27       	eor	r27, r27
     9e0:	66 27       	eor	r22, r22
     9e2:	77 27       	eor	r23, r23
     9e4:	cb 01       	movw	r24, r22
     9e6:	97 f9       	bld	r25, 7
     9e8:	08 95       	ret

000009ea <__mulsf3>:
     9ea:	0b d0       	rcall	.+22     	; 0xa02 <__mulsf3x>
     9ec:	c4 cf       	rjmp	.-120    	; 0x976 <__fp_round>
     9ee:	b5 df       	rcall	.-150    	; 0x95a <__fp_pscA>
     9f0:	28 f0       	brcs	.+10     	; 0x9fc <__mulsf3+0x12>
     9f2:	ba df       	rcall	.-140    	; 0x968 <__fp_pscB>
     9f4:	18 f0       	brcs	.+6      	; 0x9fc <__mulsf3+0x12>
     9f6:	95 23       	and	r25, r21
     9f8:	09 f0       	breq	.+2      	; 0x9fc <__mulsf3+0x12>
     9fa:	a6 cf       	rjmp	.-180    	; 0x948 <__fp_inf>
     9fc:	ab cf       	rjmp	.-170    	; 0x954 <__fp_nan>
     9fe:	11 24       	eor	r1, r1
     a00:	ee cf       	rjmp	.-36     	; 0x9de <__fp_szero>

00000a02 <__mulsf3x>:
     a02:	ca df       	rcall	.-108    	; 0x998 <__fp_split3>
     a04:	a0 f3       	brcs	.-24     	; 0x9ee <__mulsf3+0x4>

00000a06 <__mulsf3_pse>:
     a06:	95 9f       	mul	r25, r21
     a08:	d1 f3       	breq	.-12     	; 0x9fe <__mulsf3+0x14>
     a0a:	95 0f       	add	r25, r21
     a0c:	50 e0       	ldi	r21, 0x00	; 0
     a0e:	55 1f       	adc	r21, r21
     a10:	62 9f       	mul	r22, r18
     a12:	f0 01       	movw	r30, r0
     a14:	72 9f       	mul	r23, r18
     a16:	bb 27       	eor	r27, r27
     a18:	f0 0d       	add	r31, r0
     a1a:	b1 1d       	adc	r27, r1
     a1c:	63 9f       	mul	r22, r19
     a1e:	aa 27       	eor	r26, r26
     a20:	f0 0d       	add	r31, r0
     a22:	b1 1d       	adc	r27, r1
     a24:	aa 1f       	adc	r26, r26
     a26:	64 9f       	mul	r22, r20
     a28:	66 27       	eor	r22, r22
     a2a:	b0 0d       	add	r27, r0
     a2c:	a1 1d       	adc	r26, r1
     a2e:	66 1f       	adc	r22, r22
     a30:	82 9f       	mul	r24, r18
     a32:	22 27       	eor	r18, r18
     a34:	b0 0d       	add	r27, r0
     a36:	a1 1d       	adc	r26, r1
     a38:	62 1f       	adc	r22, r18
     a3a:	73 9f       	mul	r23, r19
     a3c:	b0 0d       	add	r27, r0
     a3e:	a1 1d       	adc	r26, r1
     a40:	62 1f       	adc	r22, r18
     a42:	83 9f       	mul	r24, r19
     a44:	a0 0d       	add	r26, r0
     a46:	61 1d       	adc	r22, r1
     a48:	22 1f       	adc	r18, r18
     a4a:	74 9f       	mul	r23, r20
     a4c:	33 27       	eor	r19, r19
     a4e:	a0 0d       	add	r26, r0
     a50:	61 1d       	adc	r22, r1
     a52:	23 1f       	adc	r18, r19
     a54:	84 9f       	mul	r24, r20
     a56:	60 0d       	add	r22, r0
     a58:	21 1d       	adc	r18, r1
     a5a:	82 2f       	mov	r24, r18
     a5c:	76 2f       	mov	r23, r22
     a5e:	6a 2f       	mov	r22, r26
     a60:	11 24       	eor	r1, r1
     a62:	9f 57       	subi	r25, 0x7F	; 127
     a64:	50 40       	sbci	r21, 0x00	; 0
     a66:	8a f0       	brmi	.+34     	; 0xa8a <__mulsf3_pse+0x84>
     a68:	e1 f0       	breq	.+56     	; 0xaa2 <__mulsf3_pse+0x9c>
     a6a:	88 23       	and	r24, r24
     a6c:	4a f0       	brmi	.+18     	; 0xa80 <__mulsf3_pse+0x7a>
     a6e:	ee 0f       	add	r30, r30
     a70:	ff 1f       	adc	r31, r31
     a72:	bb 1f       	adc	r27, r27
     a74:	66 1f       	adc	r22, r22
     a76:	77 1f       	adc	r23, r23
     a78:	88 1f       	adc	r24, r24
     a7a:	91 50       	subi	r25, 0x01	; 1
     a7c:	50 40       	sbci	r21, 0x00	; 0
     a7e:	a9 f7       	brne	.-22     	; 0xa6a <__mulsf3_pse+0x64>
     a80:	9e 3f       	cpi	r25, 0xFE	; 254
     a82:	51 05       	cpc	r21, r1
     a84:	70 f0       	brcs	.+28     	; 0xaa2 <__mulsf3_pse+0x9c>
     a86:	60 cf       	rjmp	.-320    	; 0x948 <__fp_inf>
     a88:	aa cf       	rjmp	.-172    	; 0x9de <__fp_szero>
     a8a:	5f 3f       	cpi	r21, 0xFF	; 255
     a8c:	ec f3       	brlt	.-6      	; 0xa88 <__mulsf3_pse+0x82>
     a8e:	98 3e       	cpi	r25, 0xE8	; 232
     a90:	dc f3       	brlt	.-10     	; 0xa88 <__mulsf3_pse+0x82>
     a92:	86 95       	lsr	r24
     a94:	77 95       	ror	r23
     a96:	67 95       	ror	r22
     a98:	b7 95       	ror	r27
     a9a:	f7 95       	ror	r31
     a9c:	e7 95       	ror	r30
     a9e:	9f 5f       	subi	r25, 0xFF	; 255
     aa0:	c1 f7       	brne	.-16     	; 0xa92 <__mulsf3_pse+0x8c>
     aa2:	fe 2b       	or	r31, r30
     aa4:	88 0f       	add	r24, r24
     aa6:	91 1d       	adc	r25, r1
     aa8:	96 95       	lsr	r25
     aaa:	87 95       	ror	r24
     aac:	97 f9       	bld	r25, 7
     aae:	08 95       	ret

00000ab0 <__divmodhi4>:
     ab0:	97 fb       	bst	r25, 7
     ab2:	07 2e       	mov	r0, r23
     ab4:	16 f4       	brtc	.+4      	; 0xaba <__divmodhi4+0xa>
     ab6:	00 94       	com	r0
     ab8:	06 d0       	rcall	.+12     	; 0xac6 <__divmodhi4_neg1>
     aba:	77 fd       	sbrc	r23, 7
     abc:	08 d0       	rcall	.+16     	; 0xace <__divmodhi4_neg2>
     abe:	2d d0       	rcall	.+90     	; 0xb1a <__udivmodhi4>
     ac0:	07 fc       	sbrc	r0, 7
     ac2:	05 d0       	rcall	.+10     	; 0xace <__divmodhi4_neg2>
     ac4:	3e f4       	brtc	.+14     	; 0xad4 <__divmodhi4_exit>

00000ac6 <__divmodhi4_neg1>:
     ac6:	90 95       	com	r25
     ac8:	81 95       	neg	r24
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	08 95       	ret

00000ace <__divmodhi4_neg2>:
     ace:	70 95       	com	r23
     ad0:	61 95       	neg	r22
     ad2:	7f 4f       	sbci	r23, 0xFF	; 255

00000ad4 <__divmodhi4_exit>:
     ad4:	08 95       	ret

00000ad6 <__udivmodsi4>:
     ad6:	a1 e2       	ldi	r26, 0x21	; 33
     ad8:	1a 2e       	mov	r1, r26
     ada:	aa 1b       	sub	r26, r26
     adc:	bb 1b       	sub	r27, r27
     ade:	fd 01       	movw	r30, r26
     ae0:	0d c0       	rjmp	.+26     	; 0xafc <__udivmodsi4_ep>

00000ae2 <__udivmodsi4_loop>:
     ae2:	aa 1f       	adc	r26, r26
     ae4:	bb 1f       	adc	r27, r27
     ae6:	ee 1f       	adc	r30, r30
     ae8:	ff 1f       	adc	r31, r31
     aea:	a2 17       	cp	r26, r18
     aec:	b3 07       	cpc	r27, r19
     aee:	e4 07       	cpc	r30, r20
     af0:	f5 07       	cpc	r31, r21
     af2:	20 f0       	brcs	.+8      	; 0xafc <__udivmodsi4_ep>
     af4:	a2 1b       	sub	r26, r18
     af6:	b3 0b       	sbc	r27, r19
     af8:	e4 0b       	sbc	r30, r20
     afa:	f5 0b       	sbc	r31, r21

00000afc <__udivmodsi4_ep>:
     afc:	66 1f       	adc	r22, r22
     afe:	77 1f       	adc	r23, r23
     b00:	88 1f       	adc	r24, r24
     b02:	99 1f       	adc	r25, r25
     b04:	1a 94       	dec	r1
     b06:	69 f7       	brne	.-38     	; 0xae2 <__udivmodsi4_loop>
     b08:	60 95       	com	r22
     b0a:	70 95       	com	r23
     b0c:	80 95       	com	r24
     b0e:	90 95       	com	r25
     b10:	9b 01       	movw	r18, r22
     b12:	ac 01       	movw	r20, r24
     b14:	bd 01       	movw	r22, r26
     b16:	cf 01       	movw	r24, r30
     b18:	08 95       	ret

00000b1a <__udivmodhi4>:
     b1a:	aa 1b       	sub	r26, r26
     b1c:	bb 1b       	sub	r27, r27
     b1e:	51 e1       	ldi	r21, 0x11	; 17
     b20:	07 c0       	rjmp	.+14     	; 0xb30 <__udivmodhi4_ep>

00000b22 <__udivmodhi4_loop>:
     b22:	aa 1f       	adc	r26, r26
     b24:	bb 1f       	adc	r27, r27
     b26:	a6 17       	cp	r26, r22
     b28:	b7 07       	cpc	r27, r23
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <__udivmodhi4_ep>
     b2c:	a6 1b       	sub	r26, r22
     b2e:	b7 0b       	sbc	r27, r23

00000b30 <__udivmodhi4_ep>:
     b30:	88 1f       	adc	r24, r24
     b32:	99 1f       	adc	r25, r25
     b34:	5a 95       	dec	r21
     b36:	a9 f7       	brne	.-22     	; 0xb22 <__udivmodhi4_loop>
     b38:	80 95       	com	r24
     b3a:	90 95       	com	r25
     b3c:	bc 01       	movw	r22, r24
     b3e:	cd 01       	movw	r24, r26
     b40:	08 95       	ret

00000b42 <sprintf>:
     b42:	0f 93       	push	r16
     b44:	1f 93       	push	r17
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	2e 97       	sbiw	r28, 0x0e	; 14
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	de bf       	out	0x3e, r29	; 62
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	cd bf       	out	0x3d, r28	; 61
     b5a:	0d 89       	ldd	r16, Y+21	; 0x15
     b5c:	1e 89       	ldd	r17, Y+22	; 0x16
     b5e:	86 e0       	ldi	r24, 0x06	; 6
     b60:	8c 83       	std	Y+4, r24	; 0x04
     b62:	1a 83       	std	Y+2, r17	; 0x02
     b64:	09 83       	std	Y+1, r16	; 0x01
     b66:	8f ef       	ldi	r24, 0xFF	; 255
     b68:	9f e7       	ldi	r25, 0x7F	; 127
     b6a:	9e 83       	std	Y+6, r25	; 0x06
     b6c:	8d 83       	std	Y+5, r24	; 0x05
     b6e:	ae 01       	movw	r20, r28
     b70:	47 5e       	subi	r20, 0xE7	; 231
     b72:	5f 4f       	sbci	r21, 0xFF	; 255
     b74:	6f 89       	ldd	r22, Y+23	; 0x17
     b76:	78 8d       	ldd	r23, Y+24	; 0x18
     b78:	ce 01       	movw	r24, r28
     b7a:	01 96       	adiw	r24, 0x01	; 1
     b7c:	10 d0       	rcall	.+32     	; 0xb9e <vfprintf>
     b7e:	ef 81       	ldd	r30, Y+7	; 0x07
     b80:	f8 85       	ldd	r31, Y+8	; 0x08
     b82:	e0 0f       	add	r30, r16
     b84:	f1 1f       	adc	r31, r17
     b86:	10 82       	st	Z, r1
     b88:	2e 96       	adiw	r28, 0x0e	; 14
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	1f 91       	pop	r17
     b9a:	0f 91       	pop	r16
     b9c:	08 95       	ret

00000b9e <vfprintf>:
     b9e:	2f 92       	push	r2
     ba0:	3f 92       	push	r3
     ba2:	4f 92       	push	r4
     ba4:	5f 92       	push	r5
     ba6:	6f 92       	push	r6
     ba8:	7f 92       	push	r7
     baa:	8f 92       	push	r8
     bac:	9f 92       	push	r9
     bae:	af 92       	push	r10
     bb0:	bf 92       	push	r11
     bb2:	cf 92       	push	r12
     bb4:	df 92       	push	r13
     bb6:	ef 92       	push	r14
     bb8:	ff 92       	push	r15
     bba:	0f 93       	push	r16
     bbc:	1f 93       	push	r17
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	cd b7       	in	r28, 0x3d	; 61
     bc4:	de b7       	in	r29, 0x3e	; 62
     bc6:	2b 97       	sbiw	r28, 0x0b	; 11
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	f8 94       	cli
     bcc:	de bf       	out	0x3e, r29	; 62
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	cd bf       	out	0x3d, r28	; 61
     bd2:	6c 01       	movw	r12, r24
     bd4:	7b 01       	movw	r14, r22
     bd6:	8a 01       	movw	r16, r20
     bd8:	fc 01       	movw	r30, r24
     bda:	17 82       	std	Z+7, r1	; 0x07
     bdc:	16 82       	std	Z+6, r1	; 0x06
     bde:	83 81       	ldd	r24, Z+3	; 0x03
     be0:	81 ff       	sbrs	r24, 1
     be2:	bf c1       	rjmp	.+894    	; 0xf62 <vfprintf+0x3c4>
     be4:	ce 01       	movw	r24, r28
     be6:	01 96       	adiw	r24, 0x01	; 1
     be8:	3c 01       	movw	r6, r24
     bea:	f6 01       	movw	r30, r12
     bec:	93 81       	ldd	r25, Z+3	; 0x03
     bee:	f7 01       	movw	r30, r14
     bf0:	93 fd       	sbrc	r25, 3
     bf2:	85 91       	lpm	r24, Z+
     bf4:	93 ff       	sbrs	r25, 3
     bf6:	81 91       	ld	r24, Z+
     bf8:	7f 01       	movw	r14, r30
     bfa:	88 23       	and	r24, r24
     bfc:	09 f4       	brne	.+2      	; 0xc00 <vfprintf+0x62>
     bfe:	ad c1       	rjmp	.+858    	; 0xf5a <vfprintf+0x3bc>
     c00:	85 32       	cpi	r24, 0x25	; 37
     c02:	39 f4       	brne	.+14     	; 0xc12 <vfprintf+0x74>
     c04:	93 fd       	sbrc	r25, 3
     c06:	85 91       	lpm	r24, Z+
     c08:	93 ff       	sbrs	r25, 3
     c0a:	81 91       	ld	r24, Z+
     c0c:	7f 01       	movw	r14, r30
     c0e:	85 32       	cpi	r24, 0x25	; 37
     c10:	21 f4       	brne	.+8      	; 0xc1a <vfprintf+0x7c>
     c12:	b6 01       	movw	r22, r12
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	d6 d1       	rcall	.+940    	; 0xfc4 <fputc>
     c18:	e8 cf       	rjmp	.-48     	; 0xbea <vfprintf+0x4c>
     c1a:	91 2c       	mov	r9, r1
     c1c:	21 2c       	mov	r2, r1
     c1e:	31 2c       	mov	r3, r1
     c20:	ff e1       	ldi	r31, 0x1F	; 31
     c22:	f3 15       	cp	r31, r3
     c24:	d8 f0       	brcs	.+54     	; 0xc5c <vfprintf+0xbe>
     c26:	8b 32       	cpi	r24, 0x2B	; 43
     c28:	79 f0       	breq	.+30     	; 0xc48 <vfprintf+0xaa>
     c2a:	38 f4       	brcc	.+14     	; 0xc3a <vfprintf+0x9c>
     c2c:	80 32       	cpi	r24, 0x20	; 32
     c2e:	79 f0       	breq	.+30     	; 0xc4e <vfprintf+0xb0>
     c30:	83 32       	cpi	r24, 0x23	; 35
     c32:	a1 f4       	brne	.+40     	; 0xc5c <vfprintf+0xbe>
     c34:	23 2d       	mov	r18, r3
     c36:	20 61       	ori	r18, 0x10	; 16
     c38:	1d c0       	rjmp	.+58     	; 0xc74 <vfprintf+0xd6>
     c3a:	8d 32       	cpi	r24, 0x2D	; 45
     c3c:	61 f0       	breq	.+24     	; 0xc56 <vfprintf+0xb8>
     c3e:	80 33       	cpi	r24, 0x30	; 48
     c40:	69 f4       	brne	.+26     	; 0xc5c <vfprintf+0xbe>
     c42:	23 2d       	mov	r18, r3
     c44:	21 60       	ori	r18, 0x01	; 1
     c46:	16 c0       	rjmp	.+44     	; 0xc74 <vfprintf+0xd6>
     c48:	83 2d       	mov	r24, r3
     c4a:	82 60       	ori	r24, 0x02	; 2
     c4c:	38 2e       	mov	r3, r24
     c4e:	e3 2d       	mov	r30, r3
     c50:	e4 60       	ori	r30, 0x04	; 4
     c52:	3e 2e       	mov	r3, r30
     c54:	2a c0       	rjmp	.+84     	; 0xcaa <vfprintf+0x10c>
     c56:	f3 2d       	mov	r31, r3
     c58:	f8 60       	ori	r31, 0x08	; 8
     c5a:	1d c0       	rjmp	.+58     	; 0xc96 <vfprintf+0xf8>
     c5c:	37 fc       	sbrc	r3, 7
     c5e:	2d c0       	rjmp	.+90     	; 0xcba <vfprintf+0x11c>
     c60:	20 ed       	ldi	r18, 0xD0	; 208
     c62:	28 0f       	add	r18, r24
     c64:	2a 30       	cpi	r18, 0x0A	; 10
     c66:	40 f0       	brcs	.+16     	; 0xc78 <vfprintf+0xda>
     c68:	8e 32       	cpi	r24, 0x2E	; 46
     c6a:	b9 f4       	brne	.+46     	; 0xc9a <vfprintf+0xfc>
     c6c:	36 fc       	sbrc	r3, 6
     c6e:	75 c1       	rjmp	.+746    	; 0xf5a <vfprintf+0x3bc>
     c70:	23 2d       	mov	r18, r3
     c72:	20 64       	ori	r18, 0x40	; 64
     c74:	32 2e       	mov	r3, r18
     c76:	19 c0       	rjmp	.+50     	; 0xcaa <vfprintf+0x10c>
     c78:	36 fe       	sbrs	r3, 6
     c7a:	06 c0       	rjmp	.+12     	; 0xc88 <vfprintf+0xea>
     c7c:	8a e0       	ldi	r24, 0x0A	; 10
     c7e:	98 9e       	mul	r9, r24
     c80:	20 0d       	add	r18, r0
     c82:	11 24       	eor	r1, r1
     c84:	92 2e       	mov	r9, r18
     c86:	11 c0       	rjmp	.+34     	; 0xcaa <vfprintf+0x10c>
     c88:	ea e0       	ldi	r30, 0x0A	; 10
     c8a:	2e 9e       	mul	r2, r30
     c8c:	20 0d       	add	r18, r0
     c8e:	11 24       	eor	r1, r1
     c90:	22 2e       	mov	r2, r18
     c92:	f3 2d       	mov	r31, r3
     c94:	f0 62       	ori	r31, 0x20	; 32
     c96:	3f 2e       	mov	r3, r31
     c98:	08 c0       	rjmp	.+16     	; 0xcaa <vfprintf+0x10c>
     c9a:	8c 36       	cpi	r24, 0x6C	; 108
     c9c:	21 f4       	brne	.+8      	; 0xca6 <vfprintf+0x108>
     c9e:	83 2d       	mov	r24, r3
     ca0:	80 68       	ori	r24, 0x80	; 128
     ca2:	38 2e       	mov	r3, r24
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <vfprintf+0x10c>
     ca6:	88 36       	cpi	r24, 0x68	; 104
     ca8:	41 f4       	brne	.+16     	; 0xcba <vfprintf+0x11c>
     caa:	f7 01       	movw	r30, r14
     cac:	93 fd       	sbrc	r25, 3
     cae:	85 91       	lpm	r24, Z+
     cb0:	93 ff       	sbrs	r25, 3
     cb2:	81 91       	ld	r24, Z+
     cb4:	7f 01       	movw	r14, r30
     cb6:	81 11       	cpse	r24, r1
     cb8:	b3 cf       	rjmp	.-154    	; 0xc20 <vfprintf+0x82>
     cba:	98 2f       	mov	r25, r24
     cbc:	9f 7d       	andi	r25, 0xDF	; 223
     cbe:	95 54       	subi	r25, 0x45	; 69
     cc0:	93 30       	cpi	r25, 0x03	; 3
     cc2:	28 f4       	brcc	.+10     	; 0xcce <vfprintf+0x130>
     cc4:	0c 5f       	subi	r16, 0xFC	; 252
     cc6:	1f 4f       	sbci	r17, 0xFF	; 255
     cc8:	9f e3       	ldi	r25, 0x3F	; 63
     cca:	99 83       	std	Y+1, r25	; 0x01
     ccc:	0d c0       	rjmp	.+26     	; 0xce8 <vfprintf+0x14a>
     cce:	83 36       	cpi	r24, 0x63	; 99
     cd0:	31 f0       	breq	.+12     	; 0xcde <vfprintf+0x140>
     cd2:	83 37       	cpi	r24, 0x73	; 115
     cd4:	71 f0       	breq	.+28     	; 0xcf2 <vfprintf+0x154>
     cd6:	83 35       	cpi	r24, 0x53	; 83
     cd8:	09 f0       	breq	.+2      	; 0xcdc <vfprintf+0x13e>
     cda:	55 c0       	rjmp	.+170    	; 0xd86 <vfprintf+0x1e8>
     cdc:	20 c0       	rjmp	.+64     	; 0xd1e <vfprintf+0x180>
     cde:	f8 01       	movw	r30, r16
     ce0:	80 81       	ld	r24, Z
     ce2:	89 83       	std	Y+1, r24	; 0x01
     ce4:	0e 5f       	subi	r16, 0xFE	; 254
     ce6:	1f 4f       	sbci	r17, 0xFF	; 255
     ce8:	88 24       	eor	r8, r8
     cea:	83 94       	inc	r8
     cec:	91 2c       	mov	r9, r1
     cee:	53 01       	movw	r10, r6
     cf0:	12 c0       	rjmp	.+36     	; 0xd16 <vfprintf+0x178>
     cf2:	28 01       	movw	r4, r16
     cf4:	f2 e0       	ldi	r31, 0x02	; 2
     cf6:	4f 0e       	add	r4, r31
     cf8:	51 1c       	adc	r5, r1
     cfa:	f8 01       	movw	r30, r16
     cfc:	a0 80       	ld	r10, Z
     cfe:	b1 80       	ldd	r11, Z+1	; 0x01
     d00:	36 fe       	sbrs	r3, 6
     d02:	03 c0       	rjmp	.+6      	; 0xd0a <vfprintf+0x16c>
     d04:	69 2d       	mov	r22, r9
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	02 c0       	rjmp	.+4      	; 0xd0e <vfprintf+0x170>
     d0a:	6f ef       	ldi	r22, 0xFF	; 255
     d0c:	7f ef       	ldi	r23, 0xFF	; 255
     d0e:	c5 01       	movw	r24, r10
     d10:	4e d1       	rcall	.+668    	; 0xfae <strnlen>
     d12:	4c 01       	movw	r8, r24
     d14:	82 01       	movw	r16, r4
     d16:	f3 2d       	mov	r31, r3
     d18:	ff 77       	andi	r31, 0x7F	; 127
     d1a:	3f 2e       	mov	r3, r31
     d1c:	15 c0       	rjmp	.+42     	; 0xd48 <vfprintf+0x1aa>
     d1e:	28 01       	movw	r4, r16
     d20:	22 e0       	ldi	r18, 0x02	; 2
     d22:	42 0e       	add	r4, r18
     d24:	51 1c       	adc	r5, r1
     d26:	f8 01       	movw	r30, r16
     d28:	a0 80       	ld	r10, Z
     d2a:	b1 80       	ldd	r11, Z+1	; 0x01
     d2c:	36 fe       	sbrs	r3, 6
     d2e:	03 c0       	rjmp	.+6      	; 0xd36 <vfprintf+0x198>
     d30:	69 2d       	mov	r22, r9
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	02 c0       	rjmp	.+4      	; 0xd3a <vfprintf+0x19c>
     d36:	6f ef       	ldi	r22, 0xFF	; 255
     d38:	7f ef       	ldi	r23, 0xFF	; 255
     d3a:	c5 01       	movw	r24, r10
     d3c:	2d d1       	rcall	.+602    	; 0xf98 <strnlen_P>
     d3e:	4c 01       	movw	r8, r24
     d40:	f3 2d       	mov	r31, r3
     d42:	f0 68       	ori	r31, 0x80	; 128
     d44:	3f 2e       	mov	r3, r31
     d46:	82 01       	movw	r16, r4
     d48:	33 fc       	sbrc	r3, 3
     d4a:	19 c0       	rjmp	.+50     	; 0xd7e <vfprintf+0x1e0>
     d4c:	82 2d       	mov	r24, r2
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	88 16       	cp	r8, r24
     d52:	99 06       	cpc	r9, r25
     d54:	a0 f4       	brcc	.+40     	; 0xd7e <vfprintf+0x1e0>
     d56:	b6 01       	movw	r22, r12
     d58:	80 e2       	ldi	r24, 0x20	; 32
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	33 d1       	rcall	.+614    	; 0xfc4 <fputc>
     d5e:	2a 94       	dec	r2
     d60:	f5 cf       	rjmp	.-22     	; 0xd4c <vfprintf+0x1ae>
     d62:	f5 01       	movw	r30, r10
     d64:	37 fc       	sbrc	r3, 7
     d66:	85 91       	lpm	r24, Z+
     d68:	37 fe       	sbrs	r3, 7
     d6a:	81 91       	ld	r24, Z+
     d6c:	5f 01       	movw	r10, r30
     d6e:	b6 01       	movw	r22, r12
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	28 d1       	rcall	.+592    	; 0xfc4 <fputc>
     d74:	21 10       	cpse	r2, r1
     d76:	2a 94       	dec	r2
     d78:	21 e0       	ldi	r18, 0x01	; 1
     d7a:	82 1a       	sub	r8, r18
     d7c:	91 08       	sbc	r9, r1
     d7e:	81 14       	cp	r8, r1
     d80:	91 04       	cpc	r9, r1
     d82:	79 f7       	brne	.-34     	; 0xd62 <vfprintf+0x1c4>
     d84:	e1 c0       	rjmp	.+450    	; 0xf48 <vfprintf+0x3aa>
     d86:	84 36       	cpi	r24, 0x64	; 100
     d88:	11 f0       	breq	.+4      	; 0xd8e <vfprintf+0x1f0>
     d8a:	89 36       	cpi	r24, 0x69	; 105
     d8c:	39 f5       	brne	.+78     	; 0xddc <vfprintf+0x23e>
     d8e:	f8 01       	movw	r30, r16
     d90:	37 fe       	sbrs	r3, 7
     d92:	07 c0       	rjmp	.+14     	; 0xda2 <vfprintf+0x204>
     d94:	60 81       	ld	r22, Z
     d96:	71 81       	ldd	r23, Z+1	; 0x01
     d98:	82 81       	ldd	r24, Z+2	; 0x02
     d9a:	93 81       	ldd	r25, Z+3	; 0x03
     d9c:	0c 5f       	subi	r16, 0xFC	; 252
     d9e:	1f 4f       	sbci	r17, 0xFF	; 255
     da0:	08 c0       	rjmp	.+16     	; 0xdb2 <vfprintf+0x214>
     da2:	60 81       	ld	r22, Z
     da4:	71 81       	ldd	r23, Z+1	; 0x01
     da6:	07 2e       	mov	r0, r23
     da8:	00 0c       	add	r0, r0
     daa:	88 0b       	sbc	r24, r24
     dac:	99 0b       	sbc	r25, r25
     dae:	0e 5f       	subi	r16, 0xFE	; 254
     db0:	1f 4f       	sbci	r17, 0xFF	; 255
     db2:	f3 2d       	mov	r31, r3
     db4:	ff 76       	andi	r31, 0x6F	; 111
     db6:	3f 2e       	mov	r3, r31
     db8:	97 ff       	sbrs	r25, 7
     dba:	09 c0       	rjmp	.+18     	; 0xdce <vfprintf+0x230>
     dbc:	90 95       	com	r25
     dbe:	80 95       	com	r24
     dc0:	70 95       	com	r23
     dc2:	61 95       	neg	r22
     dc4:	7f 4f       	sbci	r23, 0xFF	; 255
     dc6:	8f 4f       	sbci	r24, 0xFF	; 255
     dc8:	9f 4f       	sbci	r25, 0xFF	; 255
     dca:	f0 68       	ori	r31, 0x80	; 128
     dcc:	3f 2e       	mov	r3, r31
     dce:	2a e0       	ldi	r18, 0x0A	; 10
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	a3 01       	movw	r20, r6
     dd4:	33 d1       	rcall	.+614    	; 0x103c <__ultoa_invert>
     dd6:	88 2e       	mov	r8, r24
     dd8:	86 18       	sub	r8, r6
     dda:	44 c0       	rjmp	.+136    	; 0xe64 <vfprintf+0x2c6>
     ddc:	85 37       	cpi	r24, 0x75	; 117
     dde:	31 f4       	brne	.+12     	; 0xdec <vfprintf+0x24e>
     de0:	23 2d       	mov	r18, r3
     de2:	2f 7e       	andi	r18, 0xEF	; 239
     de4:	b2 2e       	mov	r11, r18
     de6:	2a e0       	ldi	r18, 0x0A	; 10
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	25 c0       	rjmp	.+74     	; 0xe36 <vfprintf+0x298>
     dec:	93 2d       	mov	r25, r3
     dee:	99 7f       	andi	r25, 0xF9	; 249
     df0:	b9 2e       	mov	r11, r25
     df2:	8f 36       	cpi	r24, 0x6F	; 111
     df4:	c1 f0       	breq	.+48     	; 0xe26 <vfprintf+0x288>
     df6:	18 f4       	brcc	.+6      	; 0xdfe <vfprintf+0x260>
     df8:	88 35       	cpi	r24, 0x58	; 88
     dfa:	79 f0       	breq	.+30     	; 0xe1a <vfprintf+0x27c>
     dfc:	ae c0       	rjmp	.+348    	; 0xf5a <vfprintf+0x3bc>
     dfe:	80 37       	cpi	r24, 0x70	; 112
     e00:	19 f0       	breq	.+6      	; 0xe08 <vfprintf+0x26a>
     e02:	88 37       	cpi	r24, 0x78	; 120
     e04:	21 f0       	breq	.+8      	; 0xe0e <vfprintf+0x270>
     e06:	a9 c0       	rjmp	.+338    	; 0xf5a <vfprintf+0x3bc>
     e08:	e9 2f       	mov	r30, r25
     e0a:	e0 61       	ori	r30, 0x10	; 16
     e0c:	be 2e       	mov	r11, r30
     e0e:	b4 fe       	sbrs	r11, 4
     e10:	0d c0       	rjmp	.+26     	; 0xe2c <vfprintf+0x28e>
     e12:	fb 2d       	mov	r31, r11
     e14:	f4 60       	ori	r31, 0x04	; 4
     e16:	bf 2e       	mov	r11, r31
     e18:	09 c0       	rjmp	.+18     	; 0xe2c <vfprintf+0x28e>
     e1a:	34 fe       	sbrs	r3, 4
     e1c:	0a c0       	rjmp	.+20     	; 0xe32 <vfprintf+0x294>
     e1e:	29 2f       	mov	r18, r25
     e20:	26 60       	ori	r18, 0x06	; 6
     e22:	b2 2e       	mov	r11, r18
     e24:	06 c0       	rjmp	.+12     	; 0xe32 <vfprintf+0x294>
     e26:	28 e0       	ldi	r18, 0x08	; 8
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	05 c0       	rjmp	.+10     	; 0xe36 <vfprintf+0x298>
     e2c:	20 e1       	ldi	r18, 0x10	; 16
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <vfprintf+0x298>
     e32:	20 e1       	ldi	r18, 0x10	; 16
     e34:	32 e0       	ldi	r19, 0x02	; 2
     e36:	f8 01       	movw	r30, r16
     e38:	b7 fe       	sbrs	r11, 7
     e3a:	07 c0       	rjmp	.+14     	; 0xe4a <vfprintf+0x2ac>
     e3c:	60 81       	ld	r22, Z
     e3e:	71 81       	ldd	r23, Z+1	; 0x01
     e40:	82 81       	ldd	r24, Z+2	; 0x02
     e42:	93 81       	ldd	r25, Z+3	; 0x03
     e44:	0c 5f       	subi	r16, 0xFC	; 252
     e46:	1f 4f       	sbci	r17, 0xFF	; 255
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0x2b8>
     e4a:	60 81       	ld	r22, Z
     e4c:	71 81       	ldd	r23, Z+1	; 0x01
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	0e 5f       	subi	r16, 0xFE	; 254
     e54:	1f 4f       	sbci	r17, 0xFF	; 255
     e56:	a3 01       	movw	r20, r6
     e58:	f1 d0       	rcall	.+482    	; 0x103c <__ultoa_invert>
     e5a:	88 2e       	mov	r8, r24
     e5c:	86 18       	sub	r8, r6
     e5e:	fb 2d       	mov	r31, r11
     e60:	ff 77       	andi	r31, 0x7F	; 127
     e62:	3f 2e       	mov	r3, r31
     e64:	36 fe       	sbrs	r3, 6
     e66:	0d c0       	rjmp	.+26     	; 0xe82 <vfprintf+0x2e4>
     e68:	23 2d       	mov	r18, r3
     e6a:	2e 7f       	andi	r18, 0xFE	; 254
     e6c:	a2 2e       	mov	r10, r18
     e6e:	89 14       	cp	r8, r9
     e70:	58 f4       	brcc	.+22     	; 0xe88 <vfprintf+0x2ea>
     e72:	34 fe       	sbrs	r3, 4
     e74:	0b c0       	rjmp	.+22     	; 0xe8c <vfprintf+0x2ee>
     e76:	32 fc       	sbrc	r3, 2
     e78:	09 c0       	rjmp	.+18     	; 0xe8c <vfprintf+0x2ee>
     e7a:	83 2d       	mov	r24, r3
     e7c:	8e 7e       	andi	r24, 0xEE	; 238
     e7e:	a8 2e       	mov	r10, r24
     e80:	05 c0       	rjmp	.+10     	; 0xe8c <vfprintf+0x2ee>
     e82:	b8 2c       	mov	r11, r8
     e84:	a3 2c       	mov	r10, r3
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <vfprintf+0x2f0>
     e88:	b8 2c       	mov	r11, r8
     e8a:	01 c0       	rjmp	.+2      	; 0xe8e <vfprintf+0x2f0>
     e8c:	b9 2c       	mov	r11, r9
     e8e:	a4 fe       	sbrs	r10, 4
     e90:	0f c0       	rjmp	.+30     	; 0xeb0 <vfprintf+0x312>
     e92:	fe 01       	movw	r30, r28
     e94:	e8 0d       	add	r30, r8
     e96:	f1 1d       	adc	r31, r1
     e98:	80 81       	ld	r24, Z
     e9a:	80 33       	cpi	r24, 0x30	; 48
     e9c:	21 f4       	brne	.+8      	; 0xea6 <vfprintf+0x308>
     e9e:	9a 2d       	mov	r25, r10
     ea0:	99 7e       	andi	r25, 0xE9	; 233
     ea2:	a9 2e       	mov	r10, r25
     ea4:	09 c0       	rjmp	.+18     	; 0xeb8 <vfprintf+0x31a>
     ea6:	a2 fe       	sbrs	r10, 2
     ea8:	06 c0       	rjmp	.+12     	; 0xeb6 <vfprintf+0x318>
     eaa:	b3 94       	inc	r11
     eac:	b3 94       	inc	r11
     eae:	04 c0       	rjmp	.+8      	; 0xeb8 <vfprintf+0x31a>
     eb0:	8a 2d       	mov	r24, r10
     eb2:	86 78       	andi	r24, 0x86	; 134
     eb4:	09 f0       	breq	.+2      	; 0xeb8 <vfprintf+0x31a>
     eb6:	b3 94       	inc	r11
     eb8:	a3 fc       	sbrc	r10, 3
     eba:	10 c0       	rjmp	.+32     	; 0xedc <vfprintf+0x33e>
     ebc:	a0 fe       	sbrs	r10, 0
     ebe:	06 c0       	rjmp	.+12     	; 0xecc <vfprintf+0x32e>
     ec0:	b2 14       	cp	r11, r2
     ec2:	80 f4       	brcc	.+32     	; 0xee4 <vfprintf+0x346>
     ec4:	28 0c       	add	r2, r8
     ec6:	92 2c       	mov	r9, r2
     ec8:	9b 18       	sub	r9, r11
     eca:	0d c0       	rjmp	.+26     	; 0xee6 <vfprintf+0x348>
     ecc:	b2 14       	cp	r11, r2
     ece:	58 f4       	brcc	.+22     	; 0xee6 <vfprintf+0x348>
     ed0:	b6 01       	movw	r22, r12
     ed2:	80 e2       	ldi	r24, 0x20	; 32
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	76 d0       	rcall	.+236    	; 0xfc4 <fputc>
     ed8:	b3 94       	inc	r11
     eda:	f8 cf       	rjmp	.-16     	; 0xecc <vfprintf+0x32e>
     edc:	b2 14       	cp	r11, r2
     ede:	18 f4       	brcc	.+6      	; 0xee6 <vfprintf+0x348>
     ee0:	2b 18       	sub	r2, r11
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <vfprintf+0x34a>
     ee4:	98 2c       	mov	r9, r8
     ee6:	21 2c       	mov	r2, r1
     ee8:	a4 fe       	sbrs	r10, 4
     eea:	0f c0       	rjmp	.+30     	; 0xf0a <vfprintf+0x36c>
     eec:	b6 01       	movw	r22, r12
     eee:	80 e3       	ldi	r24, 0x30	; 48
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	68 d0       	rcall	.+208    	; 0xfc4 <fputc>
     ef4:	a2 fe       	sbrs	r10, 2
     ef6:	16 c0       	rjmp	.+44     	; 0xf24 <vfprintf+0x386>
     ef8:	a1 fc       	sbrc	r10, 1
     efa:	03 c0       	rjmp	.+6      	; 0xf02 <vfprintf+0x364>
     efc:	88 e7       	ldi	r24, 0x78	; 120
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <vfprintf+0x368>
     f02:	88 e5       	ldi	r24, 0x58	; 88
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	b6 01       	movw	r22, r12
     f08:	0c c0       	rjmp	.+24     	; 0xf22 <vfprintf+0x384>
     f0a:	8a 2d       	mov	r24, r10
     f0c:	86 78       	andi	r24, 0x86	; 134
     f0e:	51 f0       	breq	.+20     	; 0xf24 <vfprintf+0x386>
     f10:	a1 fe       	sbrs	r10, 1
     f12:	02 c0       	rjmp	.+4      	; 0xf18 <vfprintf+0x37a>
     f14:	8b e2       	ldi	r24, 0x2B	; 43
     f16:	01 c0       	rjmp	.+2      	; 0xf1a <vfprintf+0x37c>
     f18:	80 e2       	ldi	r24, 0x20	; 32
     f1a:	a7 fc       	sbrc	r10, 7
     f1c:	8d e2       	ldi	r24, 0x2D	; 45
     f1e:	b6 01       	movw	r22, r12
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	50 d0       	rcall	.+160    	; 0xfc4 <fputc>
     f24:	89 14       	cp	r8, r9
     f26:	30 f4       	brcc	.+12     	; 0xf34 <vfprintf+0x396>
     f28:	b6 01       	movw	r22, r12
     f2a:	80 e3       	ldi	r24, 0x30	; 48
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	4a d0       	rcall	.+148    	; 0xfc4 <fputc>
     f30:	9a 94       	dec	r9
     f32:	f8 cf       	rjmp	.-16     	; 0xf24 <vfprintf+0x386>
     f34:	8a 94       	dec	r8
     f36:	f3 01       	movw	r30, r6
     f38:	e8 0d       	add	r30, r8
     f3a:	f1 1d       	adc	r31, r1
     f3c:	80 81       	ld	r24, Z
     f3e:	b6 01       	movw	r22, r12
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	40 d0       	rcall	.+128    	; 0xfc4 <fputc>
     f44:	81 10       	cpse	r8, r1
     f46:	f6 cf       	rjmp	.-20     	; 0xf34 <vfprintf+0x396>
     f48:	22 20       	and	r2, r2
     f4a:	09 f4       	brne	.+2      	; 0xf4e <vfprintf+0x3b0>
     f4c:	4e ce       	rjmp	.-868    	; 0xbea <vfprintf+0x4c>
     f4e:	b6 01       	movw	r22, r12
     f50:	80 e2       	ldi	r24, 0x20	; 32
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	37 d0       	rcall	.+110    	; 0xfc4 <fputc>
     f56:	2a 94       	dec	r2
     f58:	f7 cf       	rjmp	.-18     	; 0xf48 <vfprintf+0x3aa>
     f5a:	f6 01       	movw	r30, r12
     f5c:	86 81       	ldd	r24, Z+6	; 0x06
     f5e:	97 81       	ldd	r25, Z+7	; 0x07
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <vfprintf+0x3c8>
     f62:	8f ef       	ldi	r24, 0xFF	; 255
     f64:	9f ef       	ldi	r25, 0xFF	; 255
     f66:	2b 96       	adiw	r28, 0x0b	; 11
     f68:	0f b6       	in	r0, 0x3f	; 63
     f6a:	f8 94       	cli
     f6c:	de bf       	out	0x3e, r29	; 62
     f6e:	0f be       	out	0x3f, r0	; 63
     f70:	cd bf       	out	0x3d, r28	; 61
     f72:	df 91       	pop	r29
     f74:	cf 91       	pop	r28
     f76:	1f 91       	pop	r17
     f78:	0f 91       	pop	r16
     f7a:	ff 90       	pop	r15
     f7c:	ef 90       	pop	r14
     f7e:	df 90       	pop	r13
     f80:	cf 90       	pop	r12
     f82:	bf 90       	pop	r11
     f84:	af 90       	pop	r10
     f86:	9f 90       	pop	r9
     f88:	8f 90       	pop	r8
     f8a:	7f 90       	pop	r7
     f8c:	6f 90       	pop	r6
     f8e:	5f 90       	pop	r5
     f90:	4f 90       	pop	r4
     f92:	3f 90       	pop	r3
     f94:	2f 90       	pop	r2
     f96:	08 95       	ret

00000f98 <strnlen_P>:
     f98:	fc 01       	movw	r30, r24
     f9a:	05 90       	lpm	r0, Z+
     f9c:	61 50       	subi	r22, 0x01	; 1
     f9e:	70 40       	sbci	r23, 0x00	; 0
     fa0:	01 10       	cpse	r0, r1
     fa2:	d8 f7       	brcc	.-10     	; 0xf9a <strnlen_P+0x2>
     fa4:	80 95       	com	r24
     fa6:	90 95       	com	r25
     fa8:	8e 0f       	add	r24, r30
     faa:	9f 1f       	adc	r25, r31
     fac:	08 95       	ret

00000fae <strnlen>:
     fae:	fc 01       	movw	r30, r24
     fb0:	61 50       	subi	r22, 0x01	; 1
     fb2:	70 40       	sbci	r23, 0x00	; 0
     fb4:	01 90       	ld	r0, Z+
     fb6:	01 10       	cpse	r0, r1
     fb8:	d8 f7       	brcc	.-10     	; 0xfb0 <strnlen+0x2>
     fba:	80 95       	com	r24
     fbc:	90 95       	com	r25
     fbe:	8e 0f       	add	r24, r30
     fc0:	9f 1f       	adc	r25, r31
     fc2:	08 95       	ret

00000fc4 <fputc>:
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	fb 01       	movw	r30, r22
     fce:	23 81       	ldd	r18, Z+3	; 0x03
     fd0:	21 fd       	sbrc	r18, 1
     fd2:	03 c0       	rjmp	.+6      	; 0xfda <fputc+0x16>
     fd4:	8f ef       	ldi	r24, 0xFF	; 255
     fd6:	9f ef       	ldi	r25, 0xFF	; 255
     fd8:	2c c0       	rjmp	.+88     	; 0x1032 <fputc+0x6e>
     fda:	22 ff       	sbrs	r18, 2
     fdc:	16 c0       	rjmp	.+44     	; 0x100a <fputc+0x46>
     fde:	46 81       	ldd	r20, Z+6	; 0x06
     fe0:	57 81       	ldd	r21, Z+7	; 0x07
     fe2:	24 81       	ldd	r18, Z+4	; 0x04
     fe4:	35 81       	ldd	r19, Z+5	; 0x05
     fe6:	42 17       	cp	r20, r18
     fe8:	53 07       	cpc	r21, r19
     fea:	44 f4       	brge	.+16     	; 0xffc <fputc+0x38>
     fec:	a0 81       	ld	r26, Z
     fee:	b1 81       	ldd	r27, Z+1	; 0x01
     ff0:	9d 01       	movw	r18, r26
     ff2:	2f 5f       	subi	r18, 0xFF	; 255
     ff4:	3f 4f       	sbci	r19, 0xFF	; 255
     ff6:	31 83       	std	Z+1, r19	; 0x01
     ff8:	20 83       	st	Z, r18
     ffa:	8c 93       	st	X, r24
     ffc:	26 81       	ldd	r18, Z+6	; 0x06
     ffe:	37 81       	ldd	r19, Z+7	; 0x07
    1000:	2f 5f       	subi	r18, 0xFF	; 255
    1002:	3f 4f       	sbci	r19, 0xFF	; 255
    1004:	37 83       	std	Z+7, r19	; 0x07
    1006:	26 83       	std	Z+6, r18	; 0x06
    1008:	14 c0       	rjmp	.+40     	; 0x1032 <fputc+0x6e>
    100a:	8b 01       	movw	r16, r22
    100c:	ec 01       	movw	r28, r24
    100e:	fb 01       	movw	r30, r22
    1010:	00 84       	ldd	r0, Z+8	; 0x08
    1012:	f1 85       	ldd	r31, Z+9	; 0x09
    1014:	e0 2d       	mov	r30, r0
    1016:	09 95       	icall
    1018:	89 2b       	or	r24, r25
    101a:	e1 f6       	brne	.-72     	; 0xfd4 <fputc+0x10>
    101c:	d8 01       	movw	r26, r16
    101e:	16 96       	adiw	r26, 0x06	; 6
    1020:	8d 91       	ld	r24, X+
    1022:	9c 91       	ld	r25, X
    1024:	17 97       	sbiw	r26, 0x07	; 7
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	17 96       	adiw	r26, 0x07	; 7
    102a:	9c 93       	st	X, r25
    102c:	8e 93       	st	-X, r24
    102e:	16 97       	sbiw	r26, 0x06	; 6
    1030:	ce 01       	movw	r24, r28
    1032:	df 91       	pop	r29
    1034:	cf 91       	pop	r28
    1036:	1f 91       	pop	r17
    1038:	0f 91       	pop	r16
    103a:	08 95       	ret

0000103c <__ultoa_invert>:
    103c:	fa 01       	movw	r30, r20
    103e:	aa 27       	eor	r26, r26
    1040:	28 30       	cpi	r18, 0x08	; 8
    1042:	51 f1       	breq	.+84     	; 0x1098 <__ultoa_invert+0x5c>
    1044:	20 31       	cpi	r18, 0x10	; 16
    1046:	81 f1       	breq	.+96     	; 0x10a8 <__ultoa_invert+0x6c>
    1048:	e8 94       	clt
    104a:	6f 93       	push	r22
    104c:	6e 7f       	andi	r22, 0xFE	; 254
    104e:	6e 5f       	subi	r22, 0xFE	; 254
    1050:	7f 4f       	sbci	r23, 0xFF	; 255
    1052:	8f 4f       	sbci	r24, 0xFF	; 255
    1054:	9f 4f       	sbci	r25, 0xFF	; 255
    1056:	af 4f       	sbci	r26, 0xFF	; 255
    1058:	b1 e0       	ldi	r27, 0x01	; 1
    105a:	3e d0       	rcall	.+124    	; 0x10d8 <__ultoa_invert+0x9c>
    105c:	b4 e0       	ldi	r27, 0x04	; 4
    105e:	3c d0       	rcall	.+120    	; 0x10d8 <__ultoa_invert+0x9c>
    1060:	67 0f       	add	r22, r23
    1062:	78 1f       	adc	r23, r24
    1064:	89 1f       	adc	r24, r25
    1066:	9a 1f       	adc	r25, r26
    1068:	a1 1d       	adc	r26, r1
    106a:	68 0f       	add	r22, r24
    106c:	79 1f       	adc	r23, r25
    106e:	8a 1f       	adc	r24, r26
    1070:	91 1d       	adc	r25, r1
    1072:	a1 1d       	adc	r26, r1
    1074:	6a 0f       	add	r22, r26
    1076:	71 1d       	adc	r23, r1
    1078:	81 1d       	adc	r24, r1
    107a:	91 1d       	adc	r25, r1
    107c:	a1 1d       	adc	r26, r1
    107e:	20 d0       	rcall	.+64     	; 0x10c0 <__ultoa_invert+0x84>
    1080:	09 f4       	brne	.+2      	; 0x1084 <__ultoa_invert+0x48>
    1082:	68 94       	set
    1084:	3f 91       	pop	r19
    1086:	2a e0       	ldi	r18, 0x0A	; 10
    1088:	26 9f       	mul	r18, r22
    108a:	11 24       	eor	r1, r1
    108c:	30 19       	sub	r19, r0
    108e:	30 5d       	subi	r19, 0xD0	; 208
    1090:	31 93       	st	Z+, r19
    1092:	de f6       	brtc	.-74     	; 0x104a <__ultoa_invert+0xe>
    1094:	cf 01       	movw	r24, r30
    1096:	08 95       	ret
    1098:	46 2f       	mov	r20, r22
    109a:	47 70       	andi	r20, 0x07	; 7
    109c:	40 5d       	subi	r20, 0xD0	; 208
    109e:	41 93       	st	Z+, r20
    10a0:	b3 e0       	ldi	r27, 0x03	; 3
    10a2:	0f d0       	rcall	.+30     	; 0x10c2 <__ultoa_invert+0x86>
    10a4:	c9 f7       	brne	.-14     	; 0x1098 <__ultoa_invert+0x5c>
    10a6:	f6 cf       	rjmp	.-20     	; 0x1094 <__ultoa_invert+0x58>
    10a8:	46 2f       	mov	r20, r22
    10aa:	4f 70       	andi	r20, 0x0F	; 15
    10ac:	40 5d       	subi	r20, 0xD0	; 208
    10ae:	4a 33       	cpi	r20, 0x3A	; 58
    10b0:	18 f0       	brcs	.+6      	; 0x10b8 <__ultoa_invert+0x7c>
    10b2:	49 5d       	subi	r20, 0xD9	; 217
    10b4:	31 fd       	sbrc	r19, 1
    10b6:	40 52       	subi	r20, 0x20	; 32
    10b8:	41 93       	st	Z+, r20
    10ba:	02 d0       	rcall	.+4      	; 0x10c0 <__ultoa_invert+0x84>
    10bc:	a9 f7       	brne	.-22     	; 0x10a8 <__ultoa_invert+0x6c>
    10be:	ea cf       	rjmp	.-44     	; 0x1094 <__ultoa_invert+0x58>
    10c0:	b4 e0       	ldi	r27, 0x04	; 4
    10c2:	a6 95       	lsr	r26
    10c4:	97 95       	ror	r25
    10c6:	87 95       	ror	r24
    10c8:	77 95       	ror	r23
    10ca:	67 95       	ror	r22
    10cc:	ba 95       	dec	r27
    10ce:	c9 f7       	brne	.-14     	; 0x10c2 <__ultoa_invert+0x86>
    10d0:	00 97       	sbiw	r24, 0x00	; 0
    10d2:	61 05       	cpc	r22, r1
    10d4:	71 05       	cpc	r23, r1
    10d6:	08 95       	ret
    10d8:	9b 01       	movw	r18, r22
    10da:	ac 01       	movw	r20, r24
    10dc:	0a 2e       	mov	r0, r26
    10de:	06 94       	lsr	r0
    10e0:	57 95       	ror	r21
    10e2:	47 95       	ror	r20
    10e4:	37 95       	ror	r19
    10e6:	27 95       	ror	r18
    10e8:	ba 95       	dec	r27
    10ea:	c9 f7       	brne	.-14     	; 0x10de <__ultoa_invert+0xa2>
    10ec:	62 0f       	add	r22, r18
    10ee:	73 1f       	adc	r23, r19
    10f0:	84 1f       	adc	r24, r20
    10f2:	95 1f       	adc	r25, r21
    10f4:	a0 1d       	adc	r26, r0
    10f6:	08 95       	ret

000010f8 <_exit>:
    10f8:	f8 94       	cli

000010fa <__stop_program>:
    10fa:	ff cf       	rjmp	.-2      	; 0x10fa <__stop_program>
