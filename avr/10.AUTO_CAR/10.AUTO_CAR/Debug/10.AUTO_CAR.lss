
10.AUTO_CAR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00000e32  00000ec6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001d5  0080011c  0080011c  00000ee2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ee2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001327  00000000  00000000  000010d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dd4  00000000  00000000  000023ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a3b  00000000  00000000  000031d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00003c10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000676  00000000  00000000  00003f38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000053b  00000000  00000000  000045ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004ae9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
   2:	00 00       	nop
   4:	92 c0       	rjmp	.+292    	; 0x12a <__bad_interrupt>
   6:	00 00       	nop
   8:	90 c0       	rjmp	.+288    	; 0x12a <__bad_interrupt>
   a:	00 00       	nop
   c:	8e c0       	rjmp	.+284    	; 0x12a <__bad_interrupt>
   e:	00 00       	nop
  10:	8c c0       	rjmp	.+280    	; 0x12a <__bad_interrupt>
  12:	00 00       	nop
  14:	1b c2       	rjmp	.+1078   	; 0x44c <__vector_5>
  16:	00 00       	nop
  18:	88 c0       	rjmp	.+272    	; 0x12a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	86 c0       	rjmp	.+268    	; 0x12a <__bad_interrupt>
  1e:	00 00       	nop
  20:	84 c0       	rjmp	.+264    	; 0x12a <__bad_interrupt>
  22:	00 00       	nop
  24:	82 c0       	rjmp	.+260    	; 0x12a <__bad_interrupt>
  26:	00 00       	nop
  28:	80 c0       	rjmp	.+256    	; 0x12a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7e c0       	rjmp	.+252    	; 0x12a <__bad_interrupt>
  2e:	00 00       	nop
  30:	7c c0       	rjmp	.+248    	; 0x12a <__bad_interrupt>
  32:	00 00       	nop
  34:	7a c0       	rjmp	.+244    	; 0x12a <__bad_interrupt>
  36:	00 00       	nop
  38:	78 c0       	rjmp	.+240    	; 0x12a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	76 c0       	rjmp	.+236    	; 0x12a <__bad_interrupt>
  3e:	00 00       	nop
  40:	9c c0       	rjmp	.+312    	; 0x17a <__vector_16>
  42:	00 00       	nop
  44:	72 c0       	rjmp	.+228    	; 0x12a <__bad_interrupt>
  46:	00 00       	nop
  48:	35 c1       	rjmp	.+618    	; 0x2b4 <__vector_18>
  4a:	00 00       	nop
  4c:	6e c0       	rjmp	.+220    	; 0x12a <__bad_interrupt>
  4e:	00 00       	nop
  50:	6c c0       	rjmp	.+216    	; 0x12a <__bad_interrupt>
  52:	00 00       	nop
  54:	6a c0       	rjmp	.+212    	; 0x12a <__bad_interrupt>
  56:	00 00       	nop
  58:	68 c0       	rjmp	.+208    	; 0x12a <__bad_interrupt>
  5a:	00 00       	nop
  5c:	66 c0       	rjmp	.+204    	; 0x12a <__bad_interrupt>
  5e:	00 00       	nop
  60:	64 c0       	rjmp	.+200    	; 0x12a <__bad_interrupt>
  62:	00 00       	nop
  64:	62 c0       	rjmp	.+196    	; 0x12a <__bad_interrupt>
  66:	00 00       	nop
  68:	60 c0       	rjmp	.+192    	; 0x12a <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5e c0       	rjmp	.+188    	; 0x12a <__bad_interrupt>
  6e:	00 00       	nop
  70:	5c c0       	rjmp	.+184    	; 0x12a <__bad_interrupt>
  72:	00 00       	nop
  74:	5a c0       	rjmp	.+180    	; 0x12a <__bad_interrupt>
  76:	00 00       	nop
  78:	a7 c1       	rjmp	.+846    	; 0x3c8 <__vector_30>
  7a:	00 00       	nop
  7c:	56 c0       	rjmp	.+172    	; 0x12a <__bad_interrupt>
  7e:	00 00       	nop
  80:	54 c0       	rjmp	.+168    	; 0x12a <__bad_interrupt>
  82:	00 00       	nop
  84:	52 c0       	rjmp	.+164    	; 0x12a <__bad_interrupt>
  86:	00 00       	nop
  88:	50 c0       	rjmp	.+160    	; 0x12a <__bad_interrupt>
  8a:	00 00       	nop
  8c:	a9 00       	.word	0x00a9	; ????
  8e:	b6 00       	.word	0x00b6	; ????
  90:	b6 00       	.word	0x00b6	; ????
  92:	b6 00       	.word	0x00b6	; ????
  94:	a5 00       	.word	0x00a5	; ????
  96:	b6 00       	.word	0x00b6	; ????
  98:	b6 00       	.word	0x00b6	; ????
  9a:	b6 00       	.word	0x00b6	; ????
  9c:	b6 00       	.word	0x00b6	; ????
  9e:	b6 00       	.word	0x00b6	; ????
  a0:	ad 00       	.word	0x00ad	; ????
  a2:	b6 00       	.word	0x00b6	; ????
  a4:	b6 00       	.word	0x00b6	; ????
  a6:	b6 00       	.word	0x00b6	; ????
  a8:	b6 00       	.word	0x00b6	; ????
  aa:	b6 00       	.word	0x00b6	; ????
  ac:	b1 00       	.word	0x00b1	; ????
  ae:	b5 00       	.word	0x00b5	; ????
  b0:	b6 00       	.word	0x00b6	; ????
  b2:	b6 00       	.word	0x00b6	; ????
  b4:	b6 00       	.word	0x00b6	; ????
  b6:	b6 00       	.word	0x00b6	; ????
  b8:	b6 00       	.word	0x00b6	; ????
  ba:	b6 00       	.word	0x00b6	; ????
  bc:	b6 00       	.word	0x00b6	; ????
  be:	b6 00       	.word	0x00b6	; ????
  c0:	b6 00       	.word	0x00b6	; ????
  c2:	b6 00       	.word	0x00b6	; ????
  c4:	b6 00       	.word	0x00b6	; ????
  c6:	b6 00       	.word	0x00b6	; ????
  c8:	b6 00       	.word	0x00b6	; ????
  ca:	b6 00       	.word	0x00b6	; ????
  cc:	a9 00       	.word	0x00a9	; ????
  ce:	b6 00       	.word	0x00b6	; ????
  d0:	b6 00       	.word	0x00b6	; ????
  d2:	b6 00       	.word	0x00b6	; ????
  d4:	a5 00       	.word	0x00a5	; ????
  d6:	b6 00       	.word	0x00b6	; ????
  d8:	b6 00       	.word	0x00b6	; ????
  da:	b6 00       	.word	0x00b6	; ????
  dc:	b6 00       	.word	0x00b6	; ????
  de:	b6 00       	.word	0x00b6	; ????
  e0:	ad 00       	.word	0x00ad	; ????
  e2:	b6 00       	.word	0x00b6	; ????
  e4:	b6 00       	.word	0x00b6	; ????
  e6:	b6 00       	.word	0x00b6	; ????
  e8:	b6 00       	.word	0x00b6	; ????
  ea:	b6 00       	.word	0x00b6	; ????
  ec:	b1 00       	.word	0x00b1	; ????
  ee:	b5 00       	.word	0x00b5	; ????

000000f0 <__ctors_end>:
  f0:	11 24       	eor	r1, r1
  f2:	1f be       	out	0x3f, r1	; 63
  f4:	cf ef       	ldi	r28, 0xFF	; 255
  f6:	d0 e1       	ldi	r29, 0x10	; 16
  f8:	de bf       	out	0x3e, r29	; 62
  fa:	cd bf       	out	0x3d, r28	; 61

000000fc <__do_copy_data>:
  fc:	11 e0       	ldi	r17, 0x01	; 1
  fe:	a0 e0       	ldi	r26, 0x00	; 0
 100:	b1 e0       	ldi	r27, 0x01	; 1
 102:	e2 e3       	ldi	r30, 0x32	; 50
 104:	fe e0       	ldi	r31, 0x0E	; 14
 106:	00 e0       	ldi	r16, 0x00	; 0
 108:	0b bf       	out	0x3b, r16	; 59
 10a:	02 c0       	rjmp	.+4      	; 0x110 <__do_copy_data+0x14>
 10c:	07 90       	elpm	r0, Z+
 10e:	0d 92       	st	X+, r0
 110:	ac 31       	cpi	r26, 0x1C	; 28
 112:	b1 07       	cpc	r27, r17
 114:	d9 f7       	brne	.-10     	; 0x10c <__do_copy_data+0x10>

00000116 <__do_clear_bss>:
 116:	22 e0       	ldi	r18, 0x02	; 2
 118:	ac e1       	ldi	r26, 0x1C	; 28
 11a:	b1 e0       	ldi	r27, 0x01	; 1
 11c:	01 c0       	rjmp	.+2      	; 0x120 <.do_clear_bss_start>

0000011e <.do_clear_bss_loop>:
 11e:	1d 92       	st	X+, r1

00000120 <.do_clear_bss_start>:
 120:	a1 3f       	cpi	r26, 0xF1	; 241
 122:	b2 07       	cpc	r27, r18
 124:	e1 f7       	brne	.-8      	; 0x11e <.do_clear_bss_loop>
 126:	54 d0       	rcall	.+168    	; 0x1d0 <main>
 128:	82 c6       	rjmp	.+3332   	; 0xe2e <_exit>

0000012a <__bad_interrupt>:
 12a:	6a cf       	rjmp	.-300    	; 0x0 <__vectors>

0000012c <init_button>:
void init_button(void);
int get_button(int button_num, int button_pin);
void auto_mode_check(void);  // button check                                                
void init_button(void)
{
	BUTTON_DDR &= ~( 1 << BUTTON0PIN );
 12c:	d7 98       	cbi	0x1a, 7	; 26
 12e:	08 95       	ret

00000130 <manul_mode>:
	TIMSK |= 1 << TOIE0;  // TIMSK |= 0x01; 
}

void manul_mode(void)  // 수동 mode
{
	switch(bt_data)
 130:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <bt_data>
 134:	8e 2f       	mov	r24, r30
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	fc 01       	movw	r30, r24
 13a:	e2 54       	subi	r30, 0x42	; 66
 13c:	f1 09       	sbc	r31, r1
 13e:	e2 33       	cpi	r30, 0x32	; 50
 140:	f1 05       	cpc	r31, r1
 142:	a0 f4       	brcc	.+40     	; 0x16c <manul_mode+0x3c>
 144:	ea 5b       	subi	r30, 0xBA	; 186
 146:	ff 4f       	sbci	r31, 0xFF	; 255
 148:	7a c3       	rjmp	.+1780   	; 0x83e <__tablejump2__>
	{
		case 'F': // 전진
		case 'f':
			forward(2000);        // 4us  X   500 = 0.002sec (2ms)
 14a:	80 ed       	ldi	r24, 0xD0	; 208
 14c:	97 e0       	ldi	r25, 0x07	; 7
 14e:	7a d0       	rcall	.+244    	; 0x244 <forward>
			break;
 150:	0d c0       	rjmp	.+26     	; 0x16c <manul_mode+0x3c>
		case 'B': // 후진
		case 'b':
			backward(2000);       // 4us  X   500 = 0.002sec (2ms)
 152:	80 ed       	ldi	r24, 0xD0	; 208
 154:	97 e0       	ldi	r25, 0x07	; 7
 156:	84 d0       	rcall	.+264    	; 0x260 <backward>
			break;
		case 'L': // 좌회전
		case 'l':
			turn_left(2000);      
 158:	09 c0       	rjmp	.+18     	; 0x16c <manul_mode+0x3c>
 15a:	80 ed       	ldi	r24, 0xD0	; 208
 15c:	97 e0       	ldi	r25, 0x07	; 7
			break;
 15e:	8e d0       	rcall	.+284    	; 0x27c <turn_left>
		case 'R': // 우회전
		case 'r':
			turn_right(2000);
 160:	05 c0       	rjmp	.+10     	; 0x16c <manul_mode+0x3c>
 162:	80 ed       	ldi	r24, 0xD0	; 208
 164:	97 e0       	ldi	r25, 0x07	; 7
			break;
 166:	98 d0       	rcall	.+304    	; 0x298 <turn_right>
			
		case 'S': // 정지
		case 's':
			stop();
 168:	01 c0       	rjmp	.+2      	; 0x16c <manul_mode+0x3c>
 16a:	63 d0       	rcall	.+198    	; 0x232 <stop>
			break;
		default: // 예외
			break;
	}
	
	func_index = DISTANCE_CHECK;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__data_end+0x1>
 174:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
 178:	08 95       	ret

0000017a <__vector_16>:
	auto_mode_check,   // button check
	auto_mode          // 자율 주행
};

ISR(TIMER0_OVF_vect)
{
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
	// 6~256 : 250(1ms) 그래서 TCNT0를 6으로 설정하는것이다. 
	TCNT0=6;
 188:	86 e0       	ldi	r24, 0x06	; 6
 18a:	82 bf       	out	0x32, r24	; 50
	msec_count++;   // 1ms마다 1씩 증가
 18c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <msec_count>
 190:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <msec_count+0x1>
 194:	01 96       	adiw	r24, 0x01	; 1
 196:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <msec_count+0x1>
 19a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <msec_count>
	
	ultrasonic_check_timer++;
 19e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <ultrasonic_check_timer>
 1a2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <ultrasonic_check_timer+0x1>
 1a6:	01 96       	adiw	r24, 0x01	; 1
 1a8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <ultrasonic_check_timer+0x1>
 1ac:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <ultrasonic_check_timer>
}
 1b0:	9f 91       	pop	r25
 1b2:	8f 91       	pop	r24
 1b4:	0f 90       	pop	r0
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	0f 90       	pop	r0
 1ba:	1f 90       	pop	r1
 1bc:	18 95       	reti

000001be <init_timer0>:
	return 0;
}

void init_timer0(void)
{
	TCNT0=6;   // TCNT : 0~256 1ms 마다 TIMER0_OVF_vect로 진입 한다. 
 1be:	86 e0       	ldi	r24, 0x06	; 6
 1c0:	82 bf       	out	0x32, r24	; 50
	TCCR0 |= 1 << CS02 | 0 << CS01 | 0 << CS00;  // TCCR0 |= 0xf4 보다는 죄측의 code 권장 
 1c2:	83 b7       	in	r24, 0x33	; 51
 1c4:	84 60       	ori	r24, 0x04	; 4
 1c6:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 1 << TOIE0;  // TIMSK |= 0x01; 
 1c8:	87 b7       	in	r24, 0x37	; 55
 1ca:	81 60       	ori	r24, 0x01	; 1
 1cc:	87 bf       	out	0x37, r24	; 55
 1ce:	08 95       	ret

000001d0 <main>:
	ultrasonic_check_timer++;
}

int main(void)
{
	init_timer0();
 1d0:	f6 df       	rcall	.-20     	; 0x1be <init_timer0>
	init_timer1();
 1d2:	0d d0       	rcall	.+26     	; 0x1ee <init_timer1>
	init_button();
 1d4:	ab df       	rcall	.-170    	; 0x12c <init_button>
	init_uart0();
 1d6:	e6 d0       	rcall	.+460    	; 0x3a4 <init_uart0>
 1d8:	24 d1       	rcall	.+584    	; 0x422 <init_uart1>
	init_uart1();
 1da:	1a d0       	rcall	.+52     	; 0x210 <init_L298N>
 1dc:	80 e0       	ldi	r24, 0x00	; 0
	init_L298N();
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	90 93 ee 02 	sts	0x02EE, r25	; 0x8002ee <__iob+0x3>
	//init_ultrasonic();
	stdout = &OUTPUT;   // printf가 동작 될 수 있도록 stdout에 OUTPUT 화일 포인터 assign 
 1e4:	80 93 ed 02 	sts	0x02ED, r24	; 0x8002ed <__iob+0x2>
 1e8:	78 94       	sei
 1ea:	a2 df       	rcall	.-188    	; 0x130 <manul_mode>
	sei();              // 전역(대문)으로 interrupt 허용
 1ec:	fe cf       	rjmp	.-4      	; 0x1ea <main+0x1a>

000001ee <init_timer1>:
	// 분주비 : 64.  16000000 / 64 ---> 2500000Hz
	// T = 1/f = 1/2500000Hz ==> 0.000004sec(4us)
	// 2500000Hz에서 256개의 펄스를 count하면 소요시간 1.02ms
	//               127개                           0.5ms
	// 표318 표 14-1
	TCCR1B |= 1 << CS11 | 1 << CS10; // 분주비 : 64
 1ee:	8e b5       	in	r24, 0x2e	; 46
 1f0:	83 60       	ori	r24, 0x03	; 3
 1f2:	8e bd       	out	0x2e, r24	; 46
	
	// 16 timer1 모드 14번의 고속 PWM(P327P 표 14-5)
	TCCR1A |= 1 << WGM11; // TOP을 ICR1에 지정을 할 수 있다.
 1f4:	8f b5       	in	r24, 0x2f	; 47
 1f6:	82 60       	ori	r24, 0x02	; 2
 1f8:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 1 << WGM13 | 1 << WGM12; //
 1fa:	8e b5       	in	r24, 0x2e	; 46
 1fc:	88 61       	ori	r24, 0x18	; 24
 1fe:	8e bd       	out	0x2e, r24	; 46
	
	// 비반전 모드 TOP : ICR1비교일치값(PWM)지정 : OCR1A, OCR1B 표 15-7
	// 사용자가 설정한 PWM값에 일치시 OC3C의 출력핀이 LOW로 바뀌고 BOTTOM에서 HIGH로 바뀐다.
	// P350 표15-7
	TCCR1A |= 1 << COM1A1 | 1 << COM1B1;
 200:	8f b5       	in	r24, 0x2f	; 47
 202:	80 6a       	ori	r24, 0xA0	; 160
 204:	8f bd       	out	0x2f, r24	; 47
	
	ICR1 = 0x3ff; // 1023 =?
 206:	8f ef       	ldi	r24, 0xFF	; 255
 208:	93 e0       	ldi	r25, 0x03	; 3
 20a:	97 bd       	out	0x27, r25	; 39
 20c:	86 bd       	out	0x26, r24	; 38
 20e:	08 95       	ret

00000210 <init_L298N>:
1          0   : 정회전
1          1   : STOP
*/
void init_L298N(void)
{
	MOTOR_PWM_DDR |= 1 << MOTOR_LEFT_PORT_DDR | 1 << MOTOR_RIGHT_PROT_DDR; // 출력 모드로 설정
 210:	87 b3       	in	r24, 0x17	; 23
 212:	80 66       	ori	r24, 0x60	; 96
 214:	87 bb       	out	0x17, r24	; 23
	MOTOR_DRIVER_DIRECTION_DDR |= 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3;  // IN1 IN2 IN3 IN4
 216:	e1 e6       	ldi	r30, 0x61	; 97
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	8f 60       	ori	r24, 0x0F	; 15
 21e:	80 83       	st	Z, r24
	
	// 값이 뭐가 들어있는지 모르니까 전진 모드로 설정
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
 220:	e2 e6       	ldi	r30, 0x62	; 98
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	80 7f       	andi	r24, 0xF0	; 240
 228:	80 83       	st	Z, r24
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 2 | 1 << 0; // 자동차를 전진 모드로 설정
 22a:	80 81       	ld	r24, Z
 22c:	85 60       	ori	r24, 0x05	; 5
 22e:	80 83       	st	Z, r24
 230:	08 95       	ret

00000232 <stop>:
}

void stop(void)
{
	// 값이 뭐가 들어있는지 모르니까 전진 모드로 설정. 스탑 모드로 설정
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
 232:	e2 e6       	ldi	r30, 0x62	; 98
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	80 7f       	andi	r24, 0xF0	; 240
 23a:	80 83       	st	Z, r24
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3; // 자동차를 전진 모드로 설정
 23c:	80 81       	ld	r24, Z
 23e:	8f 60       	ori	r24, 0x0F	; 15
 240:	80 83       	st	Z, r24
 242:	08 95       	ret

00000244 <forward>:
}

void forward(int speed)
{
 244:	9c 01       	movw	r18, r24
	// 값이 뭐가 들어있는지 모르니까 전진 모드로 설정. 스탑 모드로 설정
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
 246:	e2 e6       	ldi	r30, 0x62	; 98
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	90 81       	ld	r25, Z
 24c:	90 7f       	andi	r25, 0xF0	; 240
 24e:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 0 | 1 << 2;
 250:	90 81       	ld	r25, Z
 252:	95 60       	ori	r25, 0x05	; 5
 254:	90 83       	st	Z, r25
	
	OCR1A = OCR1B = speed;  // PB5(OCR1A): 왼쪽, PB6(OCR1B) : 오른쪽
 256:	39 bd       	out	0x29, r19	; 41
 258:	28 bd       	out	0x28, r18	; 40
 25a:	3b bd       	out	0x2b, r19	; 43
 25c:	2a bd       	out	0x2a, r18	; 42
 25e:	08 95       	ret

00000260 <backward>:
}

void backward(int speed)
{
 260:	9c 01       	movw	r18, r24
	// 값이 뭐가 들어있는지 모르니까 전진 모드로 설정. 스탑 모드로 설정
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
 262:	e2 e6       	ldi	r30, 0x62	; 98
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	90 81       	ld	r25, Z
 268:	90 7f       	andi	r25, 0xF0	; 240
 26a:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 3 | 1 << 1; // 후진 모드 1010 IN1, IN30으로 해서 후진시킨다.
 26c:	90 81       	ld	r25, Z
 26e:	9a 60       	ori	r25, 0x0A	; 10
 270:	90 83       	st	Z, r25
	
	OCR1A = OCR1B = speed;  // PB5(OCR1A): 왼쪽, PB6(OCR1B) : 오른쪽
 272:	39 bd       	out	0x29, r19	; 41
 274:	28 bd       	out	0x28, r18	; 40
 276:	3b bd       	out	0x2b, r19	; 43
 278:	2a bd       	out	0x2a, r18	; 42
 27a:	08 95       	ret

0000027c <turn_left>:
}

void turn_left(int speed)
{
 27c:	9c 01       	movw	r18, r24
	// 값이 뭐가 들어있는지 모르니까 전진 모드로 설정. 스탑 모드로 설정
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
 27e:	e2 e6       	ldi	r30, 0x62	; 98
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	90 81       	ld	r25, Z
 284:	90 7f       	andi	r25, 0xF0	; 240
 286:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 0 | 1 << 2; // 전진 모드
 288:	90 81       	ld	r25, Z
 28a:	95 60       	ori	r25, 0x05	; 5
 28c:	90 83       	st	Z, r25
	
	OCR1A = 0;    // PB5(OCR1A): 왼쪽
 28e:	1b bc       	out	0x2b, r1	; 43
 290:	1a bc       	out	0x2a, r1	; 42
	OCR1B = speed; // PB6(OCR1B) : 오른쪽
 292:	39 bd       	out	0x29, r19	; 41
 294:	28 bd       	out	0x28, r18	; 40
 296:	08 95       	ret

00000298 <turn_right>:
}

void turn_right(int speed)
{
 298:	9c 01       	movw	r18, r24
	// 값이 뭐가 들어있는지 모르니까 전진 모드로 설정. 스탑 모드로 설정
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
 29a:	e2 e6       	ldi	r30, 0x62	; 98
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	90 81       	ld	r25, Z
 2a0:	90 7f       	andi	r25, 0xF0	; 240
 2a2:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 0 | 1 << 2; // 전진 모드
 2a4:	90 81       	ld	r25, Z
 2a6:	95 60       	ori	r25, 0x05	; 5
 2a8:	90 83       	st	Z, r25
	
	OCR1A = speed;    // PB5(OCR1A): 왼쪽
 2aa:	3b bd       	out	0x2b, r19	; 43
 2ac:	2a bd       	out	0x2a, r18	; 42
	OCR1B = 0; // PB6(OCR1B) : 오른쪽
 2ae:	19 bc       	out	0x29, r1	; 41
 2b0:	18 bc       	out	0x28, r1	; 40
 2b2:	08 95       	ret

000002b4 <__vector_18>:
        led_all_off\n
*/
int mode = 0;
volatile uint8_t rx_msg_received=0;
ISR(USART0_RX_vect) // 가능한 짧게
{
 2b4:	1f 92       	push	r1
 2b6:	0f 92       	push	r0
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	0f 92       	push	r0
 2bc:	11 24       	eor	r1, r1
 2be:	0b b6       	in	r0, 0x3b	; 59
 2c0:	0f 92       	push	r0
 2c2:	2f 93       	push	r18
 2c4:	3f 93       	push	r19
 2c6:	4f 93       	push	r20
 2c8:	5f 93       	push	r21
 2ca:	6f 93       	push	r22
 2cc:	7f 93       	push	r23
 2ce:	8f 93       	push	r24
 2d0:	9f 93       	push	r25
 2d2:	af 93       	push	r26
 2d4:	bf 93       	push	r27
 2d6:	ef 93       	push	r30
 2d8:	ff 93       	push	r31
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	1f 92       	push	r1
 2e0:	cd b7       	in	r28, 0x3d	; 61
 2e2:	de b7       	in	r29, 0x3e	; 62
   volatile uint8_t rx_data;
   volatile static int i=0;
   
   rx_data = UDR0;  // uart0의 H/W register(UDR0)로 부터 1byte를 읽어 들인다. 
 2e4:	8c b1       	in	r24, 0x0c	; 12
 2e6:	89 83       	std	Y+1, r24	; 0x01
                    // rx_data = UDR0;를 실행하면 UDR0의 내용이 빈다.(empty)
   if (rx_data == '\n')
 2e8:	89 81       	ldd	r24, Y+1	; 0x01
 2ea:	8a 30       	cpi	r24, 0x0A	; 10
 2ec:	49 f5       	brne	.+82     	; 0x340 <__vector_18+0x8c>
   {
      rx_buff[rear++][i] = '\0';
 2ee:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <rear>
 2f2:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <rear+0x1>
 2f6:	c9 01       	movw	r24, r18
 2f8:	01 96       	adiw	r24, 0x01	; 1
 2fa:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <rear+0x1>
 2fe:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <rear>
 302:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <i.1874>
 306:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <i.1874+0x1>
 30a:	48 e2       	ldi	r20, 0x28	; 40
 30c:	42 9f       	mul	r20, r18
 30e:	f0 01       	movw	r30, r0
 310:	43 9f       	mul	r20, r19
 312:	f0 0d       	add	r31, r0
 314:	11 24       	eor	r1, r1
 316:	e7 5d       	subi	r30, 0xD7	; 215
 318:	fe 4f       	sbci	r31, 0xFE	; 254
 31a:	e8 0f       	add	r30, r24
 31c:	f9 1f       	adc	r31, r25
 31e:	10 82       	st	Z, r1
      rear %= COMMAND_NUMBER; // rear : 0 ~ 9
 320:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <rear>
 324:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <rear+0x1>
 328:	6a e0       	ldi	r22, 0x0A	; 10
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	75 d2       	rcall	.+1258   	; 0x818 <__divmodhi4>
 32e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <rear+0x1>
 332:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <rear>
      i = 0; // 다음 string을 저장하기 위한 1차원 index값을 0으로
 336:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <i.1874+0x1>
 33a:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <i.1874>
 33e:	1c c0       	rjmp	.+56     	; 0x378 <__vector_18+0xc4>
      // !!!! rx_buff queue full check 하는 logic 추가 
   }
   else
   {
      rx_buff[rear][i++] = rx_data;
 340:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <rear>
 344:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <rear+0x1>
 348:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <i.1874>
 34c:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <i.1874+0x1>
 350:	9c 01       	movw	r18, r24
 352:	2f 5f       	subi	r18, 0xFF	; 255
 354:	3f 4f       	sbci	r19, 0xFF	; 255
 356:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <i.1874+0x1>
 35a:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <i.1874>
 35e:	49 81       	ldd	r20, Y+1	; 0x01
 360:	58 e2       	ldi	r21, 0x28	; 40
 362:	56 9f       	mul	r21, r22
 364:	90 01       	movw	r18, r0
 366:	57 9f       	mul	r21, r23
 368:	30 0d       	add	r19, r0
 36a:	11 24       	eor	r1, r1
 36c:	27 5d       	subi	r18, 0xD7	; 215
 36e:	3e 4f       	sbci	r19, 0xFE	; 254
 370:	f9 01       	movw	r30, r18
 372:	e8 0f       	add	r30, r24
 374:	f9 1f       	adc	r31, r25
 376:	40 83       	st	Z, r20
      // COMMAND_LENGTH를 check하는 logic 추가
   }
}
 378:	0f 90       	pop	r0
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	ff 91       	pop	r31
 380:	ef 91       	pop	r30
 382:	bf 91       	pop	r27
 384:	af 91       	pop	r26
 386:	9f 91       	pop	r25
 388:	8f 91       	pop	r24
 38a:	7f 91       	pop	r23
 38c:	6f 91       	pop	r22
 38e:	5f 91       	pop	r21
 390:	4f 91       	pop	r20
 392:	3f 91       	pop	r19
 394:	2f 91       	pop	r18
 396:	0f 90       	pop	r0
 398:	0b be       	out	0x3b, r0	; 59
 39a:	0f 90       	pop	r0
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	0f 90       	pop	r0
 3a0:	1f 90       	pop	r1
 3a2:	18 95       	reti

000003a4 <init_uart0>:
*/

void init_uart0(void)
{
   // 1. 9600bps로 설정
   UBRR0H = 0x00;
 3a4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
   UBRR0L = 207;  // 9600bps P219 표9-9
 3a8:	8f ec       	ldi	r24, 0xCF	; 207
 3aa:	89 b9       	out	0x09, r24	; 9
   // 2. 2배속 통신  표9-1
   UCSR0A |= 1 << U2X0;  // 2배속 통신 
 3ac:	59 9a       	sbi	0x0b, 1	; 11
   UCSR0C |= 0x06;   // 비동기/data8bits/none parity
 3ae:	e5 e9       	ldi	r30, 0x95	; 149
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	80 81       	ld	r24, Z
 3b4:	86 60       	ori	r24, 0x06	; 6
 3b6:	80 83       	st	Z, r24
   // P215 표9-1
   // RXEN0 : UART0로 부터 수신이 가능 하도록 
   // TXEN0 : UART0로 부터 송신이 가능 하도록 
   // RXCIE0 : UART0로 부터 1byte가 들어오면(stop bit가 들어 오면)) rx interrupt를 발생 시켜라
   UCSR0B |= 1 << RXEN0 | 1 << TXEN0 | 1 << RXCIE0;
 3b8:	8a b1       	in	r24, 0x0a	; 10
 3ba:	88 69       	ori	r24, 0x98	; 152
 3bc:	8a b9       	out	0x0a, r24	; 10
 3be:	08 95       	ret

000003c0 <UART0_transmit>:

// UART0로 1byte를 전송 하는 함수 (polling방식)
void UART0_transmit(uint8_t data)
{
   // 데이터 전송 중이면 전송이 끝날떄 까지 기다린다. 
   while ( !(UCSR0A & 1 << UDRE0))
 3c0:	5d 9b       	sbis	0x0b, 5	; 11
 3c2:	fe cf       	rjmp	.-4      	; 0x3c0 <UART0_transmit>
      ;   // no operation
   UDR0 = data;  // data를 H/W전송 register에 쏜다. 
 3c4:	8c b9       	out	0x0c, r24	; 12
 3c6:	08 95       	ret

000003c8 <__vector_30>:
   BT comportmaster로 부터 1byte기 들어 올때 마다 이속(ISR(USART1_RX_vect)으로 들어 온다.
*/ 

volatile uint8_t bt_data = 0;
ISR(USART1_RX_vect) // 가능한 짧게
{
 3c8:	1f 92       	push	r1
 3ca:	0f 92       	push	r0
 3cc:	0f b6       	in	r0, 0x3f	; 63
 3ce:	0f 92       	push	r0
 3d0:	11 24       	eor	r1, r1
 3d2:	0b b6       	in	r0, 0x3b	; 59
 3d4:	0f 92       	push	r0
 3d6:	2f 93       	push	r18
 3d8:	3f 93       	push	r19
 3da:	4f 93       	push	r20
 3dc:	5f 93       	push	r21
 3de:	6f 93       	push	r22
 3e0:	7f 93       	push	r23
 3e2:	8f 93       	push	r24
 3e4:	9f 93       	push	r25
 3e6:	af 93       	push	r26
 3e8:	bf 93       	push	r27
 3ea:	ef 93       	push	r30
 3ec:	ff 93       	push	r31
    bt_data = UDR1;  // BT로 부터 들어온 HW reg(UDR1)을 1byte 읽어 들인다.
 3ee:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 3f2:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <bt_data>
                    // bt_data = UDR1;를 실행하면 UDR1의 내용이 빈다.(empty)
					
	UART0_transmit(bt_data);  // BT로 부터 들어온 문자가 어떤것인지 확인 하기 위해서 comport로 출력	
 3f6:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <bt_data>
 3fa:	e2 df       	rcall	.-60     	; 0x3c0 <UART0_transmit>
}
 3fc:	ff 91       	pop	r31
 3fe:	ef 91       	pop	r30
 400:	bf 91       	pop	r27
 402:	af 91       	pop	r26
 404:	9f 91       	pop	r25
 406:	8f 91       	pop	r24
 408:	7f 91       	pop	r23
 40a:	6f 91       	pop	r22
 40c:	5f 91       	pop	r21
 40e:	4f 91       	pop	r20
 410:	3f 91       	pop	r19
 412:	2f 91       	pop	r18
 414:	0f 90       	pop	r0
 416:	0b be       	out	0x3b, r0	; 59
 418:	0f 90       	pop	r0
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	0f 90       	pop	r0
 41e:	1f 90       	pop	r1
 420:	18 95       	reti

00000422 <init_uart1>:
*/

void init_uart1(void)
{
   // 1. 9600bps로 설정
   UBRR1H = 0x00;
 422:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
   UBRR1L = 207;  // 9600bps P219 표9-9
 426:	8f ec       	ldi	r24, 0xCF	; 207
 428:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
   // 2. 2배속 통신  표9-1
   UCSR1A |= 1 << U2X1;  // 2배속 통신 
 42c:	eb e9       	ldi	r30, 0x9B	; 155
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 81       	ld	r24, Z
 432:	82 60       	ori	r24, 0x02	; 2
 434:	80 83       	st	Z, r24
   UCSR1C |= 0x06;   // 비동기/data8bits/none parity
 436:	ed e9       	ldi	r30, 0x9D	; 157
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	86 60       	ori	r24, 0x06	; 6
 43e:	80 83       	st	Z, r24
   // P215 표9-1
   // RXEN1  : UART1로 부터 수신이 가능 하도록 
   // TXEN1  : UART1로 부터 송신이 가능 하도록 
   // RXCIE1 : UART1로 부터 1byte가 들어오면(stop bit가 들어 오면)) rx interrupt를 발생 시켜라
   UCSR1B |= 1 << RXEN1 | 1 << TXEN1 | 1 << RXCIE1;
 440:	ea e9       	ldi	r30, 0x9A	; 154
 442:	f0 e0       	ldi	r31, 0x00	; 0
 444:	80 81       	ld	r24, Z
 446:	88 69       	ori	r24, 0x98	; 152
 448:	80 83       	st	Z, r24
 44a:	08 95       	ret

0000044c <__vector_5>:

//P278 표 12-3
// PE4 : 외부 INT4 초음파 센서의 상승, 하강 엣지 둘다 INT가 ISR(INT4_vect)로 들어 온다.
// 결국 2번(상승: 1, 하강: 1) 들어 온다.
ISR(INT4_vect)
{
 44c:	1f 92       	push	r1
 44e:	0f 92       	push	r0
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	0f 92       	push	r0
 454:	11 24       	eor	r1, r1
 456:	0b b6       	in	r0, 0x3b	; 59
 458:	0f 92       	push	r0
 45a:	2f 93       	push	r18
 45c:	3f 93       	push	r19
 45e:	4f 93       	push	r20
 460:	5f 93       	push	r21
 462:	6f 93       	push	r22
 464:	7f 93       	push	r23
 466:	8f 93       	push	r24
 468:	9f 93       	push	r25
 46a:	af 93       	push	r26
 46c:	bf 93       	push	r27
 46e:	ef 93       	push	r30
 470:	ff 93       	push	r31
	// 1 상승에지
	if(ECHO_PIN & 1 << ECHO)
 472:	0c 9b       	sbis	0x01, 4	; 1
 474:	03 c0       	rjmp	.+6      	; 0x47c <__vector_5+0x30>
	{
		TCNT1 = 0;
 476:	1d bc       	out	0x2d, r1	; 45
 478:	1c bc       	out	0x2c, r1	; 44
 47a:	31 c0       	rjmp	.+98     	; 0x4de <__vector_5+0x92>
	}
	else // 2 하강에지
	{
		// ECHO핀에 들어온 펄스 갯수를 us 환산
		ultrasonic_dis = 1000000.0 * TCNT1 * 1024 / F_CPU;
 47c:	6c b5       	in	r22, 0x2c	; 44
 47e:	7d b5       	in	r23, 0x2d	; 45
 480:	80 e0       	ldi	r24, 0x00	; 0
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	d8 d0       	rcall	.+432    	; 0x636 <__floatunsisf>
 486:	20 e0       	ldi	r18, 0x00	; 0
 488:	34 e2       	ldi	r19, 0x24	; 36
 48a:	44 e7       	ldi	r20, 0x74	; 116
 48c:	59 e4       	ldi	r21, 0x49	; 73
 48e:	61 d1       	rcall	.+706    	; 0x752 <__mulsf3>
 490:	20 e0       	ldi	r18, 0x00	; 0
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	40 e8       	ldi	r20, 0x80	; 128
 496:	54 e4       	ldi	r21, 0x44	; 68
 498:	5c d1       	rcall	.+696    	; 0x752 <__mulsf3>
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	34 e2       	ldi	r19, 0x24	; 36
 49e:	44 e7       	ldi	r20, 0x74	; 116
 4a0:	5b e4       	ldi	r21, 0x4B	; 75
 4a2:	30 d0       	rcall	.+96     	; 0x504 <__divsf3>
 4a4:	97 d0       	rcall	.+302    	; 0x5d4 <__fixsfsi>
 4a6:	70 93 28 01 	sts	0x0128, r23	; 0x800128 <ultrasonic_dis+0x1>
 4aa:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <ultrasonic_dis>
		// 예) TCINT에 10이 들어 있다고 가정 하자
		// 15.625KHZ의 주기 64us이다.
		// 0.000064sec(64us) * 10 = 0.00064sec(64us)
		// 640us / 58us(1cm이동 하는데 소요 시간) ==> 11cm이다.
		// --- 1cm : 58us
		sprintf(scm, "dis: %dcm\n", ultrasonic_dis / 58); // cm환산
 4ae:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <ultrasonic_dis>
 4b2:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <ultrasonic_dis+0x1>
 4b6:	6a e3       	ldi	r22, 0x3A	; 58
 4b8:	70 e0       	ldi	r23, 0x00	; 0
 4ba:	ae d1       	rcall	.+860    	; 0x818 <__divmodhi4>
 4bc:	7f 93       	push	r23
 4be:	6f 93       	push	r22
 4c0:	8e e0       	ldi	r24, 0x0E	; 14
 4c2:	91 e0       	ldi	r25, 0x01	; 1
 4c4:	9f 93       	push	r25
 4c6:	8f 93       	push	r24
 4c8:	89 eb       	ldi	r24, 0xB9	; 185
 4ca:	92 e0       	ldi	r25, 0x02	; 2
 4cc:	9f 93       	push	r25
 4ce:	8f 93       	push	r24
 4d0:	d3 d1       	rcall	.+934    	; 0x878 <sprintf>
 4d2:	0f 90       	pop	r0
 4d4:	0f 90       	pop	r0
 4d6:	0f 90       	pop	r0
 4d8:	0f 90       	pop	r0
 4da:	0f 90       	pop	r0
 4dc:	0f 90       	pop	r0
	}
	
	// 2 하강에지
}
 4de:	ff 91       	pop	r31
 4e0:	ef 91       	pop	r30
 4e2:	bf 91       	pop	r27
 4e4:	af 91       	pop	r26
 4e6:	9f 91       	pop	r25
 4e8:	8f 91       	pop	r24
 4ea:	7f 91       	pop	r23
 4ec:	6f 91       	pop	r22
 4ee:	5f 91       	pop	r21
 4f0:	4f 91       	pop	r20
 4f2:	3f 91       	pop	r19
 4f4:	2f 91       	pop	r18
 4f6:	0f 90       	pop	r0
 4f8:	0b be       	out	0x3b, r0	; 59
 4fa:	0f 90       	pop	r0
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	0f 90       	pop	r0
 500:	1f 90       	pop	r1
 502:	18 95       	reti

00000504 <__divsf3>:
 504:	0c d0       	rcall	.+24     	; 0x51e <__divsf3x>
 506:	eb c0       	rjmp	.+470    	; 0x6de <__fp_round>
 508:	e3 d0       	rcall	.+454    	; 0x6d0 <__fp_pscB>
 50a:	40 f0       	brcs	.+16     	; 0x51c <__divsf3+0x18>
 50c:	da d0       	rcall	.+436    	; 0x6c2 <__fp_pscA>
 50e:	30 f0       	brcs	.+12     	; 0x51c <__divsf3+0x18>
 510:	21 f4       	brne	.+8      	; 0x51a <__divsf3+0x16>
 512:	5f 3f       	cpi	r21, 0xFF	; 255
 514:	19 f0       	breq	.+6      	; 0x51c <__divsf3+0x18>
 516:	cc c0       	rjmp	.+408    	; 0x6b0 <__fp_inf>
 518:	51 11       	cpse	r21, r1
 51a:	15 c1       	rjmp	.+554    	; 0x746 <__fp_szero>
 51c:	cf c0       	rjmp	.+414    	; 0x6bc <__fp_nan>

0000051e <__divsf3x>:
 51e:	f0 d0       	rcall	.+480    	; 0x700 <__fp_split3>
 520:	98 f3       	brcs	.-26     	; 0x508 <__divsf3+0x4>

00000522 <__divsf3_pse>:
 522:	99 23       	and	r25, r25
 524:	c9 f3       	breq	.-14     	; 0x518 <__divsf3+0x14>
 526:	55 23       	and	r21, r21
 528:	b1 f3       	breq	.-20     	; 0x516 <__divsf3+0x12>
 52a:	95 1b       	sub	r25, r21
 52c:	55 0b       	sbc	r21, r21
 52e:	bb 27       	eor	r27, r27
 530:	aa 27       	eor	r26, r26
 532:	62 17       	cp	r22, r18
 534:	73 07       	cpc	r23, r19
 536:	84 07       	cpc	r24, r20
 538:	38 f0       	brcs	.+14     	; 0x548 <__divsf3_pse+0x26>
 53a:	9f 5f       	subi	r25, 0xFF	; 255
 53c:	5f 4f       	sbci	r21, 0xFF	; 255
 53e:	22 0f       	add	r18, r18
 540:	33 1f       	adc	r19, r19
 542:	44 1f       	adc	r20, r20
 544:	aa 1f       	adc	r26, r26
 546:	a9 f3       	breq	.-22     	; 0x532 <__divsf3_pse+0x10>
 548:	33 d0       	rcall	.+102    	; 0x5b0 <__divsf3_pse+0x8e>
 54a:	0e 2e       	mov	r0, r30
 54c:	3a f0       	brmi	.+14     	; 0x55c <__divsf3_pse+0x3a>
 54e:	e0 e8       	ldi	r30, 0x80	; 128
 550:	30 d0       	rcall	.+96     	; 0x5b2 <__divsf3_pse+0x90>
 552:	91 50       	subi	r25, 0x01	; 1
 554:	50 40       	sbci	r21, 0x00	; 0
 556:	e6 95       	lsr	r30
 558:	00 1c       	adc	r0, r0
 55a:	ca f7       	brpl	.-14     	; 0x54e <__divsf3_pse+0x2c>
 55c:	29 d0       	rcall	.+82     	; 0x5b0 <__divsf3_pse+0x8e>
 55e:	fe 2f       	mov	r31, r30
 560:	27 d0       	rcall	.+78     	; 0x5b0 <__divsf3_pse+0x8e>
 562:	66 0f       	add	r22, r22
 564:	77 1f       	adc	r23, r23
 566:	88 1f       	adc	r24, r24
 568:	bb 1f       	adc	r27, r27
 56a:	26 17       	cp	r18, r22
 56c:	37 07       	cpc	r19, r23
 56e:	48 07       	cpc	r20, r24
 570:	ab 07       	cpc	r26, r27
 572:	b0 e8       	ldi	r27, 0x80	; 128
 574:	09 f0       	breq	.+2      	; 0x578 <__divsf3_pse+0x56>
 576:	bb 0b       	sbc	r27, r27
 578:	80 2d       	mov	r24, r0
 57a:	bf 01       	movw	r22, r30
 57c:	ff 27       	eor	r31, r31
 57e:	93 58       	subi	r25, 0x83	; 131
 580:	5f 4f       	sbci	r21, 0xFF	; 255
 582:	2a f0       	brmi	.+10     	; 0x58e <__divsf3_pse+0x6c>
 584:	9e 3f       	cpi	r25, 0xFE	; 254
 586:	51 05       	cpc	r21, r1
 588:	68 f0       	brcs	.+26     	; 0x5a4 <__divsf3_pse+0x82>
 58a:	92 c0       	rjmp	.+292    	; 0x6b0 <__fp_inf>
 58c:	dc c0       	rjmp	.+440    	; 0x746 <__fp_szero>
 58e:	5f 3f       	cpi	r21, 0xFF	; 255
 590:	ec f3       	brlt	.-6      	; 0x58c <__divsf3_pse+0x6a>
 592:	98 3e       	cpi	r25, 0xE8	; 232
 594:	dc f3       	brlt	.-10     	; 0x58c <__divsf3_pse+0x6a>
 596:	86 95       	lsr	r24
 598:	77 95       	ror	r23
 59a:	67 95       	ror	r22
 59c:	b7 95       	ror	r27
 59e:	f7 95       	ror	r31
 5a0:	9f 5f       	subi	r25, 0xFF	; 255
 5a2:	c9 f7       	brne	.-14     	; 0x596 <__divsf3_pse+0x74>
 5a4:	88 0f       	add	r24, r24
 5a6:	91 1d       	adc	r25, r1
 5a8:	96 95       	lsr	r25
 5aa:	87 95       	ror	r24
 5ac:	97 f9       	bld	r25, 7
 5ae:	08 95       	ret
 5b0:	e1 e0       	ldi	r30, 0x01	; 1
 5b2:	66 0f       	add	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	88 1f       	adc	r24, r24
 5b8:	bb 1f       	adc	r27, r27
 5ba:	62 17       	cp	r22, r18
 5bc:	73 07       	cpc	r23, r19
 5be:	84 07       	cpc	r24, r20
 5c0:	ba 07       	cpc	r27, r26
 5c2:	20 f0       	brcs	.+8      	; 0x5cc <__divsf3_pse+0xaa>
 5c4:	62 1b       	sub	r22, r18
 5c6:	73 0b       	sbc	r23, r19
 5c8:	84 0b       	sbc	r24, r20
 5ca:	ba 0b       	sbc	r27, r26
 5cc:	ee 1f       	adc	r30, r30
 5ce:	88 f7       	brcc	.-30     	; 0x5b2 <__divsf3_pse+0x90>
 5d0:	e0 95       	com	r30
 5d2:	08 95       	ret

000005d4 <__fixsfsi>:
 5d4:	04 d0       	rcall	.+8      	; 0x5de <__fixunssfsi>
 5d6:	68 94       	set
 5d8:	b1 11       	cpse	r27, r1
 5da:	b5 c0       	rjmp	.+362    	; 0x746 <__fp_szero>
 5dc:	08 95       	ret

000005de <__fixunssfsi>:
 5de:	98 d0       	rcall	.+304    	; 0x710 <__fp_splitA>
 5e0:	88 f0       	brcs	.+34     	; 0x604 <__fixunssfsi+0x26>
 5e2:	9f 57       	subi	r25, 0x7F	; 127
 5e4:	90 f0       	brcs	.+36     	; 0x60a <__fixunssfsi+0x2c>
 5e6:	b9 2f       	mov	r27, r25
 5e8:	99 27       	eor	r25, r25
 5ea:	b7 51       	subi	r27, 0x17	; 23
 5ec:	a0 f0       	brcs	.+40     	; 0x616 <__fixunssfsi+0x38>
 5ee:	d1 f0       	breq	.+52     	; 0x624 <__fixunssfsi+0x46>
 5f0:	66 0f       	add	r22, r22
 5f2:	77 1f       	adc	r23, r23
 5f4:	88 1f       	adc	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	1a f0       	brmi	.+6      	; 0x600 <__fixunssfsi+0x22>
 5fa:	ba 95       	dec	r27
 5fc:	c9 f7       	brne	.-14     	; 0x5f0 <__fixunssfsi+0x12>
 5fe:	12 c0       	rjmp	.+36     	; 0x624 <__fixunssfsi+0x46>
 600:	b1 30       	cpi	r27, 0x01	; 1
 602:	81 f0       	breq	.+32     	; 0x624 <__fixunssfsi+0x46>
 604:	9f d0       	rcall	.+318    	; 0x744 <__fp_zero>
 606:	b1 e0       	ldi	r27, 0x01	; 1
 608:	08 95       	ret
 60a:	9c c0       	rjmp	.+312    	; 0x744 <__fp_zero>
 60c:	67 2f       	mov	r22, r23
 60e:	78 2f       	mov	r23, r24
 610:	88 27       	eor	r24, r24
 612:	b8 5f       	subi	r27, 0xF8	; 248
 614:	39 f0       	breq	.+14     	; 0x624 <__fixunssfsi+0x46>
 616:	b9 3f       	cpi	r27, 0xF9	; 249
 618:	cc f3       	brlt	.-14     	; 0x60c <__fixunssfsi+0x2e>
 61a:	86 95       	lsr	r24
 61c:	77 95       	ror	r23
 61e:	67 95       	ror	r22
 620:	b3 95       	inc	r27
 622:	d9 f7       	brne	.-10     	; 0x61a <__fixunssfsi+0x3c>
 624:	3e f4       	brtc	.+14     	; 0x634 <__fixunssfsi+0x56>
 626:	90 95       	com	r25
 628:	80 95       	com	r24
 62a:	70 95       	com	r23
 62c:	61 95       	neg	r22
 62e:	7f 4f       	sbci	r23, 0xFF	; 255
 630:	8f 4f       	sbci	r24, 0xFF	; 255
 632:	9f 4f       	sbci	r25, 0xFF	; 255
 634:	08 95       	ret

00000636 <__floatunsisf>:
 636:	e8 94       	clt
 638:	09 c0       	rjmp	.+18     	; 0x64c <__floatsisf+0x12>

0000063a <__floatsisf>:
 63a:	97 fb       	bst	r25, 7
 63c:	3e f4       	brtc	.+14     	; 0x64c <__floatsisf+0x12>
 63e:	90 95       	com	r25
 640:	80 95       	com	r24
 642:	70 95       	com	r23
 644:	61 95       	neg	r22
 646:	7f 4f       	sbci	r23, 0xFF	; 255
 648:	8f 4f       	sbci	r24, 0xFF	; 255
 64a:	9f 4f       	sbci	r25, 0xFF	; 255
 64c:	99 23       	and	r25, r25
 64e:	a9 f0       	breq	.+42     	; 0x67a <__floatsisf+0x40>
 650:	f9 2f       	mov	r31, r25
 652:	96 e9       	ldi	r25, 0x96	; 150
 654:	bb 27       	eor	r27, r27
 656:	93 95       	inc	r25
 658:	f6 95       	lsr	r31
 65a:	87 95       	ror	r24
 65c:	77 95       	ror	r23
 65e:	67 95       	ror	r22
 660:	b7 95       	ror	r27
 662:	f1 11       	cpse	r31, r1
 664:	f8 cf       	rjmp	.-16     	; 0x656 <__floatsisf+0x1c>
 666:	fa f4       	brpl	.+62     	; 0x6a6 <__floatsisf+0x6c>
 668:	bb 0f       	add	r27, r27
 66a:	11 f4       	brne	.+4      	; 0x670 <__floatsisf+0x36>
 66c:	60 ff       	sbrs	r22, 0
 66e:	1b c0       	rjmp	.+54     	; 0x6a6 <__floatsisf+0x6c>
 670:	6f 5f       	subi	r22, 0xFF	; 255
 672:	7f 4f       	sbci	r23, 0xFF	; 255
 674:	8f 4f       	sbci	r24, 0xFF	; 255
 676:	9f 4f       	sbci	r25, 0xFF	; 255
 678:	16 c0       	rjmp	.+44     	; 0x6a6 <__floatsisf+0x6c>
 67a:	88 23       	and	r24, r24
 67c:	11 f0       	breq	.+4      	; 0x682 <__floatsisf+0x48>
 67e:	96 e9       	ldi	r25, 0x96	; 150
 680:	11 c0       	rjmp	.+34     	; 0x6a4 <__floatsisf+0x6a>
 682:	77 23       	and	r23, r23
 684:	21 f0       	breq	.+8      	; 0x68e <__floatsisf+0x54>
 686:	9e e8       	ldi	r25, 0x8E	; 142
 688:	87 2f       	mov	r24, r23
 68a:	76 2f       	mov	r23, r22
 68c:	05 c0       	rjmp	.+10     	; 0x698 <__floatsisf+0x5e>
 68e:	66 23       	and	r22, r22
 690:	71 f0       	breq	.+28     	; 0x6ae <__floatsisf+0x74>
 692:	96 e8       	ldi	r25, 0x86	; 134
 694:	86 2f       	mov	r24, r22
 696:	70 e0       	ldi	r23, 0x00	; 0
 698:	60 e0       	ldi	r22, 0x00	; 0
 69a:	2a f0       	brmi	.+10     	; 0x6a6 <__floatsisf+0x6c>
 69c:	9a 95       	dec	r25
 69e:	66 0f       	add	r22, r22
 6a0:	77 1f       	adc	r23, r23
 6a2:	88 1f       	adc	r24, r24
 6a4:	da f7       	brpl	.-10     	; 0x69c <__floatsisf+0x62>
 6a6:	88 0f       	add	r24, r24
 6a8:	96 95       	lsr	r25
 6aa:	87 95       	ror	r24
 6ac:	97 f9       	bld	r25, 7
 6ae:	08 95       	ret

000006b0 <__fp_inf>:
 6b0:	97 f9       	bld	r25, 7
 6b2:	9f 67       	ori	r25, 0x7F	; 127
 6b4:	80 e8       	ldi	r24, 0x80	; 128
 6b6:	70 e0       	ldi	r23, 0x00	; 0
 6b8:	60 e0       	ldi	r22, 0x00	; 0
 6ba:	08 95       	ret

000006bc <__fp_nan>:
 6bc:	9f ef       	ldi	r25, 0xFF	; 255
 6be:	80 ec       	ldi	r24, 0xC0	; 192
 6c0:	08 95       	ret

000006c2 <__fp_pscA>:
 6c2:	00 24       	eor	r0, r0
 6c4:	0a 94       	dec	r0
 6c6:	16 16       	cp	r1, r22
 6c8:	17 06       	cpc	r1, r23
 6ca:	18 06       	cpc	r1, r24
 6cc:	09 06       	cpc	r0, r25
 6ce:	08 95       	ret

000006d0 <__fp_pscB>:
 6d0:	00 24       	eor	r0, r0
 6d2:	0a 94       	dec	r0
 6d4:	12 16       	cp	r1, r18
 6d6:	13 06       	cpc	r1, r19
 6d8:	14 06       	cpc	r1, r20
 6da:	05 06       	cpc	r0, r21
 6dc:	08 95       	ret

000006de <__fp_round>:
 6de:	09 2e       	mov	r0, r25
 6e0:	03 94       	inc	r0
 6e2:	00 0c       	add	r0, r0
 6e4:	11 f4       	brne	.+4      	; 0x6ea <__fp_round+0xc>
 6e6:	88 23       	and	r24, r24
 6e8:	52 f0       	brmi	.+20     	; 0x6fe <__fp_round+0x20>
 6ea:	bb 0f       	add	r27, r27
 6ec:	40 f4       	brcc	.+16     	; 0x6fe <__fp_round+0x20>
 6ee:	bf 2b       	or	r27, r31
 6f0:	11 f4       	brne	.+4      	; 0x6f6 <__fp_round+0x18>
 6f2:	60 ff       	sbrs	r22, 0
 6f4:	04 c0       	rjmp	.+8      	; 0x6fe <__fp_round+0x20>
 6f6:	6f 5f       	subi	r22, 0xFF	; 255
 6f8:	7f 4f       	sbci	r23, 0xFF	; 255
 6fa:	8f 4f       	sbci	r24, 0xFF	; 255
 6fc:	9f 4f       	sbci	r25, 0xFF	; 255
 6fe:	08 95       	ret

00000700 <__fp_split3>:
 700:	57 fd       	sbrc	r21, 7
 702:	90 58       	subi	r25, 0x80	; 128
 704:	44 0f       	add	r20, r20
 706:	55 1f       	adc	r21, r21
 708:	59 f0       	breq	.+22     	; 0x720 <__fp_splitA+0x10>
 70a:	5f 3f       	cpi	r21, 0xFF	; 255
 70c:	71 f0       	breq	.+28     	; 0x72a <__fp_splitA+0x1a>
 70e:	47 95       	ror	r20

00000710 <__fp_splitA>:
 710:	88 0f       	add	r24, r24
 712:	97 fb       	bst	r25, 7
 714:	99 1f       	adc	r25, r25
 716:	61 f0       	breq	.+24     	; 0x730 <__fp_splitA+0x20>
 718:	9f 3f       	cpi	r25, 0xFF	; 255
 71a:	79 f0       	breq	.+30     	; 0x73a <__fp_splitA+0x2a>
 71c:	87 95       	ror	r24
 71e:	08 95       	ret
 720:	12 16       	cp	r1, r18
 722:	13 06       	cpc	r1, r19
 724:	14 06       	cpc	r1, r20
 726:	55 1f       	adc	r21, r21
 728:	f2 cf       	rjmp	.-28     	; 0x70e <__fp_split3+0xe>
 72a:	46 95       	lsr	r20
 72c:	f1 df       	rcall	.-30     	; 0x710 <__fp_splitA>
 72e:	08 c0       	rjmp	.+16     	; 0x740 <__fp_splitA+0x30>
 730:	16 16       	cp	r1, r22
 732:	17 06       	cpc	r1, r23
 734:	18 06       	cpc	r1, r24
 736:	99 1f       	adc	r25, r25
 738:	f1 cf       	rjmp	.-30     	; 0x71c <__fp_splitA+0xc>
 73a:	86 95       	lsr	r24
 73c:	71 05       	cpc	r23, r1
 73e:	61 05       	cpc	r22, r1
 740:	08 94       	sec
 742:	08 95       	ret

00000744 <__fp_zero>:
 744:	e8 94       	clt

00000746 <__fp_szero>:
 746:	bb 27       	eor	r27, r27
 748:	66 27       	eor	r22, r22
 74a:	77 27       	eor	r23, r23
 74c:	cb 01       	movw	r24, r22
 74e:	97 f9       	bld	r25, 7
 750:	08 95       	ret

00000752 <__mulsf3>:
 752:	0b d0       	rcall	.+22     	; 0x76a <__mulsf3x>
 754:	c4 cf       	rjmp	.-120    	; 0x6de <__fp_round>
 756:	b5 df       	rcall	.-150    	; 0x6c2 <__fp_pscA>
 758:	28 f0       	brcs	.+10     	; 0x764 <__mulsf3+0x12>
 75a:	ba df       	rcall	.-140    	; 0x6d0 <__fp_pscB>
 75c:	18 f0       	brcs	.+6      	; 0x764 <__mulsf3+0x12>
 75e:	95 23       	and	r25, r21
 760:	09 f0       	breq	.+2      	; 0x764 <__mulsf3+0x12>
 762:	a6 cf       	rjmp	.-180    	; 0x6b0 <__fp_inf>
 764:	ab cf       	rjmp	.-170    	; 0x6bc <__fp_nan>
 766:	11 24       	eor	r1, r1
 768:	ee cf       	rjmp	.-36     	; 0x746 <__fp_szero>

0000076a <__mulsf3x>:
 76a:	ca df       	rcall	.-108    	; 0x700 <__fp_split3>
 76c:	a0 f3       	brcs	.-24     	; 0x756 <__mulsf3+0x4>

0000076e <__mulsf3_pse>:
 76e:	95 9f       	mul	r25, r21
 770:	d1 f3       	breq	.-12     	; 0x766 <__mulsf3+0x14>
 772:	95 0f       	add	r25, r21
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	55 1f       	adc	r21, r21
 778:	62 9f       	mul	r22, r18
 77a:	f0 01       	movw	r30, r0
 77c:	72 9f       	mul	r23, r18
 77e:	bb 27       	eor	r27, r27
 780:	f0 0d       	add	r31, r0
 782:	b1 1d       	adc	r27, r1
 784:	63 9f       	mul	r22, r19
 786:	aa 27       	eor	r26, r26
 788:	f0 0d       	add	r31, r0
 78a:	b1 1d       	adc	r27, r1
 78c:	aa 1f       	adc	r26, r26
 78e:	64 9f       	mul	r22, r20
 790:	66 27       	eor	r22, r22
 792:	b0 0d       	add	r27, r0
 794:	a1 1d       	adc	r26, r1
 796:	66 1f       	adc	r22, r22
 798:	82 9f       	mul	r24, r18
 79a:	22 27       	eor	r18, r18
 79c:	b0 0d       	add	r27, r0
 79e:	a1 1d       	adc	r26, r1
 7a0:	62 1f       	adc	r22, r18
 7a2:	73 9f       	mul	r23, r19
 7a4:	b0 0d       	add	r27, r0
 7a6:	a1 1d       	adc	r26, r1
 7a8:	62 1f       	adc	r22, r18
 7aa:	83 9f       	mul	r24, r19
 7ac:	a0 0d       	add	r26, r0
 7ae:	61 1d       	adc	r22, r1
 7b0:	22 1f       	adc	r18, r18
 7b2:	74 9f       	mul	r23, r20
 7b4:	33 27       	eor	r19, r19
 7b6:	a0 0d       	add	r26, r0
 7b8:	61 1d       	adc	r22, r1
 7ba:	23 1f       	adc	r18, r19
 7bc:	84 9f       	mul	r24, r20
 7be:	60 0d       	add	r22, r0
 7c0:	21 1d       	adc	r18, r1
 7c2:	82 2f       	mov	r24, r18
 7c4:	76 2f       	mov	r23, r22
 7c6:	6a 2f       	mov	r22, r26
 7c8:	11 24       	eor	r1, r1
 7ca:	9f 57       	subi	r25, 0x7F	; 127
 7cc:	50 40       	sbci	r21, 0x00	; 0
 7ce:	8a f0       	brmi	.+34     	; 0x7f2 <__mulsf3_pse+0x84>
 7d0:	e1 f0       	breq	.+56     	; 0x80a <__mulsf3_pse+0x9c>
 7d2:	88 23       	and	r24, r24
 7d4:	4a f0       	brmi	.+18     	; 0x7e8 <__mulsf3_pse+0x7a>
 7d6:	ee 0f       	add	r30, r30
 7d8:	ff 1f       	adc	r31, r31
 7da:	bb 1f       	adc	r27, r27
 7dc:	66 1f       	adc	r22, r22
 7de:	77 1f       	adc	r23, r23
 7e0:	88 1f       	adc	r24, r24
 7e2:	91 50       	subi	r25, 0x01	; 1
 7e4:	50 40       	sbci	r21, 0x00	; 0
 7e6:	a9 f7       	brne	.-22     	; 0x7d2 <__mulsf3_pse+0x64>
 7e8:	9e 3f       	cpi	r25, 0xFE	; 254
 7ea:	51 05       	cpc	r21, r1
 7ec:	70 f0       	brcs	.+28     	; 0x80a <__mulsf3_pse+0x9c>
 7ee:	60 cf       	rjmp	.-320    	; 0x6b0 <__fp_inf>
 7f0:	aa cf       	rjmp	.-172    	; 0x746 <__fp_szero>
 7f2:	5f 3f       	cpi	r21, 0xFF	; 255
 7f4:	ec f3       	brlt	.-6      	; 0x7f0 <__mulsf3_pse+0x82>
 7f6:	98 3e       	cpi	r25, 0xE8	; 232
 7f8:	dc f3       	brlt	.-10     	; 0x7f0 <__mulsf3_pse+0x82>
 7fa:	86 95       	lsr	r24
 7fc:	77 95       	ror	r23
 7fe:	67 95       	ror	r22
 800:	b7 95       	ror	r27
 802:	f7 95       	ror	r31
 804:	e7 95       	ror	r30
 806:	9f 5f       	subi	r25, 0xFF	; 255
 808:	c1 f7       	brne	.-16     	; 0x7fa <__mulsf3_pse+0x8c>
 80a:	fe 2b       	or	r31, r30
 80c:	88 0f       	add	r24, r24
 80e:	91 1d       	adc	r25, r1
 810:	96 95       	lsr	r25
 812:	87 95       	ror	r24
 814:	97 f9       	bld	r25, 7
 816:	08 95       	ret

00000818 <__divmodhi4>:
 818:	97 fb       	bst	r25, 7
 81a:	07 2e       	mov	r0, r23
 81c:	16 f4       	brtc	.+4      	; 0x822 <__divmodhi4+0xa>
 81e:	00 94       	com	r0
 820:	06 d0       	rcall	.+12     	; 0x82e <__divmodhi4_neg1>
 822:	77 fd       	sbrc	r23, 7
 824:	08 d0       	rcall	.+16     	; 0x836 <__divmodhi4_neg2>
 826:	14 d0       	rcall	.+40     	; 0x850 <__udivmodhi4>
 828:	07 fc       	sbrc	r0, 7
 82a:	05 d0       	rcall	.+10     	; 0x836 <__divmodhi4_neg2>
 82c:	3e f4       	brtc	.+14     	; 0x83c <__divmodhi4_exit>

0000082e <__divmodhi4_neg1>:
 82e:	90 95       	com	r25
 830:	81 95       	neg	r24
 832:	9f 4f       	sbci	r25, 0xFF	; 255
 834:	08 95       	ret

00000836 <__divmodhi4_neg2>:
 836:	70 95       	com	r23
 838:	61 95       	neg	r22
 83a:	7f 4f       	sbci	r23, 0xFF	; 255

0000083c <__divmodhi4_exit>:
 83c:	08 95       	ret

0000083e <__tablejump2__>:
 83e:	ee 0f       	add	r30, r30
 840:	ff 1f       	adc	r31, r31
 842:	00 24       	eor	r0, r0
 844:	00 1c       	adc	r0, r0
 846:	0b be       	out	0x3b, r0	; 59
 848:	07 90       	elpm	r0, Z+
 84a:	f6 91       	elpm	r31, Z
 84c:	e0 2d       	mov	r30, r0
 84e:	09 94       	ijmp

00000850 <__udivmodhi4>:
 850:	aa 1b       	sub	r26, r26
 852:	bb 1b       	sub	r27, r27
 854:	51 e1       	ldi	r21, 0x11	; 17
 856:	07 c0       	rjmp	.+14     	; 0x866 <__udivmodhi4_ep>

00000858 <__udivmodhi4_loop>:
 858:	aa 1f       	adc	r26, r26
 85a:	bb 1f       	adc	r27, r27
 85c:	a6 17       	cp	r26, r22
 85e:	b7 07       	cpc	r27, r23
 860:	10 f0       	brcs	.+4      	; 0x866 <__udivmodhi4_ep>
 862:	a6 1b       	sub	r26, r22
 864:	b7 0b       	sbc	r27, r23

00000866 <__udivmodhi4_ep>:
 866:	88 1f       	adc	r24, r24
 868:	99 1f       	adc	r25, r25
 86a:	5a 95       	dec	r21
 86c:	a9 f7       	brne	.-22     	; 0x858 <__udivmodhi4_loop>
 86e:	80 95       	com	r24
 870:	90 95       	com	r25
 872:	bc 01       	movw	r22, r24
 874:	cd 01       	movw	r24, r26
 876:	08 95       	ret

00000878 <sprintf>:
 878:	0f 93       	push	r16
 87a:	1f 93       	push	r17
 87c:	cf 93       	push	r28
 87e:	df 93       	push	r29
 880:	cd b7       	in	r28, 0x3d	; 61
 882:	de b7       	in	r29, 0x3e	; 62
 884:	2e 97       	sbiw	r28, 0x0e	; 14
 886:	0f b6       	in	r0, 0x3f	; 63
 888:	f8 94       	cli
 88a:	de bf       	out	0x3e, r29	; 62
 88c:	0f be       	out	0x3f, r0	; 63
 88e:	cd bf       	out	0x3d, r28	; 61
 890:	0d 89       	ldd	r16, Y+21	; 0x15
 892:	1e 89       	ldd	r17, Y+22	; 0x16
 894:	86 e0       	ldi	r24, 0x06	; 6
 896:	8c 83       	std	Y+4, r24	; 0x04
 898:	1a 83       	std	Y+2, r17	; 0x02
 89a:	09 83       	std	Y+1, r16	; 0x01
 89c:	8f ef       	ldi	r24, 0xFF	; 255
 89e:	9f e7       	ldi	r25, 0x7F	; 127
 8a0:	9e 83       	std	Y+6, r25	; 0x06
 8a2:	8d 83       	std	Y+5, r24	; 0x05
 8a4:	ae 01       	movw	r20, r28
 8a6:	47 5e       	subi	r20, 0xE7	; 231
 8a8:	5f 4f       	sbci	r21, 0xFF	; 255
 8aa:	6f 89       	ldd	r22, Y+23	; 0x17
 8ac:	78 8d       	ldd	r23, Y+24	; 0x18
 8ae:	ce 01       	movw	r24, r28
 8b0:	01 96       	adiw	r24, 0x01	; 1
 8b2:	10 d0       	rcall	.+32     	; 0x8d4 <vfprintf>
 8b4:	ef 81       	ldd	r30, Y+7	; 0x07
 8b6:	f8 85       	ldd	r31, Y+8	; 0x08
 8b8:	e0 0f       	add	r30, r16
 8ba:	f1 1f       	adc	r31, r17
 8bc:	10 82       	st	Z, r1
 8be:	2e 96       	adiw	r28, 0x0e	; 14
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	df 91       	pop	r29
 8cc:	cf 91       	pop	r28
 8ce:	1f 91       	pop	r17
 8d0:	0f 91       	pop	r16
 8d2:	08 95       	ret

000008d4 <vfprintf>:
 8d4:	2f 92       	push	r2
 8d6:	3f 92       	push	r3
 8d8:	4f 92       	push	r4
 8da:	5f 92       	push	r5
 8dc:	6f 92       	push	r6
 8de:	7f 92       	push	r7
 8e0:	8f 92       	push	r8
 8e2:	9f 92       	push	r9
 8e4:	af 92       	push	r10
 8e6:	bf 92       	push	r11
 8e8:	cf 92       	push	r12
 8ea:	df 92       	push	r13
 8ec:	ef 92       	push	r14
 8ee:	ff 92       	push	r15
 8f0:	0f 93       	push	r16
 8f2:	1f 93       	push	r17
 8f4:	cf 93       	push	r28
 8f6:	df 93       	push	r29
 8f8:	cd b7       	in	r28, 0x3d	; 61
 8fa:	de b7       	in	r29, 0x3e	; 62
 8fc:	2b 97       	sbiw	r28, 0x0b	; 11
 8fe:	0f b6       	in	r0, 0x3f	; 63
 900:	f8 94       	cli
 902:	de bf       	out	0x3e, r29	; 62
 904:	0f be       	out	0x3f, r0	; 63
 906:	cd bf       	out	0x3d, r28	; 61
 908:	6c 01       	movw	r12, r24
 90a:	7b 01       	movw	r14, r22
 90c:	8a 01       	movw	r16, r20
 90e:	fc 01       	movw	r30, r24
 910:	17 82       	std	Z+7, r1	; 0x07
 912:	16 82       	std	Z+6, r1	; 0x06
 914:	83 81       	ldd	r24, Z+3	; 0x03
 916:	81 ff       	sbrs	r24, 1
 918:	bf c1       	rjmp	.+894    	; 0xc98 <vfprintf+0x3c4>
 91a:	ce 01       	movw	r24, r28
 91c:	01 96       	adiw	r24, 0x01	; 1
 91e:	3c 01       	movw	r6, r24
 920:	f6 01       	movw	r30, r12
 922:	93 81       	ldd	r25, Z+3	; 0x03
 924:	f7 01       	movw	r30, r14
 926:	93 fd       	sbrc	r25, 3
 928:	85 91       	lpm	r24, Z+
 92a:	93 ff       	sbrs	r25, 3
 92c:	81 91       	ld	r24, Z+
 92e:	7f 01       	movw	r14, r30
 930:	88 23       	and	r24, r24
 932:	09 f4       	brne	.+2      	; 0x936 <vfprintf+0x62>
 934:	ad c1       	rjmp	.+858    	; 0xc90 <vfprintf+0x3bc>
 936:	85 32       	cpi	r24, 0x25	; 37
 938:	39 f4       	brne	.+14     	; 0x948 <vfprintf+0x74>
 93a:	93 fd       	sbrc	r25, 3
 93c:	85 91       	lpm	r24, Z+
 93e:	93 ff       	sbrs	r25, 3
 940:	81 91       	ld	r24, Z+
 942:	7f 01       	movw	r14, r30
 944:	85 32       	cpi	r24, 0x25	; 37
 946:	21 f4       	brne	.+8      	; 0x950 <vfprintf+0x7c>
 948:	b6 01       	movw	r22, r12
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	d6 d1       	rcall	.+940    	; 0xcfa <fputc>
 94e:	e8 cf       	rjmp	.-48     	; 0x920 <vfprintf+0x4c>
 950:	91 2c       	mov	r9, r1
 952:	21 2c       	mov	r2, r1
 954:	31 2c       	mov	r3, r1
 956:	ff e1       	ldi	r31, 0x1F	; 31
 958:	f3 15       	cp	r31, r3
 95a:	d8 f0       	brcs	.+54     	; 0x992 <vfprintf+0xbe>
 95c:	8b 32       	cpi	r24, 0x2B	; 43
 95e:	79 f0       	breq	.+30     	; 0x97e <vfprintf+0xaa>
 960:	38 f4       	brcc	.+14     	; 0x970 <vfprintf+0x9c>
 962:	80 32       	cpi	r24, 0x20	; 32
 964:	79 f0       	breq	.+30     	; 0x984 <vfprintf+0xb0>
 966:	83 32       	cpi	r24, 0x23	; 35
 968:	a1 f4       	brne	.+40     	; 0x992 <vfprintf+0xbe>
 96a:	23 2d       	mov	r18, r3
 96c:	20 61       	ori	r18, 0x10	; 16
 96e:	1d c0       	rjmp	.+58     	; 0x9aa <vfprintf+0xd6>
 970:	8d 32       	cpi	r24, 0x2D	; 45
 972:	61 f0       	breq	.+24     	; 0x98c <vfprintf+0xb8>
 974:	80 33       	cpi	r24, 0x30	; 48
 976:	69 f4       	brne	.+26     	; 0x992 <vfprintf+0xbe>
 978:	23 2d       	mov	r18, r3
 97a:	21 60       	ori	r18, 0x01	; 1
 97c:	16 c0       	rjmp	.+44     	; 0x9aa <vfprintf+0xd6>
 97e:	83 2d       	mov	r24, r3
 980:	82 60       	ori	r24, 0x02	; 2
 982:	38 2e       	mov	r3, r24
 984:	e3 2d       	mov	r30, r3
 986:	e4 60       	ori	r30, 0x04	; 4
 988:	3e 2e       	mov	r3, r30
 98a:	2a c0       	rjmp	.+84     	; 0x9e0 <vfprintf+0x10c>
 98c:	f3 2d       	mov	r31, r3
 98e:	f8 60       	ori	r31, 0x08	; 8
 990:	1d c0       	rjmp	.+58     	; 0x9cc <vfprintf+0xf8>
 992:	37 fc       	sbrc	r3, 7
 994:	2d c0       	rjmp	.+90     	; 0x9f0 <vfprintf+0x11c>
 996:	20 ed       	ldi	r18, 0xD0	; 208
 998:	28 0f       	add	r18, r24
 99a:	2a 30       	cpi	r18, 0x0A	; 10
 99c:	40 f0       	brcs	.+16     	; 0x9ae <vfprintf+0xda>
 99e:	8e 32       	cpi	r24, 0x2E	; 46
 9a0:	b9 f4       	brne	.+46     	; 0x9d0 <vfprintf+0xfc>
 9a2:	36 fc       	sbrc	r3, 6
 9a4:	75 c1       	rjmp	.+746    	; 0xc90 <vfprintf+0x3bc>
 9a6:	23 2d       	mov	r18, r3
 9a8:	20 64       	ori	r18, 0x40	; 64
 9aa:	32 2e       	mov	r3, r18
 9ac:	19 c0       	rjmp	.+50     	; 0x9e0 <vfprintf+0x10c>
 9ae:	36 fe       	sbrs	r3, 6
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <vfprintf+0xea>
 9b2:	8a e0       	ldi	r24, 0x0A	; 10
 9b4:	98 9e       	mul	r9, r24
 9b6:	20 0d       	add	r18, r0
 9b8:	11 24       	eor	r1, r1
 9ba:	92 2e       	mov	r9, r18
 9bc:	11 c0       	rjmp	.+34     	; 0x9e0 <vfprintf+0x10c>
 9be:	ea e0       	ldi	r30, 0x0A	; 10
 9c0:	2e 9e       	mul	r2, r30
 9c2:	20 0d       	add	r18, r0
 9c4:	11 24       	eor	r1, r1
 9c6:	22 2e       	mov	r2, r18
 9c8:	f3 2d       	mov	r31, r3
 9ca:	f0 62       	ori	r31, 0x20	; 32
 9cc:	3f 2e       	mov	r3, r31
 9ce:	08 c0       	rjmp	.+16     	; 0x9e0 <vfprintf+0x10c>
 9d0:	8c 36       	cpi	r24, 0x6C	; 108
 9d2:	21 f4       	brne	.+8      	; 0x9dc <vfprintf+0x108>
 9d4:	83 2d       	mov	r24, r3
 9d6:	80 68       	ori	r24, 0x80	; 128
 9d8:	38 2e       	mov	r3, r24
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <vfprintf+0x10c>
 9dc:	88 36       	cpi	r24, 0x68	; 104
 9de:	41 f4       	brne	.+16     	; 0x9f0 <vfprintf+0x11c>
 9e0:	f7 01       	movw	r30, r14
 9e2:	93 fd       	sbrc	r25, 3
 9e4:	85 91       	lpm	r24, Z+
 9e6:	93 ff       	sbrs	r25, 3
 9e8:	81 91       	ld	r24, Z+
 9ea:	7f 01       	movw	r14, r30
 9ec:	81 11       	cpse	r24, r1
 9ee:	b3 cf       	rjmp	.-154    	; 0x956 <vfprintf+0x82>
 9f0:	98 2f       	mov	r25, r24
 9f2:	9f 7d       	andi	r25, 0xDF	; 223
 9f4:	95 54       	subi	r25, 0x45	; 69
 9f6:	93 30       	cpi	r25, 0x03	; 3
 9f8:	28 f4       	brcc	.+10     	; 0xa04 <vfprintf+0x130>
 9fa:	0c 5f       	subi	r16, 0xFC	; 252
 9fc:	1f 4f       	sbci	r17, 0xFF	; 255
 9fe:	9f e3       	ldi	r25, 0x3F	; 63
 a00:	99 83       	std	Y+1, r25	; 0x01
 a02:	0d c0       	rjmp	.+26     	; 0xa1e <vfprintf+0x14a>
 a04:	83 36       	cpi	r24, 0x63	; 99
 a06:	31 f0       	breq	.+12     	; 0xa14 <vfprintf+0x140>
 a08:	83 37       	cpi	r24, 0x73	; 115
 a0a:	71 f0       	breq	.+28     	; 0xa28 <vfprintf+0x154>
 a0c:	83 35       	cpi	r24, 0x53	; 83
 a0e:	09 f0       	breq	.+2      	; 0xa12 <vfprintf+0x13e>
 a10:	55 c0       	rjmp	.+170    	; 0xabc <vfprintf+0x1e8>
 a12:	20 c0       	rjmp	.+64     	; 0xa54 <vfprintf+0x180>
 a14:	f8 01       	movw	r30, r16
 a16:	80 81       	ld	r24, Z
 a18:	89 83       	std	Y+1, r24	; 0x01
 a1a:	0e 5f       	subi	r16, 0xFE	; 254
 a1c:	1f 4f       	sbci	r17, 0xFF	; 255
 a1e:	88 24       	eor	r8, r8
 a20:	83 94       	inc	r8
 a22:	91 2c       	mov	r9, r1
 a24:	53 01       	movw	r10, r6
 a26:	12 c0       	rjmp	.+36     	; 0xa4c <vfprintf+0x178>
 a28:	28 01       	movw	r4, r16
 a2a:	f2 e0       	ldi	r31, 0x02	; 2
 a2c:	4f 0e       	add	r4, r31
 a2e:	51 1c       	adc	r5, r1
 a30:	f8 01       	movw	r30, r16
 a32:	a0 80       	ld	r10, Z
 a34:	b1 80       	ldd	r11, Z+1	; 0x01
 a36:	36 fe       	sbrs	r3, 6
 a38:	03 c0       	rjmp	.+6      	; 0xa40 <vfprintf+0x16c>
 a3a:	69 2d       	mov	r22, r9
 a3c:	70 e0       	ldi	r23, 0x00	; 0
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <vfprintf+0x170>
 a40:	6f ef       	ldi	r22, 0xFF	; 255
 a42:	7f ef       	ldi	r23, 0xFF	; 255
 a44:	c5 01       	movw	r24, r10
 a46:	4e d1       	rcall	.+668    	; 0xce4 <strnlen>
 a48:	4c 01       	movw	r8, r24
 a4a:	82 01       	movw	r16, r4
 a4c:	f3 2d       	mov	r31, r3
 a4e:	ff 77       	andi	r31, 0x7F	; 127
 a50:	3f 2e       	mov	r3, r31
 a52:	15 c0       	rjmp	.+42     	; 0xa7e <vfprintf+0x1aa>
 a54:	28 01       	movw	r4, r16
 a56:	22 e0       	ldi	r18, 0x02	; 2
 a58:	42 0e       	add	r4, r18
 a5a:	51 1c       	adc	r5, r1
 a5c:	f8 01       	movw	r30, r16
 a5e:	a0 80       	ld	r10, Z
 a60:	b1 80       	ldd	r11, Z+1	; 0x01
 a62:	36 fe       	sbrs	r3, 6
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <vfprintf+0x198>
 a66:	69 2d       	mov	r22, r9
 a68:	70 e0       	ldi	r23, 0x00	; 0
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <vfprintf+0x19c>
 a6c:	6f ef       	ldi	r22, 0xFF	; 255
 a6e:	7f ef       	ldi	r23, 0xFF	; 255
 a70:	c5 01       	movw	r24, r10
 a72:	2d d1       	rcall	.+602    	; 0xcce <strnlen_P>
 a74:	4c 01       	movw	r8, r24
 a76:	f3 2d       	mov	r31, r3
 a78:	f0 68       	ori	r31, 0x80	; 128
 a7a:	3f 2e       	mov	r3, r31
 a7c:	82 01       	movw	r16, r4
 a7e:	33 fc       	sbrc	r3, 3
 a80:	19 c0       	rjmp	.+50     	; 0xab4 <vfprintf+0x1e0>
 a82:	82 2d       	mov	r24, r2
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	88 16       	cp	r8, r24
 a88:	99 06       	cpc	r9, r25
 a8a:	a0 f4       	brcc	.+40     	; 0xab4 <vfprintf+0x1e0>
 a8c:	b6 01       	movw	r22, r12
 a8e:	80 e2       	ldi	r24, 0x20	; 32
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	33 d1       	rcall	.+614    	; 0xcfa <fputc>
 a94:	2a 94       	dec	r2
 a96:	f5 cf       	rjmp	.-22     	; 0xa82 <vfprintf+0x1ae>
 a98:	f5 01       	movw	r30, r10
 a9a:	37 fc       	sbrc	r3, 7
 a9c:	85 91       	lpm	r24, Z+
 a9e:	37 fe       	sbrs	r3, 7
 aa0:	81 91       	ld	r24, Z+
 aa2:	5f 01       	movw	r10, r30
 aa4:	b6 01       	movw	r22, r12
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	28 d1       	rcall	.+592    	; 0xcfa <fputc>
 aaa:	21 10       	cpse	r2, r1
 aac:	2a 94       	dec	r2
 aae:	21 e0       	ldi	r18, 0x01	; 1
 ab0:	82 1a       	sub	r8, r18
 ab2:	91 08       	sbc	r9, r1
 ab4:	81 14       	cp	r8, r1
 ab6:	91 04       	cpc	r9, r1
 ab8:	79 f7       	brne	.-34     	; 0xa98 <vfprintf+0x1c4>
 aba:	e1 c0       	rjmp	.+450    	; 0xc7e <vfprintf+0x3aa>
 abc:	84 36       	cpi	r24, 0x64	; 100
 abe:	11 f0       	breq	.+4      	; 0xac4 <vfprintf+0x1f0>
 ac0:	89 36       	cpi	r24, 0x69	; 105
 ac2:	39 f5       	brne	.+78     	; 0xb12 <vfprintf+0x23e>
 ac4:	f8 01       	movw	r30, r16
 ac6:	37 fe       	sbrs	r3, 7
 ac8:	07 c0       	rjmp	.+14     	; 0xad8 <vfprintf+0x204>
 aca:	60 81       	ld	r22, Z
 acc:	71 81       	ldd	r23, Z+1	; 0x01
 ace:	82 81       	ldd	r24, Z+2	; 0x02
 ad0:	93 81       	ldd	r25, Z+3	; 0x03
 ad2:	0c 5f       	subi	r16, 0xFC	; 252
 ad4:	1f 4f       	sbci	r17, 0xFF	; 255
 ad6:	08 c0       	rjmp	.+16     	; 0xae8 <vfprintf+0x214>
 ad8:	60 81       	ld	r22, Z
 ada:	71 81       	ldd	r23, Z+1	; 0x01
 adc:	07 2e       	mov	r0, r23
 ade:	00 0c       	add	r0, r0
 ae0:	88 0b       	sbc	r24, r24
 ae2:	99 0b       	sbc	r25, r25
 ae4:	0e 5f       	subi	r16, 0xFE	; 254
 ae6:	1f 4f       	sbci	r17, 0xFF	; 255
 ae8:	f3 2d       	mov	r31, r3
 aea:	ff 76       	andi	r31, 0x6F	; 111
 aec:	3f 2e       	mov	r3, r31
 aee:	97 ff       	sbrs	r25, 7
 af0:	09 c0       	rjmp	.+18     	; 0xb04 <vfprintf+0x230>
 af2:	90 95       	com	r25
 af4:	80 95       	com	r24
 af6:	70 95       	com	r23
 af8:	61 95       	neg	r22
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	f0 68       	ori	r31, 0x80	; 128
 b02:	3f 2e       	mov	r3, r31
 b04:	2a e0       	ldi	r18, 0x0A	; 10
 b06:	30 e0       	ldi	r19, 0x00	; 0
 b08:	a3 01       	movw	r20, r6
 b0a:	33 d1       	rcall	.+614    	; 0xd72 <__ultoa_invert>
 b0c:	88 2e       	mov	r8, r24
 b0e:	86 18       	sub	r8, r6
 b10:	44 c0       	rjmp	.+136    	; 0xb9a <vfprintf+0x2c6>
 b12:	85 37       	cpi	r24, 0x75	; 117
 b14:	31 f4       	brne	.+12     	; 0xb22 <vfprintf+0x24e>
 b16:	23 2d       	mov	r18, r3
 b18:	2f 7e       	andi	r18, 0xEF	; 239
 b1a:	b2 2e       	mov	r11, r18
 b1c:	2a e0       	ldi	r18, 0x0A	; 10
 b1e:	30 e0       	ldi	r19, 0x00	; 0
 b20:	25 c0       	rjmp	.+74     	; 0xb6c <vfprintf+0x298>
 b22:	93 2d       	mov	r25, r3
 b24:	99 7f       	andi	r25, 0xF9	; 249
 b26:	b9 2e       	mov	r11, r25
 b28:	8f 36       	cpi	r24, 0x6F	; 111
 b2a:	c1 f0       	breq	.+48     	; 0xb5c <vfprintf+0x288>
 b2c:	18 f4       	brcc	.+6      	; 0xb34 <vfprintf+0x260>
 b2e:	88 35       	cpi	r24, 0x58	; 88
 b30:	79 f0       	breq	.+30     	; 0xb50 <vfprintf+0x27c>
 b32:	ae c0       	rjmp	.+348    	; 0xc90 <vfprintf+0x3bc>
 b34:	80 37       	cpi	r24, 0x70	; 112
 b36:	19 f0       	breq	.+6      	; 0xb3e <vfprintf+0x26a>
 b38:	88 37       	cpi	r24, 0x78	; 120
 b3a:	21 f0       	breq	.+8      	; 0xb44 <vfprintf+0x270>
 b3c:	a9 c0       	rjmp	.+338    	; 0xc90 <vfprintf+0x3bc>
 b3e:	e9 2f       	mov	r30, r25
 b40:	e0 61       	ori	r30, 0x10	; 16
 b42:	be 2e       	mov	r11, r30
 b44:	b4 fe       	sbrs	r11, 4
 b46:	0d c0       	rjmp	.+26     	; 0xb62 <vfprintf+0x28e>
 b48:	fb 2d       	mov	r31, r11
 b4a:	f4 60       	ori	r31, 0x04	; 4
 b4c:	bf 2e       	mov	r11, r31
 b4e:	09 c0       	rjmp	.+18     	; 0xb62 <vfprintf+0x28e>
 b50:	34 fe       	sbrs	r3, 4
 b52:	0a c0       	rjmp	.+20     	; 0xb68 <vfprintf+0x294>
 b54:	29 2f       	mov	r18, r25
 b56:	26 60       	ori	r18, 0x06	; 6
 b58:	b2 2e       	mov	r11, r18
 b5a:	06 c0       	rjmp	.+12     	; 0xb68 <vfprintf+0x294>
 b5c:	28 e0       	ldi	r18, 0x08	; 8
 b5e:	30 e0       	ldi	r19, 0x00	; 0
 b60:	05 c0       	rjmp	.+10     	; 0xb6c <vfprintf+0x298>
 b62:	20 e1       	ldi	r18, 0x10	; 16
 b64:	30 e0       	ldi	r19, 0x00	; 0
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <vfprintf+0x298>
 b68:	20 e1       	ldi	r18, 0x10	; 16
 b6a:	32 e0       	ldi	r19, 0x02	; 2
 b6c:	f8 01       	movw	r30, r16
 b6e:	b7 fe       	sbrs	r11, 7
 b70:	07 c0       	rjmp	.+14     	; 0xb80 <vfprintf+0x2ac>
 b72:	60 81       	ld	r22, Z
 b74:	71 81       	ldd	r23, Z+1	; 0x01
 b76:	82 81       	ldd	r24, Z+2	; 0x02
 b78:	93 81       	ldd	r25, Z+3	; 0x03
 b7a:	0c 5f       	subi	r16, 0xFC	; 252
 b7c:	1f 4f       	sbci	r17, 0xFF	; 255
 b7e:	06 c0       	rjmp	.+12     	; 0xb8c <vfprintf+0x2b8>
 b80:	60 81       	ld	r22, Z
 b82:	71 81       	ldd	r23, Z+1	; 0x01
 b84:	80 e0       	ldi	r24, 0x00	; 0
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	0e 5f       	subi	r16, 0xFE	; 254
 b8a:	1f 4f       	sbci	r17, 0xFF	; 255
 b8c:	a3 01       	movw	r20, r6
 b8e:	f1 d0       	rcall	.+482    	; 0xd72 <__ultoa_invert>
 b90:	88 2e       	mov	r8, r24
 b92:	86 18       	sub	r8, r6
 b94:	fb 2d       	mov	r31, r11
 b96:	ff 77       	andi	r31, 0x7F	; 127
 b98:	3f 2e       	mov	r3, r31
 b9a:	36 fe       	sbrs	r3, 6
 b9c:	0d c0       	rjmp	.+26     	; 0xbb8 <vfprintf+0x2e4>
 b9e:	23 2d       	mov	r18, r3
 ba0:	2e 7f       	andi	r18, 0xFE	; 254
 ba2:	a2 2e       	mov	r10, r18
 ba4:	89 14       	cp	r8, r9
 ba6:	58 f4       	brcc	.+22     	; 0xbbe <vfprintf+0x2ea>
 ba8:	34 fe       	sbrs	r3, 4
 baa:	0b c0       	rjmp	.+22     	; 0xbc2 <vfprintf+0x2ee>
 bac:	32 fc       	sbrc	r3, 2
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x2ee>
 bb0:	83 2d       	mov	r24, r3
 bb2:	8e 7e       	andi	r24, 0xEE	; 238
 bb4:	a8 2e       	mov	r10, r24
 bb6:	05 c0       	rjmp	.+10     	; 0xbc2 <vfprintf+0x2ee>
 bb8:	b8 2c       	mov	r11, r8
 bba:	a3 2c       	mov	r10, r3
 bbc:	03 c0       	rjmp	.+6      	; 0xbc4 <vfprintf+0x2f0>
 bbe:	b8 2c       	mov	r11, r8
 bc0:	01 c0       	rjmp	.+2      	; 0xbc4 <vfprintf+0x2f0>
 bc2:	b9 2c       	mov	r11, r9
 bc4:	a4 fe       	sbrs	r10, 4
 bc6:	0f c0       	rjmp	.+30     	; 0xbe6 <vfprintf+0x312>
 bc8:	fe 01       	movw	r30, r28
 bca:	e8 0d       	add	r30, r8
 bcc:	f1 1d       	adc	r31, r1
 bce:	80 81       	ld	r24, Z
 bd0:	80 33       	cpi	r24, 0x30	; 48
 bd2:	21 f4       	brne	.+8      	; 0xbdc <vfprintf+0x308>
 bd4:	9a 2d       	mov	r25, r10
 bd6:	99 7e       	andi	r25, 0xE9	; 233
 bd8:	a9 2e       	mov	r10, r25
 bda:	09 c0       	rjmp	.+18     	; 0xbee <vfprintf+0x31a>
 bdc:	a2 fe       	sbrs	r10, 2
 bde:	06 c0       	rjmp	.+12     	; 0xbec <vfprintf+0x318>
 be0:	b3 94       	inc	r11
 be2:	b3 94       	inc	r11
 be4:	04 c0       	rjmp	.+8      	; 0xbee <vfprintf+0x31a>
 be6:	8a 2d       	mov	r24, r10
 be8:	86 78       	andi	r24, 0x86	; 134
 bea:	09 f0       	breq	.+2      	; 0xbee <vfprintf+0x31a>
 bec:	b3 94       	inc	r11
 bee:	a3 fc       	sbrc	r10, 3
 bf0:	10 c0       	rjmp	.+32     	; 0xc12 <vfprintf+0x33e>
 bf2:	a0 fe       	sbrs	r10, 0
 bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0x32e>
 bf6:	b2 14       	cp	r11, r2
 bf8:	80 f4       	brcc	.+32     	; 0xc1a <vfprintf+0x346>
 bfa:	28 0c       	add	r2, r8
 bfc:	92 2c       	mov	r9, r2
 bfe:	9b 18       	sub	r9, r11
 c00:	0d c0       	rjmp	.+26     	; 0xc1c <vfprintf+0x348>
 c02:	b2 14       	cp	r11, r2
 c04:	58 f4       	brcc	.+22     	; 0xc1c <vfprintf+0x348>
 c06:	b6 01       	movw	r22, r12
 c08:	80 e2       	ldi	r24, 0x20	; 32
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	76 d0       	rcall	.+236    	; 0xcfa <fputc>
 c0e:	b3 94       	inc	r11
 c10:	f8 cf       	rjmp	.-16     	; 0xc02 <vfprintf+0x32e>
 c12:	b2 14       	cp	r11, r2
 c14:	18 f4       	brcc	.+6      	; 0xc1c <vfprintf+0x348>
 c16:	2b 18       	sub	r2, r11
 c18:	02 c0       	rjmp	.+4      	; 0xc1e <vfprintf+0x34a>
 c1a:	98 2c       	mov	r9, r8
 c1c:	21 2c       	mov	r2, r1
 c1e:	a4 fe       	sbrs	r10, 4
 c20:	0f c0       	rjmp	.+30     	; 0xc40 <vfprintf+0x36c>
 c22:	b6 01       	movw	r22, r12
 c24:	80 e3       	ldi	r24, 0x30	; 48
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	68 d0       	rcall	.+208    	; 0xcfa <fputc>
 c2a:	a2 fe       	sbrs	r10, 2
 c2c:	16 c0       	rjmp	.+44     	; 0xc5a <vfprintf+0x386>
 c2e:	a1 fc       	sbrc	r10, 1
 c30:	03 c0       	rjmp	.+6      	; 0xc38 <vfprintf+0x364>
 c32:	88 e7       	ldi	r24, 0x78	; 120
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	02 c0       	rjmp	.+4      	; 0xc3c <vfprintf+0x368>
 c38:	88 e5       	ldi	r24, 0x58	; 88
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	b6 01       	movw	r22, r12
 c3e:	0c c0       	rjmp	.+24     	; 0xc58 <vfprintf+0x384>
 c40:	8a 2d       	mov	r24, r10
 c42:	86 78       	andi	r24, 0x86	; 134
 c44:	51 f0       	breq	.+20     	; 0xc5a <vfprintf+0x386>
 c46:	a1 fe       	sbrs	r10, 1
 c48:	02 c0       	rjmp	.+4      	; 0xc4e <vfprintf+0x37a>
 c4a:	8b e2       	ldi	r24, 0x2B	; 43
 c4c:	01 c0       	rjmp	.+2      	; 0xc50 <vfprintf+0x37c>
 c4e:	80 e2       	ldi	r24, 0x20	; 32
 c50:	a7 fc       	sbrc	r10, 7
 c52:	8d e2       	ldi	r24, 0x2D	; 45
 c54:	b6 01       	movw	r22, r12
 c56:	90 e0       	ldi	r25, 0x00	; 0
 c58:	50 d0       	rcall	.+160    	; 0xcfa <fputc>
 c5a:	89 14       	cp	r8, r9
 c5c:	30 f4       	brcc	.+12     	; 0xc6a <vfprintf+0x396>
 c5e:	b6 01       	movw	r22, r12
 c60:	80 e3       	ldi	r24, 0x30	; 48
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	4a d0       	rcall	.+148    	; 0xcfa <fputc>
 c66:	9a 94       	dec	r9
 c68:	f8 cf       	rjmp	.-16     	; 0xc5a <vfprintf+0x386>
 c6a:	8a 94       	dec	r8
 c6c:	f3 01       	movw	r30, r6
 c6e:	e8 0d       	add	r30, r8
 c70:	f1 1d       	adc	r31, r1
 c72:	80 81       	ld	r24, Z
 c74:	b6 01       	movw	r22, r12
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	40 d0       	rcall	.+128    	; 0xcfa <fputc>
 c7a:	81 10       	cpse	r8, r1
 c7c:	f6 cf       	rjmp	.-20     	; 0xc6a <vfprintf+0x396>
 c7e:	22 20       	and	r2, r2
 c80:	09 f4       	brne	.+2      	; 0xc84 <vfprintf+0x3b0>
 c82:	4e ce       	rjmp	.-868    	; 0x920 <vfprintf+0x4c>
 c84:	b6 01       	movw	r22, r12
 c86:	80 e2       	ldi	r24, 0x20	; 32
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	37 d0       	rcall	.+110    	; 0xcfa <fputc>
 c8c:	2a 94       	dec	r2
 c8e:	f7 cf       	rjmp	.-18     	; 0xc7e <vfprintf+0x3aa>
 c90:	f6 01       	movw	r30, r12
 c92:	86 81       	ldd	r24, Z+6	; 0x06
 c94:	97 81       	ldd	r25, Z+7	; 0x07
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x3c8>
 c98:	8f ef       	ldi	r24, 0xFF	; 255
 c9a:	9f ef       	ldi	r25, 0xFF	; 255
 c9c:	2b 96       	adiw	r28, 0x0b	; 11
 c9e:	0f b6       	in	r0, 0x3f	; 63
 ca0:	f8 94       	cli
 ca2:	de bf       	out	0x3e, r29	; 62
 ca4:	0f be       	out	0x3f, r0	; 63
 ca6:	cd bf       	out	0x3d, r28	; 61
 ca8:	df 91       	pop	r29
 caa:	cf 91       	pop	r28
 cac:	1f 91       	pop	r17
 cae:	0f 91       	pop	r16
 cb0:	ff 90       	pop	r15
 cb2:	ef 90       	pop	r14
 cb4:	df 90       	pop	r13
 cb6:	cf 90       	pop	r12
 cb8:	bf 90       	pop	r11
 cba:	af 90       	pop	r10
 cbc:	9f 90       	pop	r9
 cbe:	8f 90       	pop	r8
 cc0:	7f 90       	pop	r7
 cc2:	6f 90       	pop	r6
 cc4:	5f 90       	pop	r5
 cc6:	4f 90       	pop	r4
 cc8:	3f 90       	pop	r3
 cca:	2f 90       	pop	r2
 ccc:	08 95       	ret

00000cce <strnlen_P>:
 cce:	fc 01       	movw	r30, r24
 cd0:	05 90       	lpm	r0, Z+
 cd2:	61 50       	subi	r22, 0x01	; 1
 cd4:	70 40       	sbci	r23, 0x00	; 0
 cd6:	01 10       	cpse	r0, r1
 cd8:	d8 f7       	brcc	.-10     	; 0xcd0 <strnlen_P+0x2>
 cda:	80 95       	com	r24
 cdc:	90 95       	com	r25
 cde:	8e 0f       	add	r24, r30
 ce0:	9f 1f       	adc	r25, r31
 ce2:	08 95       	ret

00000ce4 <strnlen>:
 ce4:	fc 01       	movw	r30, r24
 ce6:	61 50       	subi	r22, 0x01	; 1
 ce8:	70 40       	sbci	r23, 0x00	; 0
 cea:	01 90       	ld	r0, Z+
 cec:	01 10       	cpse	r0, r1
 cee:	d8 f7       	brcc	.-10     	; 0xce6 <strnlen+0x2>
 cf0:	80 95       	com	r24
 cf2:	90 95       	com	r25
 cf4:	8e 0f       	add	r24, r30
 cf6:	9f 1f       	adc	r25, r31
 cf8:	08 95       	ret

00000cfa <fputc>:
 cfa:	0f 93       	push	r16
 cfc:	1f 93       	push	r17
 cfe:	cf 93       	push	r28
 d00:	df 93       	push	r29
 d02:	fb 01       	movw	r30, r22
 d04:	23 81       	ldd	r18, Z+3	; 0x03
 d06:	21 fd       	sbrc	r18, 1
 d08:	03 c0       	rjmp	.+6      	; 0xd10 <fputc+0x16>
 d0a:	8f ef       	ldi	r24, 0xFF	; 255
 d0c:	9f ef       	ldi	r25, 0xFF	; 255
 d0e:	2c c0       	rjmp	.+88     	; 0xd68 <fputc+0x6e>
 d10:	22 ff       	sbrs	r18, 2
 d12:	16 c0       	rjmp	.+44     	; 0xd40 <fputc+0x46>
 d14:	46 81       	ldd	r20, Z+6	; 0x06
 d16:	57 81       	ldd	r21, Z+7	; 0x07
 d18:	24 81       	ldd	r18, Z+4	; 0x04
 d1a:	35 81       	ldd	r19, Z+5	; 0x05
 d1c:	42 17       	cp	r20, r18
 d1e:	53 07       	cpc	r21, r19
 d20:	44 f4       	brge	.+16     	; 0xd32 <fputc+0x38>
 d22:	a0 81       	ld	r26, Z
 d24:	b1 81       	ldd	r27, Z+1	; 0x01
 d26:	9d 01       	movw	r18, r26
 d28:	2f 5f       	subi	r18, 0xFF	; 255
 d2a:	3f 4f       	sbci	r19, 0xFF	; 255
 d2c:	31 83       	std	Z+1, r19	; 0x01
 d2e:	20 83       	st	Z, r18
 d30:	8c 93       	st	X, r24
 d32:	26 81       	ldd	r18, Z+6	; 0x06
 d34:	37 81       	ldd	r19, Z+7	; 0x07
 d36:	2f 5f       	subi	r18, 0xFF	; 255
 d38:	3f 4f       	sbci	r19, 0xFF	; 255
 d3a:	37 83       	std	Z+7, r19	; 0x07
 d3c:	26 83       	std	Z+6, r18	; 0x06
 d3e:	14 c0       	rjmp	.+40     	; 0xd68 <fputc+0x6e>
 d40:	8b 01       	movw	r16, r22
 d42:	ec 01       	movw	r28, r24
 d44:	fb 01       	movw	r30, r22
 d46:	00 84       	ldd	r0, Z+8	; 0x08
 d48:	f1 85       	ldd	r31, Z+9	; 0x09
 d4a:	e0 2d       	mov	r30, r0
 d4c:	09 95       	icall
 d4e:	89 2b       	or	r24, r25
 d50:	e1 f6       	brne	.-72     	; 0xd0a <fputc+0x10>
 d52:	d8 01       	movw	r26, r16
 d54:	16 96       	adiw	r26, 0x06	; 6
 d56:	8d 91       	ld	r24, X+
 d58:	9c 91       	ld	r25, X
 d5a:	17 97       	sbiw	r26, 0x07	; 7
 d5c:	01 96       	adiw	r24, 0x01	; 1
 d5e:	17 96       	adiw	r26, 0x07	; 7
 d60:	9c 93       	st	X, r25
 d62:	8e 93       	st	-X, r24
 d64:	16 97       	sbiw	r26, 0x06	; 6
 d66:	ce 01       	movw	r24, r28
 d68:	df 91       	pop	r29
 d6a:	cf 91       	pop	r28
 d6c:	1f 91       	pop	r17
 d6e:	0f 91       	pop	r16
 d70:	08 95       	ret

00000d72 <__ultoa_invert>:
 d72:	fa 01       	movw	r30, r20
 d74:	aa 27       	eor	r26, r26
 d76:	28 30       	cpi	r18, 0x08	; 8
 d78:	51 f1       	breq	.+84     	; 0xdce <__ultoa_invert+0x5c>
 d7a:	20 31       	cpi	r18, 0x10	; 16
 d7c:	81 f1       	breq	.+96     	; 0xdde <__ultoa_invert+0x6c>
 d7e:	e8 94       	clt
 d80:	6f 93       	push	r22
 d82:	6e 7f       	andi	r22, 0xFE	; 254
 d84:	6e 5f       	subi	r22, 0xFE	; 254
 d86:	7f 4f       	sbci	r23, 0xFF	; 255
 d88:	8f 4f       	sbci	r24, 0xFF	; 255
 d8a:	9f 4f       	sbci	r25, 0xFF	; 255
 d8c:	af 4f       	sbci	r26, 0xFF	; 255
 d8e:	b1 e0       	ldi	r27, 0x01	; 1
 d90:	3e d0       	rcall	.+124    	; 0xe0e <__ultoa_invert+0x9c>
 d92:	b4 e0       	ldi	r27, 0x04	; 4
 d94:	3c d0       	rcall	.+120    	; 0xe0e <__ultoa_invert+0x9c>
 d96:	67 0f       	add	r22, r23
 d98:	78 1f       	adc	r23, r24
 d9a:	89 1f       	adc	r24, r25
 d9c:	9a 1f       	adc	r25, r26
 d9e:	a1 1d       	adc	r26, r1
 da0:	68 0f       	add	r22, r24
 da2:	79 1f       	adc	r23, r25
 da4:	8a 1f       	adc	r24, r26
 da6:	91 1d       	adc	r25, r1
 da8:	a1 1d       	adc	r26, r1
 daa:	6a 0f       	add	r22, r26
 dac:	71 1d       	adc	r23, r1
 dae:	81 1d       	adc	r24, r1
 db0:	91 1d       	adc	r25, r1
 db2:	a1 1d       	adc	r26, r1
 db4:	20 d0       	rcall	.+64     	; 0xdf6 <__ultoa_invert+0x84>
 db6:	09 f4       	brne	.+2      	; 0xdba <__ultoa_invert+0x48>
 db8:	68 94       	set
 dba:	3f 91       	pop	r19
 dbc:	2a e0       	ldi	r18, 0x0A	; 10
 dbe:	26 9f       	mul	r18, r22
 dc0:	11 24       	eor	r1, r1
 dc2:	30 19       	sub	r19, r0
 dc4:	30 5d       	subi	r19, 0xD0	; 208
 dc6:	31 93       	st	Z+, r19
 dc8:	de f6       	brtc	.-74     	; 0xd80 <__ultoa_invert+0xe>
 dca:	cf 01       	movw	r24, r30
 dcc:	08 95       	ret
 dce:	46 2f       	mov	r20, r22
 dd0:	47 70       	andi	r20, 0x07	; 7
 dd2:	40 5d       	subi	r20, 0xD0	; 208
 dd4:	41 93       	st	Z+, r20
 dd6:	b3 e0       	ldi	r27, 0x03	; 3
 dd8:	0f d0       	rcall	.+30     	; 0xdf8 <__ultoa_invert+0x86>
 dda:	c9 f7       	brne	.-14     	; 0xdce <__ultoa_invert+0x5c>
 ddc:	f6 cf       	rjmp	.-20     	; 0xdca <__ultoa_invert+0x58>
 dde:	46 2f       	mov	r20, r22
 de0:	4f 70       	andi	r20, 0x0F	; 15
 de2:	40 5d       	subi	r20, 0xD0	; 208
 de4:	4a 33       	cpi	r20, 0x3A	; 58
 de6:	18 f0       	brcs	.+6      	; 0xdee <__ultoa_invert+0x7c>
 de8:	49 5d       	subi	r20, 0xD9	; 217
 dea:	31 fd       	sbrc	r19, 1
 dec:	40 52       	subi	r20, 0x20	; 32
 dee:	41 93       	st	Z+, r20
 df0:	02 d0       	rcall	.+4      	; 0xdf6 <__ultoa_invert+0x84>
 df2:	a9 f7       	brne	.-22     	; 0xdde <__ultoa_invert+0x6c>
 df4:	ea cf       	rjmp	.-44     	; 0xdca <__ultoa_invert+0x58>
 df6:	b4 e0       	ldi	r27, 0x04	; 4
 df8:	a6 95       	lsr	r26
 dfa:	97 95       	ror	r25
 dfc:	87 95       	ror	r24
 dfe:	77 95       	ror	r23
 e00:	67 95       	ror	r22
 e02:	ba 95       	dec	r27
 e04:	c9 f7       	brne	.-14     	; 0xdf8 <__ultoa_invert+0x86>
 e06:	00 97       	sbiw	r24, 0x00	; 0
 e08:	61 05       	cpc	r22, r1
 e0a:	71 05       	cpc	r23, r1
 e0c:	08 95       	ret
 e0e:	9b 01       	movw	r18, r22
 e10:	ac 01       	movw	r20, r24
 e12:	0a 2e       	mov	r0, r26
 e14:	06 94       	lsr	r0
 e16:	57 95       	ror	r21
 e18:	47 95       	ror	r20
 e1a:	37 95       	ror	r19
 e1c:	27 95       	ror	r18
 e1e:	ba 95       	dec	r27
 e20:	c9 f7       	brne	.-14     	; 0xe14 <__ultoa_invert+0xa2>
 e22:	62 0f       	add	r22, r18
 e24:	73 1f       	adc	r23, r19
 e26:	84 1f       	adc	r24, r20
 e28:	95 1f       	adc	r25, r21
 e2a:	a0 1d       	adc	r26, r0
 e2c:	08 95       	ret

00000e2e <_exit>:
 e2e:	f8 94       	cli

00000e30 <__stop_program>:
 e30:	ff cf       	rjmp	.-2      	; 0xe30 <__stop_program>
