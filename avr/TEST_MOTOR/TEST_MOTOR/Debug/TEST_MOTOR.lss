
TEST_MOTOR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000118  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000919  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000837  00000000  00000000  00000b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000311  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001678  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041c  00000000  00000000  000016cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000046  00000000  00000000  00001ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001b2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	31 d0       	rcall	.+98     	; 0xfc <main>
  9a:	3c c0       	rjmp	.+120    	; 0x114 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <init_motor_pins>:
}

void motor_stop() {
	// 모든 모터 신호 LOW로 설정
	PORTF &= ~((1 << IN1) | (1 << IN2) | (1 << IN3) | (1 << IN4));
	PORTB &= ~((1 << ENA) | (1 << ENB));
  9e:	e1 e6       	ldi	r30, 0x61	; 97
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	8f 60       	ori	r24, 0x0F	; 15
  a6:	80 83       	st	Z, r24
  a8:	87 b3       	in	r24, 0x17	; 23
  aa:	80 66       	ori	r24, 0x60	; 96
  ac:	87 bb       	out	0x17, r24	; 23
  ae:	e2 e6       	ldi	r30, 0x62	; 98
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	80 7f       	andi	r24, 0xF0	; 240
  b6:	80 83       	st	Z, r24
  b8:	88 b3       	in	r24, 0x18	; 24
  ba:	8f 79       	andi	r24, 0x9F	; 159
  bc:	88 bb       	out	0x18, r24	; 24
  be:	08 95       	ret

000000c0 <motor_forward>:
  c0:	88 b3       	in	r24, 0x18	; 24
  c2:	8f 79       	andi	r24, 0x9F	; 159
  c4:	88 bb       	out	0x18, r24	; 24
  c6:	e2 e6       	ldi	r30, 0x62	; 98
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	80 81       	ld	r24, Z
  cc:	80 7f       	andi	r24, 0xF0	; 240
  ce:	80 83       	st	Z, r24
  d0:	83 ed       	ldi	r24, 0xD3	; 211
  d2:	90 e3       	ldi	r25, 0x30	; 48
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <motor_forward+0x14>
  d8:	00 c0       	rjmp	.+0      	; 0xda <motor_forward+0x1a>
  da:	00 00       	nop
  dc:	80 81       	ld	r24, Z
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	80 83       	st	Z, r24
  e2:	80 81       	ld	r24, Z
  e4:	8d 7f       	andi	r24, 0xFD	; 253
  e6:	80 83       	st	Z, r24
  e8:	80 81       	ld	r24, Z
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	80 83       	st	Z, r24
  ee:	80 81       	ld	r24, Z
  f0:	87 7f       	andi	r24, 0xF7	; 247
  f2:	80 83       	st	Z, r24
  f4:	88 b3       	in	r24, 0x18	; 24
  f6:	80 66       	ori	r24, 0x60	; 96
  f8:	88 bb       	out	0x18, r24	; 24
  fa:	08 95       	ret

000000fc <main>:
}

int main() {
	init_motor_pins(); // 모터 핀 초기화
  fc:	d0 df       	rcall	.-96     	; 0x9e <init_motor_pins>

	while (1) {
		motor_forward();  // 전진
  fe:	e0 df       	rcall	.-64     	; 0xc0 <motor_forward>
 100:	2f e9       	ldi	r18, 0x9F	; 159
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	86 e8       	ldi	r24, 0x86	; 134
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0xa>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x14>
 110:	00 00       	nop
 112:	f5 cf       	rjmp	.-22     	; 0xfe <main+0x2>

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
