
07.PWM_CONTROL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00000e82  00000f16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001d6  0080011c  0080011c  00000f32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001418  00000000  00000000  000010d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d6f  00000000  00000000  000024e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a4c  00000000  00000000  00003257  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000254  00000000  00000000  00003ca4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062f  00000000  00000000  00003ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000510  00000000  00000000  00004527  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004a37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	fb c1       	rjmp	.+1014   	; 0x40c <__vector_5>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	87 c0       	rjmp	.+270    	; 0x150 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c1       	rjmp	.+686    	; 0x2f8 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e8       	ldi	r30, 0x82	; 130
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 31       	cpi	r26, 0x1C	; 28
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	ac e1       	ldi	r26, 0x1C	; 28
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 3f       	cpi	r26, 0xF2	; 242
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	71 d0       	rcall	.+226    	; 0x1a6 <main>
  c4:	dc c6       	rjmp	.+3512   	; 0xe7e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <init_button>:
void init_button(void);
int get_button(int button_num, int button_pin);
                                                
void init_button(void)
{
	BUTTON_DDR &= ~( 1 << BUTTON0PIN | 1 << BUTTON1PIN | 1 << BUTTON2PIN | 1 << BUTTON3PIN);
  c8:	81 b3       	in	r24, 0x11	; 17
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	81 bb       	out	0x11, r24	; 17
  ce:	08 95       	ret

000000d0 <get_button>:
	static unsigned char button_status[BUTTON_NUMER] =
	{BUTTON_RELEASE,BUTTON_RELEASE,BUTTON_RELEASE,BUTTON_RELEASE};	
	// 	지역 변수에 static을 쓰면 전역 변수처럼 함수를 빠져 나갔다 다시 들어 와도 값을 유지 한다.  
	int currtn_state;
	
	currtn_state = BUTTON_PIN & (1 << button_pin);   // 버튼을 읽는다. 
  d0:	40 b3       	in	r20, 0x10	; 16
	if (currtn_state && button_status[button_num] == BUTTON_RELEASE)  // 버튼이 처음 눌려진 noise high 
  d2:	21 e0       	ldi	r18, 0x01	; 1
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <get_button+0xc>
  d8:	22 0f       	add	r18, r18
  da:	33 1f       	adc	r19, r19
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <get_button+0x8>
  e0:	50 e0       	ldi	r21, 0x00	; 0
  e2:	24 23       	and	r18, r20
  e4:	35 23       	and	r19, r21
  e6:	23 2b       	or	r18, r19
  e8:	b9 f0       	breq	.+46     	; 0x118 <get_button+0x48>
  ea:	fc 01       	movw	r30, r24
  ec:	e4 5e       	subi	r30, 0xE4	; 228
  ee:	fe 4f       	sbci	r31, 0xFE	; 254
  f0:	20 81       	ld	r18, Z
  f2:	21 11       	cpse	r18, r1
  f4:	27 c0       	rjmp	.+78     	; 0x144 <get_button+0x74>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	3d ee       	ldi	r19, 0xED	; 237
  fa:	42 e0       	ldi	r20, 0x02	; 2
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	30 40       	sbci	r19, 0x00	; 0
 100:	40 40       	sbci	r20, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <get_button+0x2c>
 104:	00 c0       	rjmp	.+0      	; 0x106 <get_button+0x36>
 106:	00 00       	nop
	{
		_delay_ms(60);   // noise가 지나가기를 기다린다. 
		button_status[button_num] = BUTTON_PRESS;   // noise가 지나간 상태의 High 상태 
 108:	fc 01       	movw	r30, r24
 10a:	e4 5e       	subi	r30, 0xE4	; 228
 10c:	fe 4f       	sbci	r31, 0xFE	; 254
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	20 83       	st	Z, r18
		return 0;   // 아직은 완전히 눌렸다 떼어진 상태가 아니다. 
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	08 95       	ret
	}
	else if (currtn_state==BUTTON_RELEASE && button_status[button_num] == BUTTON_PRESS)
 118:	fc 01       	movw	r30, r24
 11a:	e4 5e       	subi	r30, 0xE4	; 228
 11c:	fe 4f       	sbci	r31, 0xFE	; 254
 11e:	20 81       	ld	r18, Z
 120:	21 30       	cpi	r18, 0x01	; 1
 122:	99 f4       	brne	.+38     	; 0x14a <get_button+0x7a>
 124:	2f ef       	ldi	r18, 0xFF	; 255
 126:	3d ee       	ldi	r19, 0xED	; 237
 128:	42 e0       	ldi	r20, 0x02	; 2
 12a:	21 50       	subi	r18, 0x01	; 1
 12c:	30 40       	sbci	r19, 0x00	; 0
 12e:	40 40       	sbci	r20, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <get_button+0x5a>
 132:	00 c0       	rjmp	.+0      	; 0x134 <get_button+0x64>
 134:	00 00       	nop
	{
		_delay_ms(60);
		button_status[button_num] = BUTTON_RELEASE;   // 다음 버튼 체크를 위해서 초기화
 136:	fc 01       	movw	r30, r24
 138:	e4 5e       	subi	r30, 0xE4	; 228
 13a:	fe 4f       	sbci	r31, 0xFE	; 254
 13c:	10 82       	st	Z, r1
		return 1;   // 완전히 1번 눌렸다 떼어진 상태로 인정		
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	08 95       	ret
	}
	
	return 0;   // 버튼이 open상태 
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	08 95       	ret
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	08 95       	ret

00000150 <__vector_16>:
// 250개의 pulse를 count(1ms)하면 이곳으로 자동적으로 들어 온다. 
// ISR루틴(함수)은 가능한 짧게 작성 한다.

int led_toggle=0; 
ISR(TIMER0_OVF_vect)
{
 150:	1f 92       	push	r1
 152:	0f 92       	push	r0
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	0f 92       	push	r0
 158:	11 24       	eor	r1, r1
 15a:	8f 93       	push	r24
 15c:	9f 93       	push	r25
	// 6~256 : 250(1ms) 그래서 TCNT0를 6으로 설정하는것이다. 
	TCNT0=6;
 15e:	86 e0       	ldi	r24, 0x06	; 6
 160:	82 bf       	out	0x32, r24	; 50
	msec_count++;   // 1ms마다 1씩 증가
 162:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <msec_count>
 166:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <msec_count+0x1>
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <msec_count+0x1>
 170:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <msec_count>
	ultrasonic_check_timer++;
 174:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <ultrasonic_check_timer>
 178:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <ultrasonic_check_timer+0x1>
 17c:	01 96       	adiw	r24, 0x01	; 1
 17e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <ultrasonic_check_timer+0x1>
 182:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <ultrasonic_check_timer>
}
 186:	9f 91       	pop	r25
 188:	8f 91       	pop	r24
 18a:	0f 90       	pop	r0
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	0f 90       	pop	r0
 190:	1f 90       	pop	r1
 192:	18 95       	reti

00000194 <init_timer0>:
// ------ 분주비 계산 ----
// (1) 16000000Hz/64 ==> 250,000HZ
// (2) T(주기) 1clock의 소요시간 : 1/f = 1/250,000 ==> 0.0000004sec(4us) : 0.004ms	
// (3) 8bit timer OV(OVflow) : 0.004ms x 256 = 0.001024sec --> 1.024ms 
// 1ms마다 정확하게 INT를 띄우고 싶은면 0.004ms x 250개를 count = 0.001sec ==>1ms
	TCNT0=6;   // TCNT : 0~256 1ms 마다 TIMER0_OVF_vect로 진입 한다. 
 194:	86 e0       	ldi	r24, 0x06	; 6
 196:	82 bf       	out	0x32, r24	; 50
	           // TCNT0 = 6으로 설정을 한 이유: 6-->256 : 250개의 펄스를 count하기 때문에 정확히 1ms가 된다.
// (4) 분주비 설정 64분주 (250,000HZ --> 250KHz) P296 표13-1
	TCCR0 |= 1 << CS02 | 0 << CS01 | 0 << CS00;  // TCCR0 |= 0xf4 보다는 죄측의 code 권장 
 198:	83 b7       	in	r24, 0x33	; 51
 19a:	84 60       	ori	r24, 0x04	; 4
 19c:	83 bf       	out	0x33, r24	; 51
// (5) Timer0 overflow INT를 허용(enable)
	TIMSK |= 1 << TOIE0;  // TIMSK |= 0x01; 
 19e:	87 b7       	in	r24, 0x37	; 55
 1a0:	81 60       	ori	r24, 0x01	; 1
 1a2:	87 bf       	out	0x37, r24	; 55
 1a4:	08 95       	ret

000001a6 <main>:
	flower_off
};

int main(void)
{
	init_timer0();
 1a6:	f6 df       	rcall	.-20     	; 0x194 <init_timer0>
	init_uart0();
 1a8:	1f d1       	rcall	.+574    	; 0x3e8 <init_uart0>
	init_ultrasonic();
 1aa:	8c d1       	rcall	.+792    	; 0x4c4 <init_ultrasonic>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
	stdout = &OUTPUT;   // printf가 동작 될 수 있도록 stdout에 OUTPUT 화일 포인터 assign 
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	90 93 ef 02 	sts	0x02EF, r25	; 0x8002ef <__iob+0x3>
 1b4:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <__iob+0x2>
	sei();   // 전역(대문)으로 interrupt 허용
 1b8:	78 94       	sei
	
	// led_main();
	// make_pwm_led_control();
	// pwm_fan_control_main();
	L298N_pwm_fan_control_main();
 1ba:	28 d0       	rcall	.+80     	; 0x20c <L298N_pwm_fan_control_main>
 1bc:	a7 d1       	rcall	.+846    	; 0x50c <distance_ultrasonic>
	
	while(1)
	{
		distance_ultrasonic();
 1be:	fe cf       	rjmp	.-4      	; 0x1bc <main+0x16>

000001c0 <init_timer3>:
 1c0:	82 b1       	in	r24, 0x02	; 2
 1c2:	88 62       	ori	r24, 0x28	; 40
		{
			OCR3C = (OCR3C >= 250) ? 250 : OCR3C + 20;
		}
		else if(get_button(BUTTON2, BUTTON2PIN)) // speed-up
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
 1c4:	82 b9       	out	0x02, r24	; 2
 1c6:	ab e8       	ldi	r26, 0x8B	; 139
 1c8:	b0 e0       	ldi	r27, 0x00	; 0
 1ca:	8c 91       	ld	r24, X
 1cc:	81 60       	ori	r24, 0x01	; 1
 1ce:	8c 93       	st	X, r24
 1d0:	ea e8       	ldi	r30, 0x8A	; 138
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	88 60       	ori	r24, 0x08	; 8
 1d8:	80 83       	st	Z, r24
 1da:	8c 91       	ld	r24, X
 1dc:	88 60       	ori	r24, 0x08	; 8
 1de:	8c 93       	st	X, r24
 1e0:	80 81       	ld	r24, Z
 1e2:	83 60       	ori	r24, 0x03	; 3
 1e4:	80 83       	st	Z, r24
 1e6:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
 1ea:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
 1ee:	08 95       	ret

000001f0 <init_L298N>:
 1f0:	e1 e6       	ldi	r30, 0x61	; 97
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	80 6c       	ori	r24, 0xC0	; 192
 1f8:	80 83       	st	Z, r24
 1fa:	e2 e6       	ldi	r30, 0x62	; 98
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	8f 73       	andi	r24, 0x3F	; 63
 202:	80 83       	st	Z, r24
 204:	80 81       	ld	r24, Z
 206:	80 64       	ori	r24, 0x40	; 64
 208:	80 83       	st	Z, r24
 20a:	08 95       	ret

0000020c <L298N_pwm_fan_control_main>:
void L298N_pwm_fan_control_main(void)
{
	uint8_t start_button = 0;
	uint8_t forward = 1;  // forward <---> backward
	
	init_button();
 20c:	5d df       	rcall	.-326    	; 0xc8 <init_button>
	init_timer3();
 20e:	d8 df       	rcall	.-80     	; 0x1c0 <init_timer3>
	init_L298N();
 210:	ef df       	rcall	.-34     	; 0x1f0 <init_L298N>
 212:	aa 24       	eor	r10, r10
}

void L298N_pwm_fan_control_main(void)
{
	uint8_t start_button = 0;
	uint8_t forward = 1;  // forward <---> backward
 214:	a3 94       	inc	r10
 216:	c0 e0       	ldi	r28, 0x00	; 0
	}
}

void L298N_pwm_fan_control_main(void)
{
	uint8_t start_button = 0;
 218:	d1 e0       	ldi	r29, 0x01	; 1
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
		}
		else if(get_button(BUTTON3, BUTTON3PIN)) // 방향 설정
		{
			forward = !forward;
 21a:	0f 2e       	mov	r0, r31
			PORTF &= ~(1 << 6 | 1 << 7); // IN1 IN2 reset
 21c:	f2 e6       	ldi	r31, 0x62	; 98
 21e:	ef 2e       	mov	r14, r31
 220:	f1 2c       	mov	r15, r1
 222:	f0 2d       	mov	r31, r0
 224:	b1 2c       	mov	r11, r1
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
		}
		else if(get_button(BUTTON3, BUTTON3PIN)) // 방향 설정
		{
			forward = !forward;
 226:	02 e8       	ldi	r16, 0x82	; 130
		{
			OCR3C = (OCR3C >= 250) ? 250 : OCR3C + 20;
		}
		else if(get_button(BUTTON2, BUTTON2PIN)) // speed-down
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
 228:	10 e0       	ldi	r17, 0x00	; 0
 22a:	0f 2e       	mov	r0, r31
			start_button = !start_button; // toggle
			OCR3C = (start_button) ? 250 : 0; // 250 : 모터 회전의 기본 값, 0: stop
		}
		else if(get_button(BUTTON1, BUTTON1PIN)) // speed-up
		{
			OCR3C = (OCR3C >= 250) ? 250 : OCR3C + 20;
 22c:	fa ef       	ldi	r31, 0xFA	; 250
 22e:	cf 2e       	mov	r12, r31
 230:	f0 2d       	mov	r31, r0
 232:	d1 2c       	mov	r13, r1
 234:	64 e0       	ldi	r22, 0x04	; 4
	init_timer3();
	init_L298N();
	
	while(1)
	{
		if(get_button(BUTTON0, BUTTON0PIN)) // start/stop
 236:	70 e0       	ldi	r23, 0x00	; 0
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	49 df       	rcall	.-366    	; 0xd0 <get_button>
 23e:	89 2b       	or	r24, r25
 240:	79 f0       	breq	.+30     	; 0x260 <L298N_pwm_fan_control_main+0x54>
 242:	8d 2f       	mov	r24, r29
		{
			start_button = !start_button; // toggle
 244:	c1 11       	cpse	r28, r1
 246:	8b 2d       	mov	r24, r11
 248:	cc 23       	and	r28, r28
			OCR3C = (start_button) ? 250 : 0; // 250 : 모터 회전의 기본 값, 0: stop
 24a:	19 f0       	breq	.+6      	; 0x252 <L298N_pwm_fan_control_main+0x46>
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <L298N_pwm_fan_control_main+0x4a>
 252:	2c 2d       	mov	r18, r12
 254:	3d 2d       	mov	r19, r13
 256:	f8 01       	movw	r30, r16
 258:	31 83       	std	Z+1, r19	; 0x01
 25a:	20 83       	st	Z, r18
 25c:	c8 2f       	mov	r28, r24
	
	while(1)
	{
		if(get_button(BUTTON0, BUTTON0PIN)) // start/stop
		{
			start_button = !start_button; // toggle
 25e:	ea cf       	rjmp	.-44     	; 0x234 <L298N_pwm_fan_control_main+0x28>
 260:	65 e0       	ldi	r22, 0x05	; 5
			OCR3C = (start_button) ? 250 : 0; // 250 : 모터 회전의 기본 값, 0: stop
		}
		else if(get_button(BUTTON1, BUTTON1PIN)) // speed-up
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	33 df       	rcall	.-410    	; 0xd0 <get_button>
 26a:	89 2b       	or	r24, r25
 26c:	81 f0       	breq	.+32     	; 0x28e <L298N_pwm_fan_control_main+0x82>
 26e:	f8 01       	movw	r30, r16
		{
			OCR3C = (OCR3C >= 250) ? 250 : OCR3C + 20;
 270:	80 81       	ld	r24, Z
 272:	91 81       	ldd	r25, Z+1	; 0x01
 274:	8a 3f       	cpi	r24, 0xFA	; 250
 276:	91 05       	cpc	r25, r1
 278:	20 f4       	brcc	.+8      	; 0x282 <L298N_pwm_fan_control_main+0x76>
 27a:	80 81       	ld	r24, Z
 27c:	91 81       	ldd	r25, Z+1	; 0x01
 27e:	44 96       	adiw	r24, 0x14	; 20
 280:	02 c0       	rjmp	.+4      	; 0x286 <L298N_pwm_fan_control_main+0x7a>
 282:	8c 2d       	mov	r24, r12
 284:	9d 2d       	mov	r25, r13
 286:	f8 01       	movw	r30, r16
 288:	91 83       	std	Z+1, r25	; 0x01
 28a:	80 83       	st	Z, r24
 28c:	d3 cf       	rjmp	.-90     	; 0x234 <L298N_pwm_fan_control_main+0x28>
		}
		else if(get_button(BUTTON2, BUTTON2PIN)) // speed-down
 28e:	66 e0       	ldi	r22, 0x06	; 6
 290:	70 e0       	ldi	r23, 0x00	; 0
 292:	82 e0       	ldi	r24, 0x02	; 2
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	1c df       	rcall	.-456    	; 0xd0 <get_button>
 298:	89 2b       	or	r24, r25
 29a:	81 f0       	breq	.+32     	; 0x2bc <L298N_pwm_fan_control_main+0xb0>
 29c:	f8 01       	movw	r30, r16
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
 29e:	80 81       	ld	r24, Z
 2a0:	91 81       	ldd	r25, Z+1	; 0x01
 2a2:	87 34       	cpi	r24, 0x47	; 71
 2a4:	91 05       	cpc	r25, r1
 2a6:	20 f0       	brcs	.+8      	; 0x2b0 <L298N_pwm_fan_control_main+0xa4>
 2a8:	80 81       	ld	r24, Z
 2aa:	91 81       	ldd	r25, Z+1	; 0x01
 2ac:	44 97       	sbiw	r24, 0x14	; 20
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <L298N_pwm_fan_control_main+0xa8>
 2b0:	8c e3       	ldi	r24, 0x3C	; 60
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	f8 01       	movw	r30, r16
 2b6:	91 83       	std	Z+1, r25	; 0x01
 2b8:	80 83       	st	Z, r24
 2ba:	bc cf       	rjmp	.-136    	; 0x234 <L298N_pwm_fan_control_main+0x28>
		}
		else if(get_button(BUTTON3, BUTTON3PIN)) // 방향 설정
 2bc:	67 e0       	ldi	r22, 0x07	; 7
 2be:	70 e0       	ldi	r23, 0x00	; 0
 2c0:	83 e0       	ldi	r24, 0x03	; 3
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	05 df       	rcall	.-502    	; 0xd0 <get_button>
 2c6:	89 2b       	or	r24, r25
 2c8:	09 f4       	brne	.+2      	; 0x2cc <L298N_pwm_fan_control_main+0xc0>
 2ca:	b4 cf       	rjmp	.-152    	; 0x234 <L298N_pwm_fan_control_main+0x28>
 2cc:	8d 2f       	mov	r24, r29
		{
			forward = !forward;
 2ce:	a1 10       	cpse	r10, r1
 2d0:	8b 2d       	mov	r24, r11
 2d2:	98 2f       	mov	r25, r24
 2d4:	f7 01       	movw	r30, r14
			PORTF &= ~(1 << 6 | 1 << 7); // IN1 IN2 reset
 2d6:	80 81       	ld	r24, Z
 2d8:	8f 73       	andi	r24, 0x3F	; 63
 2da:	80 83       	st	Z, r24
 2dc:	a1 10       	cpse	r10, r1
			PORTF = (forward) ? (PORTF |= 1 << 6) : (PORTF |= 1 << 7);
 2de:	04 c0       	rjmp	.+8      	; 0x2e8 <L298N_pwm_fan_control_main+0xdc>
 2e0:	80 81       	ld	r24, Z
 2e2:	80 64       	ori	r24, 0x40	; 64
 2e4:	80 83       	st	Z, r24
 2e6:	04 c0       	rjmp	.+8      	; 0x2f0 <L298N_pwm_fan_control_main+0xe4>
 2e8:	f7 01       	movw	r30, r14
 2ea:	80 81       	ld	r24, Z
 2ec:	80 68       	ori	r24, 0x80	; 128
 2ee:	80 83       	st	Z, r24
 2f0:	f7 01       	movw	r30, r14
 2f2:	80 83       	st	Z, r24
 2f4:	a9 2e       	mov	r10, r25
		{
			OCR3C = (OCR3C <= 70) ? 60 : OCR3C - 20;
		}
		else if(get_button(BUTTON3, BUTTON3PIN)) // 방향 설정
		{
			forward = !forward;
 2f6:	9e cf       	rjmp	.-196    	; 0x234 <L298N_pwm_fan_control_main+0x28>

000002f8 <__vector_18>:
*/

int mode = 0;
volatile uint8_t rx_msg_received=0;
ISR(USART0_RX_vect) // 가능한 짧게
{
 2f8:	1f 92       	push	r1
 2fa:	0f 92       	push	r0
 2fc:	0f b6       	in	r0, 0x3f	; 63
 2fe:	0f 92       	push	r0
 300:	11 24       	eor	r1, r1
 302:	0b b6       	in	r0, 0x3b	; 59
 304:	0f 92       	push	r0
 306:	2f 93       	push	r18
 308:	3f 93       	push	r19
 30a:	4f 93       	push	r20
 30c:	5f 93       	push	r21
 30e:	6f 93       	push	r22
 310:	7f 93       	push	r23
 312:	8f 93       	push	r24
 314:	9f 93       	push	r25
 316:	af 93       	push	r26
 318:	bf 93       	push	r27
 31a:	ef 93       	push	r30
 31c:	ff 93       	push	r31
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	1f 92       	push	r1
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
   volatile uint8_t rx_data;
   volatile static int i=0;
   
   rx_data = UDR0;  // uart0의 H/W register(UDR0)로 부터 1byte를 읽어 들인다. 
 328:	8c b1       	in	r24, 0x0c	; 12
 32a:	89 83       	std	Y+1, r24	; 0x01
                    // rx_data = UDR0;를 실행하면 UDR0의 내용이 빈다.(empty)
   if (rx_data == '\n')
 32c:	89 81       	ldd	r24, Y+1	; 0x01
 32e:	8a 30       	cpi	r24, 0x0A	; 10
 330:	49 f5       	brne	.+82     	; 0x384 <__vector_18+0x8c>
   {
      rx_buff[rear++][i] = '\0';
 332:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <rear>
 336:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <rear+0x1>
 33a:	c9 01       	movw	r24, r18
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <rear+0x1>
 342:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <rear>
 346:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <i.1894>
 34a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <i.1894+0x1>
 34e:	48 e2       	ldi	r20, 0x28	; 40
 350:	42 9f       	mul	r20, r18
 352:	f0 01       	movw	r30, r0
 354:	43 9f       	mul	r20, r19
 356:	f0 0d       	add	r31, r0
 358:	11 24       	eor	r1, r1
 35a:	e6 5d       	subi	r30, 0xD6	; 214
 35c:	fe 4f       	sbci	r31, 0xFE	; 254
 35e:	e8 0f       	add	r30, r24
 360:	f9 1f       	adc	r31, r25
 362:	10 82       	st	Z, r1
      rear %= COMMAND_NUMBER; // rear : 0 ~ 9
 364:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <rear>
 368:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <rear+0x1>
 36c:	6a e0       	ldi	r22, 0x0A	; 10
 36e:	70 e0       	ldi	r23, 0x00	; 0
 370:	71 d2       	rcall	.+1250   	; 0x854 <__divmodhi4>
 372:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <rear+0x1>
 376:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <rear>
      i = 0; // 다음 string을 저장하기 위한 1차원 index값을 0으로
 37a:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <i.1894+0x1>
 37e:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <i.1894>
 382:	1c c0       	rjmp	.+56     	; 0x3bc <__vector_18+0xc4>
      // !!!! rx_buff queue full check 하는 logic 추가 
   }
   else
   {
      rx_buff[rear][i++] = rx_data;
 384:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <rear>
 388:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <rear+0x1>
 38c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <i.1894>
 390:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <i.1894+0x1>
 394:	9c 01       	movw	r18, r24
 396:	2f 5f       	subi	r18, 0xFF	; 255
 398:	3f 4f       	sbci	r19, 0xFF	; 255
 39a:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <i.1894+0x1>
 39e:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <i.1894>
 3a2:	49 81       	ldd	r20, Y+1	; 0x01
 3a4:	58 e2       	ldi	r21, 0x28	; 40
 3a6:	56 9f       	mul	r21, r22
 3a8:	90 01       	movw	r18, r0
 3aa:	57 9f       	mul	r21, r23
 3ac:	30 0d       	add	r19, r0
 3ae:	11 24       	eor	r1, r1
 3b0:	26 5d       	subi	r18, 0xD6	; 214
 3b2:	3e 4f       	sbci	r19, 0xFE	; 254
 3b4:	f9 01       	movw	r30, r18
 3b6:	e8 0f       	add	r30, r24
 3b8:	f9 1f       	adc	r31, r25
 3ba:	40 83       	st	Z, r20
      // COMMAND_LENGTH를 check하는 logic 추가
   }
}
 3bc:	0f 90       	pop	r0
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	ff 91       	pop	r31
 3c4:	ef 91       	pop	r30
 3c6:	bf 91       	pop	r27
 3c8:	af 91       	pop	r26
 3ca:	9f 91       	pop	r25
 3cc:	8f 91       	pop	r24
 3ce:	7f 91       	pop	r23
 3d0:	6f 91       	pop	r22
 3d2:	5f 91       	pop	r21
 3d4:	4f 91       	pop	r20
 3d6:	3f 91       	pop	r19
 3d8:	2f 91       	pop	r18
 3da:	0f 90       	pop	r0
 3dc:	0b be       	out	0x3b, r0	; 59
 3de:	0f 90       	pop	r0
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	0f 90       	pop	r0
 3e4:	1f 90       	pop	r1
 3e6:	18 95       	reti

000003e8 <init_uart0>:
*/

void init_uart0(void)
{
   // 1. 9600bps로 설정
   UBRR0H = 0x00;
 3e8:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
   UBRR0L = 207;  // 9600bps P219 표9-9
 3ec:	8f ec       	ldi	r24, 0xCF	; 207
 3ee:	89 b9       	out	0x09, r24	; 9
   // 2. 2배속 통신  표9-1
   UCSR0A |= 1 << U2X0;  // 2배속 통신 
 3f0:	59 9a       	sbi	0x0b, 1	; 11
   UCSR0C |= 0x06;   // 비동기/data8bits/none parity
 3f2:	e5 e9       	ldi	r30, 0x95	; 149
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	86 60       	ori	r24, 0x06	; 6
 3fa:	80 83       	st	Z, r24
   // P215 표9-1
   // RXEN0 : UART0로 부터 수신이 가능 하도록 
   // TXEN0 : UART0로 부터 송신이 가능 하도록 
   // RXCIE0 : UART0로 부터 1byte가 들어오면(stop bit가 들어 오면)) rx interrupt를 발생 시켜라
   UCSR0B |= 1 << RXEN0 | 1 << TXEN0 | 1 << RXCIE0;
 3fc:	8a b1       	in	r24, 0x0a	; 10
 3fe:	88 69       	ori	r24, 0x98	; 152
 400:	8a b9       	out	0x0a, r24	; 10
 402:	08 95       	ret

00000404 <UART0_transmit>:

// UART0로 1byte를 전송 하는 함수 (polling방식)
void UART0_transmit(uint8_t data)
{
   // 데이터 전송 중이면 전송이 끝날떄 까지 기다린다. 
   while ( !(UCSR0A & 1 << UDRE0))
 404:	5d 9b       	sbis	0x0b, 5	; 11
 406:	fe cf       	rjmp	.-4      	; 0x404 <UART0_transmit>
      ;   // no operation
   UDR0 = data;  // data를 H/W전송 register에 쏜다. 
 408:	8c b9       	out	0x0c, r24	; 12
 40a:	08 95       	ret

0000040c <__vector_5>:

//P278 표 12-3
// PE4 : 외부 INT4 초음파 센서의 상승, 하강 엣지 둘다 INT가 ISR(INT4_vect)로 들어 온다.
// 결국 2번(상승: 1, 하강: 1) 들어 온다.
ISR(INT4_vect)
{
 40c:	1f 92       	push	r1
 40e:	0f 92       	push	r0
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	0f 92       	push	r0
 414:	11 24       	eor	r1, r1
 416:	0b b6       	in	r0, 0x3b	; 59
 418:	0f 92       	push	r0
 41a:	2f 93       	push	r18
 41c:	3f 93       	push	r19
 41e:	4f 93       	push	r20
 420:	5f 93       	push	r21
 422:	6f 93       	push	r22
 424:	7f 93       	push	r23
 426:	8f 93       	push	r24
 428:	9f 93       	push	r25
 42a:	af 93       	push	r26
 42c:	bf 93       	push	r27
 42e:	ef 93       	push	r30
 430:	ff 93       	push	r31
	// 1 상승에지
	if(ECHO_PIN & 1 << ECHO)
 432:	0c 9b       	sbis	0x01, 4	; 1
 434:	03 c0       	rjmp	.+6      	; 0x43c <__vector_5+0x30>
	{
		TCNT1 = 0;
 436:	1d bc       	out	0x2d, r1	; 45
 438:	1c bc       	out	0x2c, r1	; 44
 43a:	31 c0       	rjmp	.+98     	; 0x49e <__vector_5+0x92>
	}
	else // 2 하강에지
	{
		// ECHO핀에 들어온 펄스 갯수를 us 환산
		ultrasonic_dis = 1000000.0 * TCNT1 * 1024 / F_CPU;
 43c:	6c b5       	in	r22, 0x2c	; 44
 43e:	7d b5       	in	r23, 0x2d	; 45
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	16 d1       	rcall	.+556    	; 0x672 <__floatunsisf>
 446:	20 e0       	ldi	r18, 0x00	; 0
 448:	34 e2       	ldi	r19, 0x24	; 36
 44a:	44 e7       	ldi	r20, 0x74	; 116
 44c:	59 e4       	ldi	r21, 0x49	; 73
 44e:	9f d1       	rcall	.+830    	; 0x78e <__mulsf3>
 450:	20 e0       	ldi	r18, 0x00	; 0
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	40 e8       	ldi	r20, 0x80	; 128
 456:	54 e4       	ldi	r21, 0x44	; 68
 458:	9a d1       	rcall	.+820    	; 0x78e <__mulsf3>
 45a:	20 e0       	ldi	r18, 0x00	; 0
 45c:	34 e2       	ldi	r19, 0x24	; 36
 45e:	44 e7       	ldi	r20, 0x74	; 116
 460:	5b e4       	ldi	r21, 0x4B	; 75
 462:	6e d0       	rcall	.+220    	; 0x540 <__divsf3>
 464:	d5 d0       	rcall	.+426    	; 0x610 <__fixsfsi>
 466:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <ultrasonic_dis+0x1>
 46a:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <ultrasonic_dis>
		// 예) TCINT에 10이 들어 있다고 가정 하자
		// 15.625KHZ의 주기 64us이다.
		// 0.000064sec(64us) * 10 = 0.00064sec(64us)
		// 640us / 58us(1cm이동 하는데 소요 시간) ==> 11cm이다.
		// --- 1cm : 58us
		sprintf(scm, "dis: %dcm\n", ultrasonic_dis / 58); // cm환산
 46e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <ultrasonic_dis>
 472:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <ultrasonic_dis+0x1>
 476:	6a e3       	ldi	r22, 0x3A	; 58
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	ec d1       	rcall	.+984    	; 0x854 <__divmodhi4>
 47c:	7f 93       	push	r23
 47e:	6f 93       	push	r22
 480:	8e e0       	ldi	r24, 0x0E	; 14
 482:	91 e0       	ldi	r25, 0x01	; 1
 484:	9f 93       	push	r25
 486:	8f 93       	push	r24
 488:	8a eb       	ldi	r24, 0xBA	; 186
 48a:	92 e0       	ldi	r25, 0x02	; 2
 48c:	9f 93       	push	r25
 48e:	8f 93       	push	r24
 490:	1b d2       	rcall	.+1078   	; 0x8c8 <sprintf>
 492:	0f 90       	pop	r0
 494:	0f 90       	pop	r0
 496:	0f 90       	pop	r0
 498:	0f 90       	pop	r0
 49a:	0f 90       	pop	r0
 49c:	0f 90       	pop	r0
	}
	
	// 2 하강에지
}
 49e:	ff 91       	pop	r31
 4a0:	ef 91       	pop	r30
 4a2:	bf 91       	pop	r27
 4a4:	af 91       	pop	r26
 4a6:	9f 91       	pop	r25
 4a8:	8f 91       	pop	r24
 4aa:	7f 91       	pop	r23
 4ac:	6f 91       	pop	r22
 4ae:	5f 91       	pop	r21
 4b0:	4f 91       	pop	r20
 4b2:	3f 91       	pop	r19
 4b4:	2f 91       	pop	r18
 4b6:	0f 90       	pop	r0
 4b8:	0b be       	out	0x3b, r0	; 59
 4ba:	0f 90       	pop	r0
 4bc:	0f be       	out	0x3f, r0	; 63
 4be:	0f 90       	pop	r0
 4c0:	1f 90       	pop	r1
 4c2:	18 95       	reti

000004c4 <init_ultrasonic>:
void init_ultrasonic(void)
{
	TRIG_DDR |= 1 << TRIG;
 4c4:	e4 e6       	ldi	r30, 0x64	; 100
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	80 81       	ld	r24, Z
 4ca:	80 61       	ori	r24, 0x10	; 16
 4cc:	80 83       	st	Z, r24
	ECHO_DDR &= !(1 << TRIG); // input mode ECHO_DDR &= 0b11110111;
 4ce:	82 b1       	in	r24, 0x02	; 2
 4d0:	12 b8       	out	0x02, r1	; 2
	// P289 표 12-6
	// 0 1 : 상승엣지(rising edge)와 하강(falling edge) 둘다 INT를 띄우도록 요청.
	// 하드웨어가 소프트웨어에게 인터럽트하라고 콜을 보내는거다
	EICRB |= 0 << ISC41 | 1 << ISC40;// 1로 만들어주는건 OR연산 // INT4를 사용
 4d2:	8a b7       	in	r24, 0x3a	; 58
 4d4:	81 60       	ori	r24, 0x01	; 1
 4d6:	8a bf       	out	0x3a, r24	; 58
	// 16bit timer1번을 설정을 해서 사용 65535(max) : 0xffff
	// 16MHz를 1024로 분주 16000000Hz/1024 --> 15625Hz --> 15.625KHz
	// 1주기 T(주기) = 1/f 1/15625 ==> 0.000064sec ==> 64us
	TCCR1B |= 1 << CS12 | 1<< CS10; // 1024로 분주. 타이머 0번 8비트, 타이머 1,3은 16비트 타이머
 4d8:	8e b5       	in	r24, 0x2e	; 46
 4da:	85 60       	ori	r24, 0x05	; 5
 4dc:	8e bd       	out	0x2e, r24	; 46
	// P318 표 14-1
	EIMSK |= 1 << INT4; // EXTERNAL INT 4(ECHO 핀)
 4de:	89 b7       	in	r24, 0x39	; 57
 4e0:	80 61       	ori	r24, 0x10	; 16
 4e2:	89 bf       	out	0x39, r24	; 57
 4e4:	08 95       	ret

000004e6 <trigger_ultrasonic>:
}

// high신호를 줘서 초음파 신호를 주기 위함. delay를 통해 안전하게
void trigger_ultrasonic()
{
	TRIG_PORT &= ~(1 << TRIG); // low
 4e6:	e5 e6       	ldi	r30, 0x65	; 101
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	80 81       	ld	r24, Z
 4ec:	8f 7e       	andi	r24, 0xEF	; 239
 4ee:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4f0:	85 e0       	ldi	r24, 0x05	; 5
 4f2:	8a 95       	dec	r24
 4f4:	f1 f7       	brne	.-4      	; 0x4f2 <trigger_ultrasonic+0xc>
 4f6:	00 00       	nop
	_delay_us(1); // 1usec
	TRIG_PORT |= 1 << TRIG; // high
 4f8:	80 81       	ld	r24, Z
 4fa:	80 61       	ori	r24, 0x10	; 16
 4fc:	80 83       	st	Z, r24
 4fe:	80 e5       	ldi	r24, 0x50	; 80
 500:	8a 95       	dec	r24
 502:	f1 f7       	brne	.-4      	; 0x500 <trigger_ultrasonic+0x1a>
	_delay_us(15); // 규격에는 10us인데 여유를 둬서 15us
	TRIG_PORT &= ~(1 << TRIG); // low
 504:	80 81       	ld	r24, Z
 506:	8f 7e       	andi	r24, 0xEF	; 239
 508:	80 83       	st	Z, r24
 50a:	08 95       	ret

0000050c <distance_ultrasonic>:
}

void distance_ultrasonic()
{
	if(ultrasonic_check_timer >= 1000) // 1초
 50c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <ultrasonic_check_timer>
 510:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <ultrasonic_check_timer+0x1>
 514:	88 3e       	cpi	r24, 0xE8	; 232
 516:	93 40       	sbci	r25, 0x03	; 3
 518:	94 f0       	brlt	.+36     	; 0x53e <distance_ultrasonic+0x32>
	{
		ultrasonic_check_timer = 0;
 51a:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <ultrasonic_check_timer+0x1>
 51e:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <ultrasonic_check_timer>
		printf("%s", scm);
 522:	8a eb       	ldi	r24, 0xBA	; 186
 524:	92 e0       	ldi	r25, 0x02	; 2
 526:	9f 93       	push	r25
 528:	8f 93       	push	r24
 52a:	89 e1       	ldi	r24, 0x19	; 25
 52c:	91 e0       	ldi	r25, 0x01	; 1
 52e:	9f 93       	push	r25
 530:	8f 93       	push	r24
 532:	b7 d1       	rcall	.+878    	; 0x8a2 <printf>
		trigger_ultrasonic();
 534:	d8 df       	rcall	.-80     	; 0x4e6 <trigger_ultrasonic>
 536:	0f 90       	pop	r0
 538:	0f 90       	pop	r0
 53a:	0f 90       	pop	r0
 53c:	0f 90       	pop	r0
 53e:	08 95       	ret

00000540 <__divsf3>:
 540:	0c d0       	rcall	.+24     	; 0x55a <__divsf3x>
 542:	eb c0       	rjmp	.+470    	; 0x71a <__fp_round>
 544:	e3 d0       	rcall	.+454    	; 0x70c <__fp_pscB>
 546:	40 f0       	brcs	.+16     	; 0x558 <__divsf3+0x18>
 548:	da d0       	rcall	.+436    	; 0x6fe <__fp_pscA>
 54a:	30 f0       	brcs	.+12     	; 0x558 <__divsf3+0x18>
 54c:	21 f4       	brne	.+8      	; 0x556 <__divsf3+0x16>
 54e:	5f 3f       	cpi	r21, 0xFF	; 255
 550:	19 f0       	breq	.+6      	; 0x558 <__divsf3+0x18>
 552:	cc c0       	rjmp	.+408    	; 0x6ec <__fp_inf>
 554:	51 11       	cpse	r21, r1
 556:	15 c1       	rjmp	.+554    	; 0x782 <__fp_szero>
 558:	cf c0       	rjmp	.+414    	; 0x6f8 <__fp_nan>

0000055a <__divsf3x>:
 55a:	f0 d0       	rcall	.+480    	; 0x73c <__fp_split3>
 55c:	98 f3       	brcs	.-26     	; 0x544 <__divsf3+0x4>

0000055e <__divsf3_pse>:
 55e:	99 23       	and	r25, r25
 560:	c9 f3       	breq	.-14     	; 0x554 <__divsf3+0x14>
 562:	55 23       	and	r21, r21
 564:	b1 f3       	breq	.-20     	; 0x552 <__divsf3+0x12>
 566:	95 1b       	sub	r25, r21
 568:	55 0b       	sbc	r21, r21
 56a:	bb 27       	eor	r27, r27
 56c:	aa 27       	eor	r26, r26
 56e:	62 17       	cp	r22, r18
 570:	73 07       	cpc	r23, r19
 572:	84 07       	cpc	r24, r20
 574:	38 f0       	brcs	.+14     	; 0x584 <__divsf3_pse+0x26>
 576:	9f 5f       	subi	r25, 0xFF	; 255
 578:	5f 4f       	sbci	r21, 0xFF	; 255
 57a:	22 0f       	add	r18, r18
 57c:	33 1f       	adc	r19, r19
 57e:	44 1f       	adc	r20, r20
 580:	aa 1f       	adc	r26, r26
 582:	a9 f3       	breq	.-22     	; 0x56e <__divsf3_pse+0x10>
 584:	33 d0       	rcall	.+102    	; 0x5ec <__divsf3_pse+0x8e>
 586:	0e 2e       	mov	r0, r30
 588:	3a f0       	brmi	.+14     	; 0x598 <__divsf3_pse+0x3a>
 58a:	e0 e8       	ldi	r30, 0x80	; 128
 58c:	30 d0       	rcall	.+96     	; 0x5ee <__divsf3_pse+0x90>
 58e:	91 50       	subi	r25, 0x01	; 1
 590:	50 40       	sbci	r21, 0x00	; 0
 592:	e6 95       	lsr	r30
 594:	00 1c       	adc	r0, r0
 596:	ca f7       	brpl	.-14     	; 0x58a <__divsf3_pse+0x2c>
 598:	29 d0       	rcall	.+82     	; 0x5ec <__divsf3_pse+0x8e>
 59a:	fe 2f       	mov	r31, r30
 59c:	27 d0       	rcall	.+78     	; 0x5ec <__divsf3_pse+0x8e>
 59e:	66 0f       	add	r22, r22
 5a0:	77 1f       	adc	r23, r23
 5a2:	88 1f       	adc	r24, r24
 5a4:	bb 1f       	adc	r27, r27
 5a6:	26 17       	cp	r18, r22
 5a8:	37 07       	cpc	r19, r23
 5aa:	48 07       	cpc	r20, r24
 5ac:	ab 07       	cpc	r26, r27
 5ae:	b0 e8       	ldi	r27, 0x80	; 128
 5b0:	09 f0       	breq	.+2      	; 0x5b4 <__divsf3_pse+0x56>
 5b2:	bb 0b       	sbc	r27, r27
 5b4:	80 2d       	mov	r24, r0
 5b6:	bf 01       	movw	r22, r30
 5b8:	ff 27       	eor	r31, r31
 5ba:	93 58       	subi	r25, 0x83	; 131
 5bc:	5f 4f       	sbci	r21, 0xFF	; 255
 5be:	2a f0       	brmi	.+10     	; 0x5ca <__divsf3_pse+0x6c>
 5c0:	9e 3f       	cpi	r25, 0xFE	; 254
 5c2:	51 05       	cpc	r21, r1
 5c4:	68 f0       	brcs	.+26     	; 0x5e0 <__divsf3_pse+0x82>
 5c6:	92 c0       	rjmp	.+292    	; 0x6ec <__fp_inf>
 5c8:	dc c0       	rjmp	.+440    	; 0x782 <__fp_szero>
 5ca:	5f 3f       	cpi	r21, 0xFF	; 255
 5cc:	ec f3       	brlt	.-6      	; 0x5c8 <__divsf3_pse+0x6a>
 5ce:	98 3e       	cpi	r25, 0xE8	; 232
 5d0:	dc f3       	brlt	.-10     	; 0x5c8 <__divsf3_pse+0x6a>
 5d2:	86 95       	lsr	r24
 5d4:	77 95       	ror	r23
 5d6:	67 95       	ror	r22
 5d8:	b7 95       	ror	r27
 5da:	f7 95       	ror	r31
 5dc:	9f 5f       	subi	r25, 0xFF	; 255
 5de:	c9 f7       	brne	.-14     	; 0x5d2 <__divsf3_pse+0x74>
 5e0:	88 0f       	add	r24, r24
 5e2:	91 1d       	adc	r25, r1
 5e4:	96 95       	lsr	r25
 5e6:	87 95       	ror	r24
 5e8:	97 f9       	bld	r25, 7
 5ea:	08 95       	ret
 5ec:	e1 e0       	ldi	r30, 0x01	; 1
 5ee:	66 0f       	add	r22, r22
 5f0:	77 1f       	adc	r23, r23
 5f2:	88 1f       	adc	r24, r24
 5f4:	bb 1f       	adc	r27, r27
 5f6:	62 17       	cp	r22, r18
 5f8:	73 07       	cpc	r23, r19
 5fa:	84 07       	cpc	r24, r20
 5fc:	ba 07       	cpc	r27, r26
 5fe:	20 f0       	brcs	.+8      	; 0x608 <__divsf3_pse+0xaa>
 600:	62 1b       	sub	r22, r18
 602:	73 0b       	sbc	r23, r19
 604:	84 0b       	sbc	r24, r20
 606:	ba 0b       	sbc	r27, r26
 608:	ee 1f       	adc	r30, r30
 60a:	88 f7       	brcc	.-30     	; 0x5ee <__divsf3_pse+0x90>
 60c:	e0 95       	com	r30
 60e:	08 95       	ret

00000610 <__fixsfsi>:
 610:	04 d0       	rcall	.+8      	; 0x61a <__fixunssfsi>
 612:	68 94       	set
 614:	b1 11       	cpse	r27, r1
 616:	b5 c0       	rjmp	.+362    	; 0x782 <__fp_szero>
 618:	08 95       	ret

0000061a <__fixunssfsi>:
 61a:	98 d0       	rcall	.+304    	; 0x74c <__fp_splitA>
 61c:	88 f0       	brcs	.+34     	; 0x640 <__fixunssfsi+0x26>
 61e:	9f 57       	subi	r25, 0x7F	; 127
 620:	90 f0       	brcs	.+36     	; 0x646 <__fixunssfsi+0x2c>
 622:	b9 2f       	mov	r27, r25
 624:	99 27       	eor	r25, r25
 626:	b7 51       	subi	r27, 0x17	; 23
 628:	a0 f0       	brcs	.+40     	; 0x652 <__fixunssfsi+0x38>
 62a:	d1 f0       	breq	.+52     	; 0x660 <__fixunssfsi+0x46>
 62c:	66 0f       	add	r22, r22
 62e:	77 1f       	adc	r23, r23
 630:	88 1f       	adc	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	1a f0       	brmi	.+6      	; 0x63c <__fixunssfsi+0x22>
 636:	ba 95       	dec	r27
 638:	c9 f7       	brne	.-14     	; 0x62c <__fixunssfsi+0x12>
 63a:	12 c0       	rjmp	.+36     	; 0x660 <__fixunssfsi+0x46>
 63c:	b1 30       	cpi	r27, 0x01	; 1
 63e:	81 f0       	breq	.+32     	; 0x660 <__fixunssfsi+0x46>
 640:	9f d0       	rcall	.+318    	; 0x780 <__fp_zero>
 642:	b1 e0       	ldi	r27, 0x01	; 1
 644:	08 95       	ret
 646:	9c c0       	rjmp	.+312    	; 0x780 <__fp_zero>
 648:	67 2f       	mov	r22, r23
 64a:	78 2f       	mov	r23, r24
 64c:	88 27       	eor	r24, r24
 64e:	b8 5f       	subi	r27, 0xF8	; 248
 650:	39 f0       	breq	.+14     	; 0x660 <__fixunssfsi+0x46>
 652:	b9 3f       	cpi	r27, 0xF9	; 249
 654:	cc f3       	brlt	.-14     	; 0x648 <__fixunssfsi+0x2e>
 656:	86 95       	lsr	r24
 658:	77 95       	ror	r23
 65a:	67 95       	ror	r22
 65c:	b3 95       	inc	r27
 65e:	d9 f7       	brne	.-10     	; 0x656 <__fixunssfsi+0x3c>
 660:	3e f4       	brtc	.+14     	; 0x670 <__fixunssfsi+0x56>
 662:	90 95       	com	r25
 664:	80 95       	com	r24
 666:	70 95       	com	r23
 668:	61 95       	neg	r22
 66a:	7f 4f       	sbci	r23, 0xFF	; 255
 66c:	8f 4f       	sbci	r24, 0xFF	; 255
 66e:	9f 4f       	sbci	r25, 0xFF	; 255
 670:	08 95       	ret

00000672 <__floatunsisf>:
 672:	e8 94       	clt
 674:	09 c0       	rjmp	.+18     	; 0x688 <__floatsisf+0x12>

00000676 <__floatsisf>:
 676:	97 fb       	bst	r25, 7
 678:	3e f4       	brtc	.+14     	; 0x688 <__floatsisf+0x12>
 67a:	90 95       	com	r25
 67c:	80 95       	com	r24
 67e:	70 95       	com	r23
 680:	61 95       	neg	r22
 682:	7f 4f       	sbci	r23, 0xFF	; 255
 684:	8f 4f       	sbci	r24, 0xFF	; 255
 686:	9f 4f       	sbci	r25, 0xFF	; 255
 688:	99 23       	and	r25, r25
 68a:	a9 f0       	breq	.+42     	; 0x6b6 <__floatsisf+0x40>
 68c:	f9 2f       	mov	r31, r25
 68e:	96 e9       	ldi	r25, 0x96	; 150
 690:	bb 27       	eor	r27, r27
 692:	93 95       	inc	r25
 694:	f6 95       	lsr	r31
 696:	87 95       	ror	r24
 698:	77 95       	ror	r23
 69a:	67 95       	ror	r22
 69c:	b7 95       	ror	r27
 69e:	f1 11       	cpse	r31, r1
 6a0:	f8 cf       	rjmp	.-16     	; 0x692 <__floatsisf+0x1c>
 6a2:	fa f4       	brpl	.+62     	; 0x6e2 <__floatsisf+0x6c>
 6a4:	bb 0f       	add	r27, r27
 6a6:	11 f4       	brne	.+4      	; 0x6ac <__floatsisf+0x36>
 6a8:	60 ff       	sbrs	r22, 0
 6aa:	1b c0       	rjmp	.+54     	; 0x6e2 <__floatsisf+0x6c>
 6ac:	6f 5f       	subi	r22, 0xFF	; 255
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	16 c0       	rjmp	.+44     	; 0x6e2 <__floatsisf+0x6c>
 6b6:	88 23       	and	r24, r24
 6b8:	11 f0       	breq	.+4      	; 0x6be <__floatsisf+0x48>
 6ba:	96 e9       	ldi	r25, 0x96	; 150
 6bc:	11 c0       	rjmp	.+34     	; 0x6e0 <__floatsisf+0x6a>
 6be:	77 23       	and	r23, r23
 6c0:	21 f0       	breq	.+8      	; 0x6ca <__floatsisf+0x54>
 6c2:	9e e8       	ldi	r25, 0x8E	; 142
 6c4:	87 2f       	mov	r24, r23
 6c6:	76 2f       	mov	r23, r22
 6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <__floatsisf+0x5e>
 6ca:	66 23       	and	r22, r22
 6cc:	71 f0       	breq	.+28     	; 0x6ea <__floatsisf+0x74>
 6ce:	96 e8       	ldi	r25, 0x86	; 134
 6d0:	86 2f       	mov	r24, r22
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	60 e0       	ldi	r22, 0x00	; 0
 6d6:	2a f0       	brmi	.+10     	; 0x6e2 <__floatsisf+0x6c>
 6d8:	9a 95       	dec	r25
 6da:	66 0f       	add	r22, r22
 6dc:	77 1f       	adc	r23, r23
 6de:	88 1f       	adc	r24, r24
 6e0:	da f7       	brpl	.-10     	; 0x6d8 <__floatsisf+0x62>
 6e2:	88 0f       	add	r24, r24
 6e4:	96 95       	lsr	r25
 6e6:	87 95       	ror	r24
 6e8:	97 f9       	bld	r25, 7
 6ea:	08 95       	ret

000006ec <__fp_inf>:
 6ec:	97 f9       	bld	r25, 7
 6ee:	9f 67       	ori	r25, 0x7F	; 127
 6f0:	80 e8       	ldi	r24, 0x80	; 128
 6f2:	70 e0       	ldi	r23, 0x00	; 0
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	08 95       	ret

000006f8 <__fp_nan>:
 6f8:	9f ef       	ldi	r25, 0xFF	; 255
 6fa:	80 ec       	ldi	r24, 0xC0	; 192
 6fc:	08 95       	ret

000006fe <__fp_pscA>:
 6fe:	00 24       	eor	r0, r0
 700:	0a 94       	dec	r0
 702:	16 16       	cp	r1, r22
 704:	17 06       	cpc	r1, r23
 706:	18 06       	cpc	r1, r24
 708:	09 06       	cpc	r0, r25
 70a:	08 95       	ret

0000070c <__fp_pscB>:
 70c:	00 24       	eor	r0, r0
 70e:	0a 94       	dec	r0
 710:	12 16       	cp	r1, r18
 712:	13 06       	cpc	r1, r19
 714:	14 06       	cpc	r1, r20
 716:	05 06       	cpc	r0, r21
 718:	08 95       	ret

0000071a <__fp_round>:
 71a:	09 2e       	mov	r0, r25
 71c:	03 94       	inc	r0
 71e:	00 0c       	add	r0, r0
 720:	11 f4       	brne	.+4      	; 0x726 <__fp_round+0xc>
 722:	88 23       	and	r24, r24
 724:	52 f0       	brmi	.+20     	; 0x73a <__fp_round+0x20>
 726:	bb 0f       	add	r27, r27
 728:	40 f4       	brcc	.+16     	; 0x73a <__fp_round+0x20>
 72a:	bf 2b       	or	r27, r31
 72c:	11 f4       	brne	.+4      	; 0x732 <__fp_round+0x18>
 72e:	60 ff       	sbrs	r22, 0
 730:	04 c0       	rjmp	.+8      	; 0x73a <__fp_round+0x20>
 732:	6f 5f       	subi	r22, 0xFF	; 255
 734:	7f 4f       	sbci	r23, 0xFF	; 255
 736:	8f 4f       	sbci	r24, 0xFF	; 255
 738:	9f 4f       	sbci	r25, 0xFF	; 255
 73a:	08 95       	ret

0000073c <__fp_split3>:
 73c:	57 fd       	sbrc	r21, 7
 73e:	90 58       	subi	r25, 0x80	; 128
 740:	44 0f       	add	r20, r20
 742:	55 1f       	adc	r21, r21
 744:	59 f0       	breq	.+22     	; 0x75c <__fp_splitA+0x10>
 746:	5f 3f       	cpi	r21, 0xFF	; 255
 748:	71 f0       	breq	.+28     	; 0x766 <__fp_splitA+0x1a>
 74a:	47 95       	ror	r20

0000074c <__fp_splitA>:
 74c:	88 0f       	add	r24, r24
 74e:	97 fb       	bst	r25, 7
 750:	99 1f       	adc	r25, r25
 752:	61 f0       	breq	.+24     	; 0x76c <__fp_splitA+0x20>
 754:	9f 3f       	cpi	r25, 0xFF	; 255
 756:	79 f0       	breq	.+30     	; 0x776 <__fp_splitA+0x2a>
 758:	87 95       	ror	r24
 75a:	08 95       	ret
 75c:	12 16       	cp	r1, r18
 75e:	13 06       	cpc	r1, r19
 760:	14 06       	cpc	r1, r20
 762:	55 1f       	adc	r21, r21
 764:	f2 cf       	rjmp	.-28     	; 0x74a <__fp_split3+0xe>
 766:	46 95       	lsr	r20
 768:	f1 df       	rcall	.-30     	; 0x74c <__fp_splitA>
 76a:	08 c0       	rjmp	.+16     	; 0x77c <__fp_splitA+0x30>
 76c:	16 16       	cp	r1, r22
 76e:	17 06       	cpc	r1, r23
 770:	18 06       	cpc	r1, r24
 772:	99 1f       	adc	r25, r25
 774:	f1 cf       	rjmp	.-30     	; 0x758 <__fp_splitA+0xc>
 776:	86 95       	lsr	r24
 778:	71 05       	cpc	r23, r1
 77a:	61 05       	cpc	r22, r1
 77c:	08 94       	sec
 77e:	08 95       	ret

00000780 <__fp_zero>:
 780:	e8 94       	clt

00000782 <__fp_szero>:
 782:	bb 27       	eor	r27, r27
 784:	66 27       	eor	r22, r22
 786:	77 27       	eor	r23, r23
 788:	cb 01       	movw	r24, r22
 78a:	97 f9       	bld	r25, 7
 78c:	08 95       	ret

0000078e <__mulsf3>:
 78e:	0b d0       	rcall	.+22     	; 0x7a6 <__mulsf3x>
 790:	c4 cf       	rjmp	.-120    	; 0x71a <__fp_round>
 792:	b5 df       	rcall	.-150    	; 0x6fe <__fp_pscA>
 794:	28 f0       	brcs	.+10     	; 0x7a0 <__mulsf3+0x12>
 796:	ba df       	rcall	.-140    	; 0x70c <__fp_pscB>
 798:	18 f0       	brcs	.+6      	; 0x7a0 <__mulsf3+0x12>
 79a:	95 23       	and	r25, r21
 79c:	09 f0       	breq	.+2      	; 0x7a0 <__mulsf3+0x12>
 79e:	a6 cf       	rjmp	.-180    	; 0x6ec <__fp_inf>
 7a0:	ab cf       	rjmp	.-170    	; 0x6f8 <__fp_nan>
 7a2:	11 24       	eor	r1, r1
 7a4:	ee cf       	rjmp	.-36     	; 0x782 <__fp_szero>

000007a6 <__mulsf3x>:
 7a6:	ca df       	rcall	.-108    	; 0x73c <__fp_split3>
 7a8:	a0 f3       	brcs	.-24     	; 0x792 <__mulsf3+0x4>

000007aa <__mulsf3_pse>:
 7aa:	95 9f       	mul	r25, r21
 7ac:	d1 f3       	breq	.-12     	; 0x7a2 <__mulsf3+0x14>
 7ae:	95 0f       	add	r25, r21
 7b0:	50 e0       	ldi	r21, 0x00	; 0
 7b2:	55 1f       	adc	r21, r21
 7b4:	62 9f       	mul	r22, r18
 7b6:	f0 01       	movw	r30, r0
 7b8:	72 9f       	mul	r23, r18
 7ba:	bb 27       	eor	r27, r27
 7bc:	f0 0d       	add	r31, r0
 7be:	b1 1d       	adc	r27, r1
 7c0:	63 9f       	mul	r22, r19
 7c2:	aa 27       	eor	r26, r26
 7c4:	f0 0d       	add	r31, r0
 7c6:	b1 1d       	adc	r27, r1
 7c8:	aa 1f       	adc	r26, r26
 7ca:	64 9f       	mul	r22, r20
 7cc:	66 27       	eor	r22, r22
 7ce:	b0 0d       	add	r27, r0
 7d0:	a1 1d       	adc	r26, r1
 7d2:	66 1f       	adc	r22, r22
 7d4:	82 9f       	mul	r24, r18
 7d6:	22 27       	eor	r18, r18
 7d8:	b0 0d       	add	r27, r0
 7da:	a1 1d       	adc	r26, r1
 7dc:	62 1f       	adc	r22, r18
 7de:	73 9f       	mul	r23, r19
 7e0:	b0 0d       	add	r27, r0
 7e2:	a1 1d       	adc	r26, r1
 7e4:	62 1f       	adc	r22, r18
 7e6:	83 9f       	mul	r24, r19
 7e8:	a0 0d       	add	r26, r0
 7ea:	61 1d       	adc	r22, r1
 7ec:	22 1f       	adc	r18, r18
 7ee:	74 9f       	mul	r23, r20
 7f0:	33 27       	eor	r19, r19
 7f2:	a0 0d       	add	r26, r0
 7f4:	61 1d       	adc	r22, r1
 7f6:	23 1f       	adc	r18, r19
 7f8:	84 9f       	mul	r24, r20
 7fa:	60 0d       	add	r22, r0
 7fc:	21 1d       	adc	r18, r1
 7fe:	82 2f       	mov	r24, r18
 800:	76 2f       	mov	r23, r22
 802:	6a 2f       	mov	r22, r26
 804:	11 24       	eor	r1, r1
 806:	9f 57       	subi	r25, 0x7F	; 127
 808:	50 40       	sbci	r21, 0x00	; 0
 80a:	8a f0       	brmi	.+34     	; 0x82e <__mulsf3_pse+0x84>
 80c:	e1 f0       	breq	.+56     	; 0x846 <__mulsf3_pse+0x9c>
 80e:	88 23       	and	r24, r24
 810:	4a f0       	brmi	.+18     	; 0x824 <__mulsf3_pse+0x7a>
 812:	ee 0f       	add	r30, r30
 814:	ff 1f       	adc	r31, r31
 816:	bb 1f       	adc	r27, r27
 818:	66 1f       	adc	r22, r22
 81a:	77 1f       	adc	r23, r23
 81c:	88 1f       	adc	r24, r24
 81e:	91 50       	subi	r25, 0x01	; 1
 820:	50 40       	sbci	r21, 0x00	; 0
 822:	a9 f7       	brne	.-22     	; 0x80e <__mulsf3_pse+0x64>
 824:	9e 3f       	cpi	r25, 0xFE	; 254
 826:	51 05       	cpc	r21, r1
 828:	70 f0       	brcs	.+28     	; 0x846 <__mulsf3_pse+0x9c>
 82a:	60 cf       	rjmp	.-320    	; 0x6ec <__fp_inf>
 82c:	aa cf       	rjmp	.-172    	; 0x782 <__fp_szero>
 82e:	5f 3f       	cpi	r21, 0xFF	; 255
 830:	ec f3       	brlt	.-6      	; 0x82c <__mulsf3_pse+0x82>
 832:	98 3e       	cpi	r25, 0xE8	; 232
 834:	dc f3       	brlt	.-10     	; 0x82c <__mulsf3_pse+0x82>
 836:	86 95       	lsr	r24
 838:	77 95       	ror	r23
 83a:	67 95       	ror	r22
 83c:	b7 95       	ror	r27
 83e:	f7 95       	ror	r31
 840:	e7 95       	ror	r30
 842:	9f 5f       	subi	r25, 0xFF	; 255
 844:	c1 f7       	brne	.-16     	; 0x836 <__mulsf3_pse+0x8c>
 846:	fe 2b       	or	r31, r30
 848:	88 0f       	add	r24, r24
 84a:	91 1d       	adc	r25, r1
 84c:	96 95       	lsr	r25
 84e:	87 95       	ror	r24
 850:	97 f9       	bld	r25, 7
 852:	08 95       	ret

00000854 <__divmodhi4>:
 854:	97 fb       	bst	r25, 7
 856:	07 2e       	mov	r0, r23
 858:	16 f4       	brtc	.+4      	; 0x85e <__divmodhi4+0xa>
 85a:	00 94       	com	r0
 85c:	06 d0       	rcall	.+12     	; 0x86a <__divmodhi4_neg1>
 85e:	77 fd       	sbrc	r23, 7
 860:	08 d0       	rcall	.+16     	; 0x872 <__divmodhi4_neg2>
 862:	0b d0       	rcall	.+22     	; 0x87a <__udivmodhi4>
 864:	07 fc       	sbrc	r0, 7
 866:	05 d0       	rcall	.+10     	; 0x872 <__divmodhi4_neg2>
 868:	3e f4       	brtc	.+14     	; 0x878 <__divmodhi4_exit>

0000086a <__divmodhi4_neg1>:
 86a:	90 95       	com	r25
 86c:	81 95       	neg	r24
 86e:	9f 4f       	sbci	r25, 0xFF	; 255
 870:	08 95       	ret

00000872 <__divmodhi4_neg2>:
 872:	70 95       	com	r23
 874:	61 95       	neg	r22
 876:	7f 4f       	sbci	r23, 0xFF	; 255

00000878 <__divmodhi4_exit>:
 878:	08 95       	ret

0000087a <__udivmodhi4>:
 87a:	aa 1b       	sub	r26, r26
 87c:	bb 1b       	sub	r27, r27
 87e:	51 e1       	ldi	r21, 0x11	; 17
 880:	07 c0       	rjmp	.+14     	; 0x890 <__udivmodhi4_ep>

00000882 <__udivmodhi4_loop>:
 882:	aa 1f       	adc	r26, r26
 884:	bb 1f       	adc	r27, r27
 886:	a6 17       	cp	r26, r22
 888:	b7 07       	cpc	r27, r23
 88a:	10 f0       	brcs	.+4      	; 0x890 <__udivmodhi4_ep>
 88c:	a6 1b       	sub	r26, r22
 88e:	b7 0b       	sbc	r27, r23

00000890 <__udivmodhi4_ep>:
 890:	88 1f       	adc	r24, r24
 892:	99 1f       	adc	r25, r25
 894:	5a 95       	dec	r21
 896:	a9 f7       	brne	.-22     	; 0x882 <__udivmodhi4_loop>
 898:	80 95       	com	r24
 89a:	90 95       	com	r25
 89c:	bc 01       	movw	r22, r24
 89e:	cd 01       	movw	r24, r26
 8a0:	08 95       	ret

000008a2 <printf>:
 8a2:	cf 93       	push	r28
 8a4:	df 93       	push	r29
 8a6:	cd b7       	in	r28, 0x3d	; 61
 8a8:	de b7       	in	r29, 0x3e	; 62
 8aa:	ae 01       	movw	r20, r28
 8ac:	4b 5f       	subi	r20, 0xFB	; 251
 8ae:	5f 4f       	sbci	r21, 0xFF	; 255
 8b0:	fa 01       	movw	r30, r20
 8b2:	61 91       	ld	r22, Z+
 8b4:	71 91       	ld	r23, Z+
 8b6:	af 01       	movw	r20, r30
 8b8:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <__iob+0x2>
 8bc:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <__iob+0x3>
 8c0:	31 d0       	rcall	.+98     	; 0x924 <vfprintf>
 8c2:	df 91       	pop	r29
 8c4:	cf 91       	pop	r28
 8c6:	08 95       	ret

000008c8 <sprintf>:
 8c8:	0f 93       	push	r16
 8ca:	1f 93       	push	r17
 8cc:	cf 93       	push	r28
 8ce:	df 93       	push	r29
 8d0:	cd b7       	in	r28, 0x3d	; 61
 8d2:	de b7       	in	r29, 0x3e	; 62
 8d4:	2e 97       	sbiw	r28, 0x0e	; 14
 8d6:	0f b6       	in	r0, 0x3f	; 63
 8d8:	f8 94       	cli
 8da:	de bf       	out	0x3e, r29	; 62
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	cd bf       	out	0x3d, r28	; 61
 8e0:	0d 89       	ldd	r16, Y+21	; 0x15
 8e2:	1e 89       	ldd	r17, Y+22	; 0x16
 8e4:	86 e0       	ldi	r24, 0x06	; 6
 8e6:	8c 83       	std	Y+4, r24	; 0x04
 8e8:	1a 83       	std	Y+2, r17	; 0x02
 8ea:	09 83       	std	Y+1, r16	; 0x01
 8ec:	8f ef       	ldi	r24, 0xFF	; 255
 8ee:	9f e7       	ldi	r25, 0x7F	; 127
 8f0:	9e 83       	std	Y+6, r25	; 0x06
 8f2:	8d 83       	std	Y+5, r24	; 0x05
 8f4:	ae 01       	movw	r20, r28
 8f6:	47 5e       	subi	r20, 0xE7	; 231
 8f8:	5f 4f       	sbci	r21, 0xFF	; 255
 8fa:	6f 89       	ldd	r22, Y+23	; 0x17
 8fc:	78 8d       	ldd	r23, Y+24	; 0x18
 8fe:	ce 01       	movw	r24, r28
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	10 d0       	rcall	.+32     	; 0x924 <vfprintf>
 904:	ef 81       	ldd	r30, Y+7	; 0x07
 906:	f8 85       	ldd	r31, Y+8	; 0x08
 908:	e0 0f       	add	r30, r16
 90a:	f1 1f       	adc	r31, r17
 90c:	10 82       	st	Z, r1
 90e:	2e 96       	adiw	r28, 0x0e	; 14
 910:	0f b6       	in	r0, 0x3f	; 63
 912:	f8 94       	cli
 914:	de bf       	out	0x3e, r29	; 62
 916:	0f be       	out	0x3f, r0	; 63
 918:	cd bf       	out	0x3d, r28	; 61
 91a:	df 91       	pop	r29
 91c:	cf 91       	pop	r28
 91e:	1f 91       	pop	r17
 920:	0f 91       	pop	r16
 922:	08 95       	ret

00000924 <vfprintf>:
 924:	2f 92       	push	r2
 926:	3f 92       	push	r3
 928:	4f 92       	push	r4
 92a:	5f 92       	push	r5
 92c:	6f 92       	push	r6
 92e:	7f 92       	push	r7
 930:	8f 92       	push	r8
 932:	9f 92       	push	r9
 934:	af 92       	push	r10
 936:	bf 92       	push	r11
 938:	cf 92       	push	r12
 93a:	df 92       	push	r13
 93c:	ef 92       	push	r14
 93e:	ff 92       	push	r15
 940:	0f 93       	push	r16
 942:	1f 93       	push	r17
 944:	cf 93       	push	r28
 946:	df 93       	push	r29
 948:	cd b7       	in	r28, 0x3d	; 61
 94a:	de b7       	in	r29, 0x3e	; 62
 94c:	2b 97       	sbiw	r28, 0x0b	; 11
 94e:	0f b6       	in	r0, 0x3f	; 63
 950:	f8 94       	cli
 952:	de bf       	out	0x3e, r29	; 62
 954:	0f be       	out	0x3f, r0	; 63
 956:	cd bf       	out	0x3d, r28	; 61
 958:	6c 01       	movw	r12, r24
 95a:	7b 01       	movw	r14, r22
 95c:	8a 01       	movw	r16, r20
 95e:	fc 01       	movw	r30, r24
 960:	17 82       	std	Z+7, r1	; 0x07
 962:	16 82       	std	Z+6, r1	; 0x06
 964:	83 81       	ldd	r24, Z+3	; 0x03
 966:	81 ff       	sbrs	r24, 1
 968:	bf c1       	rjmp	.+894    	; 0xce8 <vfprintf+0x3c4>
 96a:	ce 01       	movw	r24, r28
 96c:	01 96       	adiw	r24, 0x01	; 1
 96e:	3c 01       	movw	r6, r24
 970:	f6 01       	movw	r30, r12
 972:	93 81       	ldd	r25, Z+3	; 0x03
 974:	f7 01       	movw	r30, r14
 976:	93 fd       	sbrc	r25, 3
 978:	85 91       	lpm	r24, Z+
 97a:	93 ff       	sbrs	r25, 3
 97c:	81 91       	ld	r24, Z+
 97e:	7f 01       	movw	r14, r30
 980:	88 23       	and	r24, r24
 982:	09 f4       	brne	.+2      	; 0x986 <vfprintf+0x62>
 984:	ad c1       	rjmp	.+858    	; 0xce0 <vfprintf+0x3bc>
 986:	85 32       	cpi	r24, 0x25	; 37
 988:	39 f4       	brne	.+14     	; 0x998 <vfprintf+0x74>
 98a:	93 fd       	sbrc	r25, 3
 98c:	85 91       	lpm	r24, Z+
 98e:	93 ff       	sbrs	r25, 3
 990:	81 91       	ld	r24, Z+
 992:	7f 01       	movw	r14, r30
 994:	85 32       	cpi	r24, 0x25	; 37
 996:	21 f4       	brne	.+8      	; 0x9a0 <vfprintf+0x7c>
 998:	b6 01       	movw	r22, r12
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	d6 d1       	rcall	.+940    	; 0xd4a <fputc>
 99e:	e8 cf       	rjmp	.-48     	; 0x970 <vfprintf+0x4c>
 9a0:	91 2c       	mov	r9, r1
 9a2:	21 2c       	mov	r2, r1
 9a4:	31 2c       	mov	r3, r1
 9a6:	ff e1       	ldi	r31, 0x1F	; 31
 9a8:	f3 15       	cp	r31, r3
 9aa:	d8 f0       	brcs	.+54     	; 0x9e2 <vfprintf+0xbe>
 9ac:	8b 32       	cpi	r24, 0x2B	; 43
 9ae:	79 f0       	breq	.+30     	; 0x9ce <vfprintf+0xaa>
 9b0:	38 f4       	brcc	.+14     	; 0x9c0 <vfprintf+0x9c>
 9b2:	80 32       	cpi	r24, 0x20	; 32
 9b4:	79 f0       	breq	.+30     	; 0x9d4 <vfprintf+0xb0>
 9b6:	83 32       	cpi	r24, 0x23	; 35
 9b8:	a1 f4       	brne	.+40     	; 0x9e2 <vfprintf+0xbe>
 9ba:	23 2d       	mov	r18, r3
 9bc:	20 61       	ori	r18, 0x10	; 16
 9be:	1d c0       	rjmp	.+58     	; 0x9fa <vfprintf+0xd6>
 9c0:	8d 32       	cpi	r24, 0x2D	; 45
 9c2:	61 f0       	breq	.+24     	; 0x9dc <vfprintf+0xb8>
 9c4:	80 33       	cpi	r24, 0x30	; 48
 9c6:	69 f4       	brne	.+26     	; 0x9e2 <vfprintf+0xbe>
 9c8:	23 2d       	mov	r18, r3
 9ca:	21 60       	ori	r18, 0x01	; 1
 9cc:	16 c0       	rjmp	.+44     	; 0x9fa <vfprintf+0xd6>
 9ce:	83 2d       	mov	r24, r3
 9d0:	82 60       	ori	r24, 0x02	; 2
 9d2:	38 2e       	mov	r3, r24
 9d4:	e3 2d       	mov	r30, r3
 9d6:	e4 60       	ori	r30, 0x04	; 4
 9d8:	3e 2e       	mov	r3, r30
 9da:	2a c0       	rjmp	.+84     	; 0xa30 <vfprintf+0x10c>
 9dc:	f3 2d       	mov	r31, r3
 9de:	f8 60       	ori	r31, 0x08	; 8
 9e0:	1d c0       	rjmp	.+58     	; 0xa1c <vfprintf+0xf8>
 9e2:	37 fc       	sbrc	r3, 7
 9e4:	2d c0       	rjmp	.+90     	; 0xa40 <vfprintf+0x11c>
 9e6:	20 ed       	ldi	r18, 0xD0	; 208
 9e8:	28 0f       	add	r18, r24
 9ea:	2a 30       	cpi	r18, 0x0A	; 10
 9ec:	40 f0       	brcs	.+16     	; 0x9fe <vfprintf+0xda>
 9ee:	8e 32       	cpi	r24, 0x2E	; 46
 9f0:	b9 f4       	brne	.+46     	; 0xa20 <vfprintf+0xfc>
 9f2:	36 fc       	sbrc	r3, 6
 9f4:	75 c1       	rjmp	.+746    	; 0xce0 <vfprintf+0x3bc>
 9f6:	23 2d       	mov	r18, r3
 9f8:	20 64       	ori	r18, 0x40	; 64
 9fa:	32 2e       	mov	r3, r18
 9fc:	19 c0       	rjmp	.+50     	; 0xa30 <vfprintf+0x10c>
 9fe:	36 fe       	sbrs	r3, 6
 a00:	06 c0       	rjmp	.+12     	; 0xa0e <vfprintf+0xea>
 a02:	8a e0       	ldi	r24, 0x0A	; 10
 a04:	98 9e       	mul	r9, r24
 a06:	20 0d       	add	r18, r0
 a08:	11 24       	eor	r1, r1
 a0a:	92 2e       	mov	r9, r18
 a0c:	11 c0       	rjmp	.+34     	; 0xa30 <vfprintf+0x10c>
 a0e:	ea e0       	ldi	r30, 0x0A	; 10
 a10:	2e 9e       	mul	r2, r30
 a12:	20 0d       	add	r18, r0
 a14:	11 24       	eor	r1, r1
 a16:	22 2e       	mov	r2, r18
 a18:	f3 2d       	mov	r31, r3
 a1a:	f0 62       	ori	r31, 0x20	; 32
 a1c:	3f 2e       	mov	r3, r31
 a1e:	08 c0       	rjmp	.+16     	; 0xa30 <vfprintf+0x10c>
 a20:	8c 36       	cpi	r24, 0x6C	; 108
 a22:	21 f4       	brne	.+8      	; 0xa2c <vfprintf+0x108>
 a24:	83 2d       	mov	r24, r3
 a26:	80 68       	ori	r24, 0x80	; 128
 a28:	38 2e       	mov	r3, r24
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <vfprintf+0x10c>
 a2c:	88 36       	cpi	r24, 0x68	; 104
 a2e:	41 f4       	brne	.+16     	; 0xa40 <vfprintf+0x11c>
 a30:	f7 01       	movw	r30, r14
 a32:	93 fd       	sbrc	r25, 3
 a34:	85 91       	lpm	r24, Z+
 a36:	93 ff       	sbrs	r25, 3
 a38:	81 91       	ld	r24, Z+
 a3a:	7f 01       	movw	r14, r30
 a3c:	81 11       	cpse	r24, r1
 a3e:	b3 cf       	rjmp	.-154    	; 0x9a6 <vfprintf+0x82>
 a40:	98 2f       	mov	r25, r24
 a42:	9f 7d       	andi	r25, 0xDF	; 223
 a44:	95 54       	subi	r25, 0x45	; 69
 a46:	93 30       	cpi	r25, 0x03	; 3
 a48:	28 f4       	brcc	.+10     	; 0xa54 <vfprintf+0x130>
 a4a:	0c 5f       	subi	r16, 0xFC	; 252
 a4c:	1f 4f       	sbci	r17, 0xFF	; 255
 a4e:	9f e3       	ldi	r25, 0x3F	; 63
 a50:	99 83       	std	Y+1, r25	; 0x01
 a52:	0d c0       	rjmp	.+26     	; 0xa6e <vfprintf+0x14a>
 a54:	83 36       	cpi	r24, 0x63	; 99
 a56:	31 f0       	breq	.+12     	; 0xa64 <vfprintf+0x140>
 a58:	83 37       	cpi	r24, 0x73	; 115
 a5a:	71 f0       	breq	.+28     	; 0xa78 <vfprintf+0x154>
 a5c:	83 35       	cpi	r24, 0x53	; 83
 a5e:	09 f0       	breq	.+2      	; 0xa62 <vfprintf+0x13e>
 a60:	55 c0       	rjmp	.+170    	; 0xb0c <vfprintf+0x1e8>
 a62:	20 c0       	rjmp	.+64     	; 0xaa4 <vfprintf+0x180>
 a64:	f8 01       	movw	r30, r16
 a66:	80 81       	ld	r24, Z
 a68:	89 83       	std	Y+1, r24	; 0x01
 a6a:	0e 5f       	subi	r16, 0xFE	; 254
 a6c:	1f 4f       	sbci	r17, 0xFF	; 255
 a6e:	88 24       	eor	r8, r8
 a70:	83 94       	inc	r8
 a72:	91 2c       	mov	r9, r1
 a74:	53 01       	movw	r10, r6
 a76:	12 c0       	rjmp	.+36     	; 0xa9c <vfprintf+0x178>
 a78:	28 01       	movw	r4, r16
 a7a:	f2 e0       	ldi	r31, 0x02	; 2
 a7c:	4f 0e       	add	r4, r31
 a7e:	51 1c       	adc	r5, r1
 a80:	f8 01       	movw	r30, r16
 a82:	a0 80       	ld	r10, Z
 a84:	b1 80       	ldd	r11, Z+1	; 0x01
 a86:	36 fe       	sbrs	r3, 6
 a88:	03 c0       	rjmp	.+6      	; 0xa90 <vfprintf+0x16c>
 a8a:	69 2d       	mov	r22, r9
 a8c:	70 e0       	ldi	r23, 0x00	; 0
 a8e:	02 c0       	rjmp	.+4      	; 0xa94 <vfprintf+0x170>
 a90:	6f ef       	ldi	r22, 0xFF	; 255
 a92:	7f ef       	ldi	r23, 0xFF	; 255
 a94:	c5 01       	movw	r24, r10
 a96:	4e d1       	rcall	.+668    	; 0xd34 <strnlen>
 a98:	4c 01       	movw	r8, r24
 a9a:	82 01       	movw	r16, r4
 a9c:	f3 2d       	mov	r31, r3
 a9e:	ff 77       	andi	r31, 0x7F	; 127
 aa0:	3f 2e       	mov	r3, r31
 aa2:	15 c0       	rjmp	.+42     	; 0xace <vfprintf+0x1aa>
 aa4:	28 01       	movw	r4, r16
 aa6:	22 e0       	ldi	r18, 0x02	; 2
 aa8:	42 0e       	add	r4, r18
 aaa:	51 1c       	adc	r5, r1
 aac:	f8 01       	movw	r30, r16
 aae:	a0 80       	ld	r10, Z
 ab0:	b1 80       	ldd	r11, Z+1	; 0x01
 ab2:	36 fe       	sbrs	r3, 6
 ab4:	03 c0       	rjmp	.+6      	; 0xabc <vfprintf+0x198>
 ab6:	69 2d       	mov	r22, r9
 ab8:	70 e0       	ldi	r23, 0x00	; 0
 aba:	02 c0       	rjmp	.+4      	; 0xac0 <vfprintf+0x19c>
 abc:	6f ef       	ldi	r22, 0xFF	; 255
 abe:	7f ef       	ldi	r23, 0xFF	; 255
 ac0:	c5 01       	movw	r24, r10
 ac2:	2d d1       	rcall	.+602    	; 0xd1e <strnlen_P>
 ac4:	4c 01       	movw	r8, r24
 ac6:	f3 2d       	mov	r31, r3
 ac8:	f0 68       	ori	r31, 0x80	; 128
 aca:	3f 2e       	mov	r3, r31
 acc:	82 01       	movw	r16, r4
 ace:	33 fc       	sbrc	r3, 3
 ad0:	19 c0       	rjmp	.+50     	; 0xb04 <vfprintf+0x1e0>
 ad2:	82 2d       	mov	r24, r2
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	88 16       	cp	r8, r24
 ad8:	99 06       	cpc	r9, r25
 ada:	a0 f4       	brcc	.+40     	; 0xb04 <vfprintf+0x1e0>
 adc:	b6 01       	movw	r22, r12
 ade:	80 e2       	ldi	r24, 0x20	; 32
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	33 d1       	rcall	.+614    	; 0xd4a <fputc>
 ae4:	2a 94       	dec	r2
 ae6:	f5 cf       	rjmp	.-22     	; 0xad2 <vfprintf+0x1ae>
 ae8:	f5 01       	movw	r30, r10
 aea:	37 fc       	sbrc	r3, 7
 aec:	85 91       	lpm	r24, Z+
 aee:	37 fe       	sbrs	r3, 7
 af0:	81 91       	ld	r24, Z+
 af2:	5f 01       	movw	r10, r30
 af4:	b6 01       	movw	r22, r12
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	28 d1       	rcall	.+592    	; 0xd4a <fputc>
 afa:	21 10       	cpse	r2, r1
 afc:	2a 94       	dec	r2
 afe:	21 e0       	ldi	r18, 0x01	; 1
 b00:	82 1a       	sub	r8, r18
 b02:	91 08       	sbc	r9, r1
 b04:	81 14       	cp	r8, r1
 b06:	91 04       	cpc	r9, r1
 b08:	79 f7       	brne	.-34     	; 0xae8 <vfprintf+0x1c4>
 b0a:	e1 c0       	rjmp	.+450    	; 0xcce <vfprintf+0x3aa>
 b0c:	84 36       	cpi	r24, 0x64	; 100
 b0e:	11 f0       	breq	.+4      	; 0xb14 <vfprintf+0x1f0>
 b10:	89 36       	cpi	r24, 0x69	; 105
 b12:	39 f5       	brne	.+78     	; 0xb62 <vfprintf+0x23e>
 b14:	f8 01       	movw	r30, r16
 b16:	37 fe       	sbrs	r3, 7
 b18:	07 c0       	rjmp	.+14     	; 0xb28 <vfprintf+0x204>
 b1a:	60 81       	ld	r22, Z
 b1c:	71 81       	ldd	r23, Z+1	; 0x01
 b1e:	82 81       	ldd	r24, Z+2	; 0x02
 b20:	93 81       	ldd	r25, Z+3	; 0x03
 b22:	0c 5f       	subi	r16, 0xFC	; 252
 b24:	1f 4f       	sbci	r17, 0xFF	; 255
 b26:	08 c0       	rjmp	.+16     	; 0xb38 <vfprintf+0x214>
 b28:	60 81       	ld	r22, Z
 b2a:	71 81       	ldd	r23, Z+1	; 0x01
 b2c:	07 2e       	mov	r0, r23
 b2e:	00 0c       	add	r0, r0
 b30:	88 0b       	sbc	r24, r24
 b32:	99 0b       	sbc	r25, r25
 b34:	0e 5f       	subi	r16, 0xFE	; 254
 b36:	1f 4f       	sbci	r17, 0xFF	; 255
 b38:	f3 2d       	mov	r31, r3
 b3a:	ff 76       	andi	r31, 0x6F	; 111
 b3c:	3f 2e       	mov	r3, r31
 b3e:	97 ff       	sbrs	r25, 7
 b40:	09 c0       	rjmp	.+18     	; 0xb54 <vfprintf+0x230>
 b42:	90 95       	com	r25
 b44:	80 95       	com	r24
 b46:	70 95       	com	r23
 b48:	61 95       	neg	r22
 b4a:	7f 4f       	sbci	r23, 0xFF	; 255
 b4c:	8f 4f       	sbci	r24, 0xFF	; 255
 b4e:	9f 4f       	sbci	r25, 0xFF	; 255
 b50:	f0 68       	ori	r31, 0x80	; 128
 b52:	3f 2e       	mov	r3, r31
 b54:	2a e0       	ldi	r18, 0x0A	; 10
 b56:	30 e0       	ldi	r19, 0x00	; 0
 b58:	a3 01       	movw	r20, r6
 b5a:	33 d1       	rcall	.+614    	; 0xdc2 <__ultoa_invert>
 b5c:	88 2e       	mov	r8, r24
 b5e:	86 18       	sub	r8, r6
 b60:	44 c0       	rjmp	.+136    	; 0xbea <vfprintf+0x2c6>
 b62:	85 37       	cpi	r24, 0x75	; 117
 b64:	31 f4       	brne	.+12     	; 0xb72 <vfprintf+0x24e>
 b66:	23 2d       	mov	r18, r3
 b68:	2f 7e       	andi	r18, 0xEF	; 239
 b6a:	b2 2e       	mov	r11, r18
 b6c:	2a e0       	ldi	r18, 0x0A	; 10
 b6e:	30 e0       	ldi	r19, 0x00	; 0
 b70:	25 c0       	rjmp	.+74     	; 0xbbc <vfprintf+0x298>
 b72:	93 2d       	mov	r25, r3
 b74:	99 7f       	andi	r25, 0xF9	; 249
 b76:	b9 2e       	mov	r11, r25
 b78:	8f 36       	cpi	r24, 0x6F	; 111
 b7a:	c1 f0       	breq	.+48     	; 0xbac <vfprintf+0x288>
 b7c:	18 f4       	brcc	.+6      	; 0xb84 <vfprintf+0x260>
 b7e:	88 35       	cpi	r24, 0x58	; 88
 b80:	79 f0       	breq	.+30     	; 0xba0 <vfprintf+0x27c>
 b82:	ae c0       	rjmp	.+348    	; 0xce0 <vfprintf+0x3bc>
 b84:	80 37       	cpi	r24, 0x70	; 112
 b86:	19 f0       	breq	.+6      	; 0xb8e <vfprintf+0x26a>
 b88:	88 37       	cpi	r24, 0x78	; 120
 b8a:	21 f0       	breq	.+8      	; 0xb94 <vfprintf+0x270>
 b8c:	a9 c0       	rjmp	.+338    	; 0xce0 <vfprintf+0x3bc>
 b8e:	e9 2f       	mov	r30, r25
 b90:	e0 61       	ori	r30, 0x10	; 16
 b92:	be 2e       	mov	r11, r30
 b94:	b4 fe       	sbrs	r11, 4
 b96:	0d c0       	rjmp	.+26     	; 0xbb2 <vfprintf+0x28e>
 b98:	fb 2d       	mov	r31, r11
 b9a:	f4 60       	ori	r31, 0x04	; 4
 b9c:	bf 2e       	mov	r11, r31
 b9e:	09 c0       	rjmp	.+18     	; 0xbb2 <vfprintf+0x28e>
 ba0:	34 fe       	sbrs	r3, 4
 ba2:	0a c0       	rjmp	.+20     	; 0xbb8 <vfprintf+0x294>
 ba4:	29 2f       	mov	r18, r25
 ba6:	26 60       	ori	r18, 0x06	; 6
 ba8:	b2 2e       	mov	r11, r18
 baa:	06 c0       	rjmp	.+12     	; 0xbb8 <vfprintf+0x294>
 bac:	28 e0       	ldi	r18, 0x08	; 8
 bae:	30 e0       	ldi	r19, 0x00	; 0
 bb0:	05 c0       	rjmp	.+10     	; 0xbbc <vfprintf+0x298>
 bb2:	20 e1       	ldi	r18, 0x10	; 16
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	02 c0       	rjmp	.+4      	; 0xbbc <vfprintf+0x298>
 bb8:	20 e1       	ldi	r18, 0x10	; 16
 bba:	32 e0       	ldi	r19, 0x02	; 2
 bbc:	f8 01       	movw	r30, r16
 bbe:	b7 fe       	sbrs	r11, 7
 bc0:	07 c0       	rjmp	.+14     	; 0xbd0 <vfprintf+0x2ac>
 bc2:	60 81       	ld	r22, Z
 bc4:	71 81       	ldd	r23, Z+1	; 0x01
 bc6:	82 81       	ldd	r24, Z+2	; 0x02
 bc8:	93 81       	ldd	r25, Z+3	; 0x03
 bca:	0c 5f       	subi	r16, 0xFC	; 252
 bcc:	1f 4f       	sbci	r17, 0xFF	; 255
 bce:	06 c0       	rjmp	.+12     	; 0xbdc <vfprintf+0x2b8>
 bd0:	60 81       	ld	r22, Z
 bd2:	71 81       	ldd	r23, Z+1	; 0x01
 bd4:	80 e0       	ldi	r24, 0x00	; 0
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	0e 5f       	subi	r16, 0xFE	; 254
 bda:	1f 4f       	sbci	r17, 0xFF	; 255
 bdc:	a3 01       	movw	r20, r6
 bde:	f1 d0       	rcall	.+482    	; 0xdc2 <__ultoa_invert>
 be0:	88 2e       	mov	r8, r24
 be2:	86 18       	sub	r8, r6
 be4:	fb 2d       	mov	r31, r11
 be6:	ff 77       	andi	r31, 0x7F	; 127
 be8:	3f 2e       	mov	r3, r31
 bea:	36 fe       	sbrs	r3, 6
 bec:	0d c0       	rjmp	.+26     	; 0xc08 <vfprintf+0x2e4>
 bee:	23 2d       	mov	r18, r3
 bf0:	2e 7f       	andi	r18, 0xFE	; 254
 bf2:	a2 2e       	mov	r10, r18
 bf4:	89 14       	cp	r8, r9
 bf6:	58 f4       	brcc	.+22     	; 0xc0e <vfprintf+0x2ea>
 bf8:	34 fe       	sbrs	r3, 4
 bfa:	0b c0       	rjmp	.+22     	; 0xc12 <vfprintf+0x2ee>
 bfc:	32 fc       	sbrc	r3, 2
 bfe:	09 c0       	rjmp	.+18     	; 0xc12 <vfprintf+0x2ee>
 c00:	83 2d       	mov	r24, r3
 c02:	8e 7e       	andi	r24, 0xEE	; 238
 c04:	a8 2e       	mov	r10, r24
 c06:	05 c0       	rjmp	.+10     	; 0xc12 <vfprintf+0x2ee>
 c08:	b8 2c       	mov	r11, r8
 c0a:	a3 2c       	mov	r10, r3
 c0c:	03 c0       	rjmp	.+6      	; 0xc14 <vfprintf+0x2f0>
 c0e:	b8 2c       	mov	r11, r8
 c10:	01 c0       	rjmp	.+2      	; 0xc14 <vfprintf+0x2f0>
 c12:	b9 2c       	mov	r11, r9
 c14:	a4 fe       	sbrs	r10, 4
 c16:	0f c0       	rjmp	.+30     	; 0xc36 <vfprintf+0x312>
 c18:	fe 01       	movw	r30, r28
 c1a:	e8 0d       	add	r30, r8
 c1c:	f1 1d       	adc	r31, r1
 c1e:	80 81       	ld	r24, Z
 c20:	80 33       	cpi	r24, 0x30	; 48
 c22:	21 f4       	brne	.+8      	; 0xc2c <vfprintf+0x308>
 c24:	9a 2d       	mov	r25, r10
 c26:	99 7e       	andi	r25, 0xE9	; 233
 c28:	a9 2e       	mov	r10, r25
 c2a:	09 c0       	rjmp	.+18     	; 0xc3e <vfprintf+0x31a>
 c2c:	a2 fe       	sbrs	r10, 2
 c2e:	06 c0       	rjmp	.+12     	; 0xc3c <vfprintf+0x318>
 c30:	b3 94       	inc	r11
 c32:	b3 94       	inc	r11
 c34:	04 c0       	rjmp	.+8      	; 0xc3e <vfprintf+0x31a>
 c36:	8a 2d       	mov	r24, r10
 c38:	86 78       	andi	r24, 0x86	; 134
 c3a:	09 f0       	breq	.+2      	; 0xc3e <vfprintf+0x31a>
 c3c:	b3 94       	inc	r11
 c3e:	a3 fc       	sbrc	r10, 3
 c40:	10 c0       	rjmp	.+32     	; 0xc62 <vfprintf+0x33e>
 c42:	a0 fe       	sbrs	r10, 0
 c44:	06 c0       	rjmp	.+12     	; 0xc52 <vfprintf+0x32e>
 c46:	b2 14       	cp	r11, r2
 c48:	80 f4       	brcc	.+32     	; 0xc6a <vfprintf+0x346>
 c4a:	28 0c       	add	r2, r8
 c4c:	92 2c       	mov	r9, r2
 c4e:	9b 18       	sub	r9, r11
 c50:	0d c0       	rjmp	.+26     	; 0xc6c <vfprintf+0x348>
 c52:	b2 14       	cp	r11, r2
 c54:	58 f4       	brcc	.+22     	; 0xc6c <vfprintf+0x348>
 c56:	b6 01       	movw	r22, r12
 c58:	80 e2       	ldi	r24, 0x20	; 32
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	76 d0       	rcall	.+236    	; 0xd4a <fputc>
 c5e:	b3 94       	inc	r11
 c60:	f8 cf       	rjmp	.-16     	; 0xc52 <vfprintf+0x32e>
 c62:	b2 14       	cp	r11, r2
 c64:	18 f4       	brcc	.+6      	; 0xc6c <vfprintf+0x348>
 c66:	2b 18       	sub	r2, r11
 c68:	02 c0       	rjmp	.+4      	; 0xc6e <vfprintf+0x34a>
 c6a:	98 2c       	mov	r9, r8
 c6c:	21 2c       	mov	r2, r1
 c6e:	a4 fe       	sbrs	r10, 4
 c70:	0f c0       	rjmp	.+30     	; 0xc90 <vfprintf+0x36c>
 c72:	b6 01       	movw	r22, r12
 c74:	80 e3       	ldi	r24, 0x30	; 48
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	68 d0       	rcall	.+208    	; 0xd4a <fputc>
 c7a:	a2 fe       	sbrs	r10, 2
 c7c:	16 c0       	rjmp	.+44     	; 0xcaa <vfprintf+0x386>
 c7e:	a1 fc       	sbrc	r10, 1
 c80:	03 c0       	rjmp	.+6      	; 0xc88 <vfprintf+0x364>
 c82:	88 e7       	ldi	r24, 0x78	; 120
 c84:	90 e0       	ldi	r25, 0x00	; 0
 c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x368>
 c88:	88 e5       	ldi	r24, 0x58	; 88
 c8a:	90 e0       	ldi	r25, 0x00	; 0
 c8c:	b6 01       	movw	r22, r12
 c8e:	0c c0       	rjmp	.+24     	; 0xca8 <vfprintf+0x384>
 c90:	8a 2d       	mov	r24, r10
 c92:	86 78       	andi	r24, 0x86	; 134
 c94:	51 f0       	breq	.+20     	; 0xcaa <vfprintf+0x386>
 c96:	a1 fe       	sbrs	r10, 1
 c98:	02 c0       	rjmp	.+4      	; 0xc9e <vfprintf+0x37a>
 c9a:	8b e2       	ldi	r24, 0x2B	; 43
 c9c:	01 c0       	rjmp	.+2      	; 0xca0 <vfprintf+0x37c>
 c9e:	80 e2       	ldi	r24, 0x20	; 32
 ca0:	a7 fc       	sbrc	r10, 7
 ca2:	8d e2       	ldi	r24, 0x2D	; 45
 ca4:	b6 01       	movw	r22, r12
 ca6:	90 e0       	ldi	r25, 0x00	; 0
 ca8:	50 d0       	rcall	.+160    	; 0xd4a <fputc>
 caa:	89 14       	cp	r8, r9
 cac:	30 f4       	brcc	.+12     	; 0xcba <vfprintf+0x396>
 cae:	b6 01       	movw	r22, r12
 cb0:	80 e3       	ldi	r24, 0x30	; 48
 cb2:	90 e0       	ldi	r25, 0x00	; 0
 cb4:	4a d0       	rcall	.+148    	; 0xd4a <fputc>
 cb6:	9a 94       	dec	r9
 cb8:	f8 cf       	rjmp	.-16     	; 0xcaa <vfprintf+0x386>
 cba:	8a 94       	dec	r8
 cbc:	f3 01       	movw	r30, r6
 cbe:	e8 0d       	add	r30, r8
 cc0:	f1 1d       	adc	r31, r1
 cc2:	80 81       	ld	r24, Z
 cc4:	b6 01       	movw	r22, r12
 cc6:	90 e0       	ldi	r25, 0x00	; 0
 cc8:	40 d0       	rcall	.+128    	; 0xd4a <fputc>
 cca:	81 10       	cpse	r8, r1
 ccc:	f6 cf       	rjmp	.-20     	; 0xcba <vfprintf+0x396>
 cce:	22 20       	and	r2, r2
 cd0:	09 f4       	brne	.+2      	; 0xcd4 <vfprintf+0x3b0>
 cd2:	4e ce       	rjmp	.-868    	; 0x970 <vfprintf+0x4c>
 cd4:	b6 01       	movw	r22, r12
 cd6:	80 e2       	ldi	r24, 0x20	; 32
 cd8:	90 e0       	ldi	r25, 0x00	; 0
 cda:	37 d0       	rcall	.+110    	; 0xd4a <fputc>
 cdc:	2a 94       	dec	r2
 cde:	f7 cf       	rjmp	.-18     	; 0xcce <vfprintf+0x3aa>
 ce0:	f6 01       	movw	r30, r12
 ce2:	86 81       	ldd	r24, Z+6	; 0x06
 ce4:	97 81       	ldd	r25, Z+7	; 0x07
 ce6:	02 c0       	rjmp	.+4      	; 0xcec <vfprintf+0x3c8>
 ce8:	8f ef       	ldi	r24, 0xFF	; 255
 cea:	9f ef       	ldi	r25, 0xFF	; 255
 cec:	2b 96       	adiw	r28, 0x0b	; 11
 cee:	0f b6       	in	r0, 0x3f	; 63
 cf0:	f8 94       	cli
 cf2:	de bf       	out	0x3e, r29	; 62
 cf4:	0f be       	out	0x3f, r0	; 63
 cf6:	cd bf       	out	0x3d, r28	; 61
 cf8:	df 91       	pop	r29
 cfa:	cf 91       	pop	r28
 cfc:	1f 91       	pop	r17
 cfe:	0f 91       	pop	r16
 d00:	ff 90       	pop	r15
 d02:	ef 90       	pop	r14
 d04:	df 90       	pop	r13
 d06:	cf 90       	pop	r12
 d08:	bf 90       	pop	r11
 d0a:	af 90       	pop	r10
 d0c:	9f 90       	pop	r9
 d0e:	8f 90       	pop	r8
 d10:	7f 90       	pop	r7
 d12:	6f 90       	pop	r6
 d14:	5f 90       	pop	r5
 d16:	4f 90       	pop	r4
 d18:	3f 90       	pop	r3
 d1a:	2f 90       	pop	r2
 d1c:	08 95       	ret

00000d1e <strnlen_P>:
 d1e:	fc 01       	movw	r30, r24
 d20:	05 90       	lpm	r0, Z+
 d22:	61 50       	subi	r22, 0x01	; 1
 d24:	70 40       	sbci	r23, 0x00	; 0
 d26:	01 10       	cpse	r0, r1
 d28:	d8 f7       	brcc	.-10     	; 0xd20 <strnlen_P+0x2>
 d2a:	80 95       	com	r24
 d2c:	90 95       	com	r25
 d2e:	8e 0f       	add	r24, r30
 d30:	9f 1f       	adc	r25, r31
 d32:	08 95       	ret

00000d34 <strnlen>:
 d34:	fc 01       	movw	r30, r24
 d36:	61 50       	subi	r22, 0x01	; 1
 d38:	70 40       	sbci	r23, 0x00	; 0
 d3a:	01 90       	ld	r0, Z+
 d3c:	01 10       	cpse	r0, r1
 d3e:	d8 f7       	brcc	.-10     	; 0xd36 <strnlen+0x2>
 d40:	80 95       	com	r24
 d42:	90 95       	com	r25
 d44:	8e 0f       	add	r24, r30
 d46:	9f 1f       	adc	r25, r31
 d48:	08 95       	ret

00000d4a <fputc>:
 d4a:	0f 93       	push	r16
 d4c:	1f 93       	push	r17
 d4e:	cf 93       	push	r28
 d50:	df 93       	push	r29
 d52:	fb 01       	movw	r30, r22
 d54:	23 81       	ldd	r18, Z+3	; 0x03
 d56:	21 fd       	sbrc	r18, 1
 d58:	03 c0       	rjmp	.+6      	; 0xd60 <fputc+0x16>
 d5a:	8f ef       	ldi	r24, 0xFF	; 255
 d5c:	9f ef       	ldi	r25, 0xFF	; 255
 d5e:	2c c0       	rjmp	.+88     	; 0xdb8 <fputc+0x6e>
 d60:	22 ff       	sbrs	r18, 2
 d62:	16 c0       	rjmp	.+44     	; 0xd90 <fputc+0x46>
 d64:	46 81       	ldd	r20, Z+6	; 0x06
 d66:	57 81       	ldd	r21, Z+7	; 0x07
 d68:	24 81       	ldd	r18, Z+4	; 0x04
 d6a:	35 81       	ldd	r19, Z+5	; 0x05
 d6c:	42 17       	cp	r20, r18
 d6e:	53 07       	cpc	r21, r19
 d70:	44 f4       	brge	.+16     	; 0xd82 <fputc+0x38>
 d72:	a0 81       	ld	r26, Z
 d74:	b1 81       	ldd	r27, Z+1	; 0x01
 d76:	9d 01       	movw	r18, r26
 d78:	2f 5f       	subi	r18, 0xFF	; 255
 d7a:	3f 4f       	sbci	r19, 0xFF	; 255
 d7c:	31 83       	std	Z+1, r19	; 0x01
 d7e:	20 83       	st	Z, r18
 d80:	8c 93       	st	X, r24
 d82:	26 81       	ldd	r18, Z+6	; 0x06
 d84:	37 81       	ldd	r19, Z+7	; 0x07
 d86:	2f 5f       	subi	r18, 0xFF	; 255
 d88:	3f 4f       	sbci	r19, 0xFF	; 255
 d8a:	37 83       	std	Z+7, r19	; 0x07
 d8c:	26 83       	std	Z+6, r18	; 0x06
 d8e:	14 c0       	rjmp	.+40     	; 0xdb8 <fputc+0x6e>
 d90:	8b 01       	movw	r16, r22
 d92:	ec 01       	movw	r28, r24
 d94:	fb 01       	movw	r30, r22
 d96:	00 84       	ldd	r0, Z+8	; 0x08
 d98:	f1 85       	ldd	r31, Z+9	; 0x09
 d9a:	e0 2d       	mov	r30, r0
 d9c:	09 95       	icall
 d9e:	89 2b       	or	r24, r25
 da0:	e1 f6       	brne	.-72     	; 0xd5a <fputc+0x10>
 da2:	d8 01       	movw	r26, r16
 da4:	16 96       	adiw	r26, 0x06	; 6
 da6:	8d 91       	ld	r24, X+
 da8:	9c 91       	ld	r25, X
 daa:	17 97       	sbiw	r26, 0x07	; 7
 dac:	01 96       	adiw	r24, 0x01	; 1
 dae:	17 96       	adiw	r26, 0x07	; 7
 db0:	9c 93       	st	X, r25
 db2:	8e 93       	st	-X, r24
 db4:	16 97       	sbiw	r26, 0x06	; 6
 db6:	ce 01       	movw	r24, r28
 db8:	df 91       	pop	r29
 dba:	cf 91       	pop	r28
 dbc:	1f 91       	pop	r17
 dbe:	0f 91       	pop	r16
 dc0:	08 95       	ret

00000dc2 <__ultoa_invert>:
 dc2:	fa 01       	movw	r30, r20
 dc4:	aa 27       	eor	r26, r26
 dc6:	28 30       	cpi	r18, 0x08	; 8
 dc8:	51 f1       	breq	.+84     	; 0xe1e <__ultoa_invert+0x5c>
 dca:	20 31       	cpi	r18, 0x10	; 16
 dcc:	81 f1       	breq	.+96     	; 0xe2e <__ultoa_invert+0x6c>
 dce:	e8 94       	clt
 dd0:	6f 93       	push	r22
 dd2:	6e 7f       	andi	r22, 0xFE	; 254
 dd4:	6e 5f       	subi	r22, 0xFE	; 254
 dd6:	7f 4f       	sbci	r23, 0xFF	; 255
 dd8:	8f 4f       	sbci	r24, 0xFF	; 255
 dda:	9f 4f       	sbci	r25, 0xFF	; 255
 ddc:	af 4f       	sbci	r26, 0xFF	; 255
 dde:	b1 e0       	ldi	r27, 0x01	; 1
 de0:	3e d0       	rcall	.+124    	; 0xe5e <__ultoa_invert+0x9c>
 de2:	b4 e0       	ldi	r27, 0x04	; 4
 de4:	3c d0       	rcall	.+120    	; 0xe5e <__ultoa_invert+0x9c>
 de6:	67 0f       	add	r22, r23
 de8:	78 1f       	adc	r23, r24
 dea:	89 1f       	adc	r24, r25
 dec:	9a 1f       	adc	r25, r26
 dee:	a1 1d       	adc	r26, r1
 df0:	68 0f       	add	r22, r24
 df2:	79 1f       	adc	r23, r25
 df4:	8a 1f       	adc	r24, r26
 df6:	91 1d       	adc	r25, r1
 df8:	a1 1d       	adc	r26, r1
 dfa:	6a 0f       	add	r22, r26
 dfc:	71 1d       	adc	r23, r1
 dfe:	81 1d       	adc	r24, r1
 e00:	91 1d       	adc	r25, r1
 e02:	a1 1d       	adc	r26, r1
 e04:	20 d0       	rcall	.+64     	; 0xe46 <__ultoa_invert+0x84>
 e06:	09 f4       	brne	.+2      	; 0xe0a <__ultoa_invert+0x48>
 e08:	68 94       	set
 e0a:	3f 91       	pop	r19
 e0c:	2a e0       	ldi	r18, 0x0A	; 10
 e0e:	26 9f       	mul	r18, r22
 e10:	11 24       	eor	r1, r1
 e12:	30 19       	sub	r19, r0
 e14:	30 5d       	subi	r19, 0xD0	; 208
 e16:	31 93       	st	Z+, r19
 e18:	de f6       	brtc	.-74     	; 0xdd0 <__ultoa_invert+0xe>
 e1a:	cf 01       	movw	r24, r30
 e1c:	08 95       	ret
 e1e:	46 2f       	mov	r20, r22
 e20:	47 70       	andi	r20, 0x07	; 7
 e22:	40 5d       	subi	r20, 0xD0	; 208
 e24:	41 93       	st	Z+, r20
 e26:	b3 e0       	ldi	r27, 0x03	; 3
 e28:	0f d0       	rcall	.+30     	; 0xe48 <__ultoa_invert+0x86>
 e2a:	c9 f7       	brne	.-14     	; 0xe1e <__ultoa_invert+0x5c>
 e2c:	f6 cf       	rjmp	.-20     	; 0xe1a <__ultoa_invert+0x58>
 e2e:	46 2f       	mov	r20, r22
 e30:	4f 70       	andi	r20, 0x0F	; 15
 e32:	40 5d       	subi	r20, 0xD0	; 208
 e34:	4a 33       	cpi	r20, 0x3A	; 58
 e36:	18 f0       	brcs	.+6      	; 0xe3e <__ultoa_invert+0x7c>
 e38:	49 5d       	subi	r20, 0xD9	; 217
 e3a:	31 fd       	sbrc	r19, 1
 e3c:	40 52       	subi	r20, 0x20	; 32
 e3e:	41 93       	st	Z+, r20
 e40:	02 d0       	rcall	.+4      	; 0xe46 <__ultoa_invert+0x84>
 e42:	a9 f7       	brne	.-22     	; 0xe2e <__ultoa_invert+0x6c>
 e44:	ea cf       	rjmp	.-44     	; 0xe1a <__ultoa_invert+0x58>
 e46:	b4 e0       	ldi	r27, 0x04	; 4
 e48:	a6 95       	lsr	r26
 e4a:	97 95       	ror	r25
 e4c:	87 95       	ror	r24
 e4e:	77 95       	ror	r23
 e50:	67 95       	ror	r22
 e52:	ba 95       	dec	r27
 e54:	c9 f7       	brne	.-14     	; 0xe48 <__ultoa_invert+0x86>
 e56:	00 97       	sbiw	r24, 0x00	; 0
 e58:	61 05       	cpc	r22, r1
 e5a:	71 05       	cpc	r23, r1
 e5c:	08 95       	ret
 e5e:	9b 01       	movw	r18, r22
 e60:	ac 01       	movw	r20, r24
 e62:	0a 2e       	mov	r0, r26
 e64:	06 94       	lsr	r0
 e66:	57 95       	ror	r21
 e68:	47 95       	ror	r20
 e6a:	37 95       	ror	r19
 e6c:	27 95       	ror	r18
 e6e:	ba 95       	dec	r27
 e70:	c9 f7       	brne	.-14     	; 0xe64 <__ultoa_invert+0xa2>
 e72:	62 0f       	add	r22, r18
 e74:	73 1f       	adc	r23, r19
 e76:	84 1f       	adc	r24, r20
 e78:	95 1f       	adc	r25, r21
 e7a:	a0 1d       	adc	r26, r0
 e7c:	08 95       	ret

00000e7e <_exit>:
 e7e:	f8 94       	cli

00000e80 <__stop_program>:
 e80:	ff cf       	rjmp	.-2      	; 0xe80 <__stop_program>
